KIDS Distribution saved on Apr 15, 2020@15:27:57
Dashboard and Rules Engine
**KIDS**:C9COS*1.0*1^

**INSTALL NAME**
C9COS*1.0*1
"BLD",9104,0)
C9COS*1.0*1^^0^3200415^n
"BLD",9104,1,0)
^^14^14^3200409^
"BLD",9104,1,1,0)
 Dashboard and Rules Engine
"BLD",9104,1,2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina]
"BLD",9104,1,3,0)
 ;
"BLD",9104,1,4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"BLD",9104,1,5,0)
 ; you may not use this file except in ;compliance with the License.
"BLD",9104,1,6,0)
 ;You may obtain a copy of the License at
"BLD",9104,1,7,0)
 ;
"BLD",9104,1,8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"BLD",9104,1,9,0)
 ;
"BLD",9104,1,10,0)
 ;Unless required by applicable law or agreed to in writing, software
"BLD",9104,1,11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"BLD",9104,1,12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"BLD",9104,1,13,0)
 ;See the License for the specific language governing permissions and
"BLD",9104,1,14,0)
 ;limitations under the License.
"BLD",9104,4,0)
^9.64PA^300890^4
"BLD",9104,4,300890,0)
300890
"BLD",9104,4,300890,222)
y^y^f^^^^n
"BLD",9104,4,300892,0)
300892
"BLD",9104,4,300892,222)
y^y^f^^n^^y^a^y
"BLD",9104,4,300894,0)
300894
"BLD",9104,4,300894,222)
y^y^f^^n^^y^a^y
"BLD",9104,4,300896,0)
300896
"BLD",9104,4,300896,222)
y^y^f^^^^n
"BLD",9104,4,"B",300890,300890)

"BLD",9104,4,"B",300892,300892)

"BLD",9104,4,"B",300894,300894)

"BLD",9104,4,"B",300896,300896)

"BLD",9104,6.3)
2
"BLD",9104,"KRN",0)
^9.67PA^779.2^20
"BLD",9104,"KRN",.4,0)
.4
"BLD",9104,"KRN",.401,0)
.401
"BLD",9104,"KRN",.402,0)
.402
"BLD",9104,"KRN",.403,0)
.403
"BLD",9104,"KRN",.5,0)
.5
"BLD",9104,"KRN",.84,0)
.84
"BLD",9104,"KRN",3.6,0)
3.6
"BLD",9104,"KRN",3.8,0)
3.8
"BLD",9104,"KRN",9.2,0)
9.2
"BLD",9104,"KRN",9.8,0)
9.8
"BLD",9104,"KRN",9.8,"NM",0)
^9.68A^23^23
"BLD",9104,"KRN",9.8,"NM",1,0)
C9CDBLB^^0^B593859
"BLD",9104,"KRN",9.8,"NM",2,0)
C9CDBUV^^0^B12399205
"BLD",9104,"KRN",9.8,"NM",3,0)
C9CDIS^^0^B29649805
"BLD",9104,"KRN",9.8,"NM",4,0)
C9CEXOR^^0^B7315294
"BLD",9104,"KRN",9.8,"NM",5,0)
C9CFCAST^^0^B2407679
"BLD",9104,"KRN",9.8,"NM",6,0)
C9CGDBM^^0^B28420070
"BLD",9104,"KRN",9.8,"NM",7,0)
C9CGDIV^^0^B582185
"BLD",9104,"KRN",9.8,"NM",8,0)
C9CGPL^^0^B51975
"BLD",9104,"KRN",9.8,"NM",9,0)
C9CGPV^^0^B52045
"BLD",9104,"KRN",9.8,"NM",10,0)
C9CMODCD^^0^B18952211
"BLD",9104,"KRN",9.8,"NM",11,0)
C9CMODCP^^0^B6782863
"BLD",9104,"KRN",9.8,"NM",12,0)
C9CMODCS^^0^B7469301
"BLD",9104,"KRN",9.8,"NM",13,0)
C9CMODND^^0^B1903840709
"BLD",9104,"KRN",9.8,"NM",14,0)
C9CMODNT^^0^B8329003
"BLD",9104,"KRN",9.8,"NM",15,0)
C9CMODPG^^0^B7534372
"BLD",9104,"KRN",9.8,"NM",16,0)
C9CMODRM^^0^B72352350
"BLD",9104,"KRN",9.8,"NM",17,0)
C9CMODSN^^0^B53309
"BLD",9104,"KRN",9.8,"NM",18,0)
C9CORIDE^^0^B321469540
"BLD",9104,"KRN",9.8,"NM",19,0)
C9CRTRPT^^0^B238359
"BLD",9104,"KRN",9.8,"NM",20,0)
C9CSTN^^0^B45546165
"BLD",9104,"KRN",9.8,"NM",21,0)
C9CWBS^^0^B115584234
"BLD",9104,"KRN",9.8,"NM",22,0)
C9CGSR^^0^B75883176
"BLD",9104,"KRN",9.8,"NM",23,0)
C9CTTLS^^0^B157495
"BLD",9104,"KRN",9.8,"NM","B","C9CDBLB",1)

"BLD",9104,"KRN",9.8,"NM","B","C9CDBUV",2)

"BLD",9104,"KRN",9.8,"NM","B","C9CDIS",3)

"BLD",9104,"KRN",9.8,"NM","B","C9CEXOR",4)

"BLD",9104,"KRN",9.8,"NM","B","C9CFCAST",5)

"BLD",9104,"KRN",9.8,"NM","B","C9CGDBM",6)

"BLD",9104,"KRN",9.8,"NM","B","C9CGDIV",7)

"BLD",9104,"KRN",9.8,"NM","B","C9CGPL",8)

"BLD",9104,"KRN",9.8,"NM","B","C9CGPV",9)

"BLD",9104,"KRN",9.8,"NM","B","C9CGSR",22)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODCD",10)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODCP",11)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODCS",12)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODND",13)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODNT",14)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODPG",15)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODRM",16)

"BLD",9104,"KRN",9.8,"NM","B","C9CMODSN",17)

"BLD",9104,"KRN",9.8,"NM","B","C9CORIDE",18)

"BLD",9104,"KRN",9.8,"NM","B","C9CRTRPT",19)

"BLD",9104,"KRN",9.8,"NM","B","C9CSTN",20)

"BLD",9104,"KRN",9.8,"NM","B","C9CTTLS",23)

"BLD",9104,"KRN",9.8,"NM","B","C9CWBS",21)

"BLD",9104,"KRN",19,0)
19
"BLD",9104,"KRN",19,"NM",0)
^9.68A^2^2
"BLD",9104,"KRN",19,"NM",1,0)
C9C DASHBOARD^^0
"BLD",9104,"KRN",19,"NM",2,0)
C9C RULES ENGINE^^0
"BLD",9104,"KRN",19,"NM","B","C9C DASHBOARD",1)

"BLD",9104,"KRN",19,"NM","B","C9C RULES ENGINE",2)

"BLD",9104,"KRN",19.1,0)
19.1
"BLD",9104,"KRN",19.1,"NM",0)
^9.68A^1^1
"BLD",9104,"KRN",19.1,"NM",1,0)
INACTIVE DASHBOARD MODULES^^0
"BLD",9104,"KRN",19.1,"NM","B","INACTIVE DASHBOARD MODULES",1)

"BLD",9104,"KRN",101,0)
101
"BLD",9104,"KRN",409.61,0)
409.61
"BLD",9104,"KRN",771,0)
771
"BLD",9104,"KRN",779.2,0)
779.2
"BLD",9104,"KRN",870,0)
870
"BLD",9104,"KRN",8989.51,0)
8989.51
"BLD",9104,"KRN",8989.51,"NM",0)
^9.68A^1^1
"BLD",9104,"KRN",8989.51,"NM",1,0)
VIEW NOTES DUE RULE APPLIED^^0
"BLD",9104,"KRN",8989.51,"NM","B","VIEW NOTES DUE RULE APPLIED",1)

"BLD",9104,"KRN",8989.52,0)
8989.52
"BLD",9104,"KRN",8994,0)
8994
"BLD",9104,"KRN",8994,"NM",0)
^9.68A^48^48
"BLD",9104,"KRN",8994,"NM",1,0)
C9C MODULE GET NOTES DUE^^0
"BLD",9104,"KRN",8994,"NM",2,0)
C9C MODULE DEFINITIONS^^0
"BLD",9104,"KRN",8994,"NM",3,0)
C9C DATAGRID COLUMN HEADERS^^0
"BLD",9104,"KRN",8994,"NM",4,0)
C9C BUTTON IMAGE BYTE STRING^^0
"BLD",9104,"KRN",8994,"NM",5,0)
C9C NOTES DUE ALL FILTERS^^0
"BLD",9104,"KRN",8994,"NM",6,0)
C9C DASHBOARD GET USER FILTERS^^0
"BLD",9104,"KRN",8994,"NM",7,0)
C9C DASHBOARD PUT USER FILTERS^^0
"BLD",9104,"KRN",8994,"NM",8,0)
C9C DB MODULE NOTE TEXT^^0
"BLD",9104,"KRN",8994,"NM",9,0)
C9C SAVE DASHBOARD PREFERENCES^^0
"BLD",9104,"KRN",8994,"NM",10,0)
C9C GET DASHBOARD PREFERENCES^^0
"BLD",9104,"KRN",8994,"NM",11,0)
C9C GET DIVISIONS^^0
"BLD",9104,"KRN",8994,"NM",12,0)
C9C WARDS AND UNITS^^0
"BLD",9104,"KRN",8994,"NM",13,0)
C9C GET CRITICAL LAB RESULTS^^0
"BLD",9104,"KRN",8994,"NM",14,0)
C9C DASHBOARD STICKY NOTES^^0
"BLD",9104,"KRN",8994,"NM",15,0)
C9C GET PENDING LABS^^0
"BLD",9104,"KRN",8994,"NM",16,0)
C9C GET WARDNAMES^^0
"BLD",9104,"KRN",8994,"NM",17,0)
C9C FILTER STICKY NOTES^^0
"BLD",9104,"KRN",8994,"NM",18,0)
C9C NOTES DUE BY TEAM^^0
"BLD",9104,"KRN",8994,"NM",19,0)
C9C ND GET TEAMS^^0
"BLD",9104,"KRN",8994,"NM",20,0)
C9C LAB DRAWS OTHER THAN SIX^^0
"BLD",9104,"KRN",8994,"NM",21,0)
C9C UNVERIFIED FOR DASHBOARD^^0
"BLD",9104,"KRN",8994,"NM",22,0)
C9C EXPIRING FOR DASHBOARD^^0
"BLD",9104,"KRN",8994,"NM",23,0)
C9C FORECAST NOTES DUE^^0
"BLD",9104,"KRN",8994,"NM",24,0)
C9C FORCE STICKY NOTE EXP^^0
"BLD",9104,"KRN",8994,"NM",25,0)
C9C MISSING DSCG SUMMARIES^^0
"BLD",9104,"KRN",8994,"NM",26,0)
C9C DASHBOARD REMINDER MODULE^^0
"BLD",9104,"KRN",8994,"NM",27,0)
C9C C AND R FILTERS^^0
"BLD",9104,"KRN",8994,"NM",28,0)
C9C COVERING PROVIDERS MODULE^^0
"BLD",9104,"KRN",8994,"NM",29,0)
C9C GET ALL APPROPRIATE TEAMS^^0
"BLD",9104,"KRN",8994,"NM",30,0)
C9C ALL PATIENTS REMINDERS^^0
"BLD",9104,"KRN",8994,"NM",31,0)
C9C COVERING PSYCHOL MODULE^^0
"BLD",9104,"KRN",8994,"NM",32,0)
C9C COVERING SW MODULE^^0
"BLD",9104,"KRN",8994,"NM",33,0)
C9C SHOW OVERRIDES^^0
"BLD",9104,"KRN",8994,"NM",34,0)
C9C GERD DRUG FILTER^^0
"BLD",9104,"KRN",8994,"NM",35,0)
C9C ON GERD DRUGS^^0
"BLD",9104,"KRN",8994,"NM",36,0)
C9C GET FORMULAS^^0
"BLD",9104,"KRN",8994,"NM",37,0)
C9C SAVE RULES ENGINE WARDS^^0
"BLD",9104,"KRN",8994,"NM",38,0)
C9C SAVE RULES ENGINE UNITS^^0
"BLD",9104,"KRN",8994,"NM",39,0)
C9C GET RULE NAMES^^0
"BLD",9104,"KRN",8994,"NM",40,0)
C9C ADD RULE TO FORMULA^^0
"BLD",9104,"KRN",8994,"NM",41,0)
C9C RULES ENGINE ORD ITEMS^^0
"BLD",9104,"KRN",8994,"NM",42,0)
C9C DELETE SINGLE RULE^^0
"BLD",9104,"KRN",8994,"NM",43,0)
C9C SAVE NEW FORMULA^^0
"BLD",9104,"KRN",8994,"NM",44,0)
C9C DELETE FORMULA^^0
"BLD",9104,"KRN",8994,"NM",45,0)
C9C GET DASHBOARD REMINDERS^^0
"BLD",9104,"KRN",8994,"NM",46,0)
C9C GET COHORT FOR TITLE^^0
"BLD",9104,"KRN",8994,"NM",47,0)
C9C SET COHORT FOR TITLE^^0
"BLD",9104,"KRN",8994,"NM",48,0)
C9C GET PASS-THROUGH REMINDERS^^0
"BLD",9104,"KRN",8994,"NM","B","C9C ADD RULE TO FORMULA",40)

"BLD",9104,"KRN",8994,"NM","B","C9C ALL PATIENTS REMINDERS",30)

"BLD",9104,"KRN",8994,"NM","B","C9C BUTTON IMAGE BYTE STRING",4)

"BLD",9104,"KRN",8994,"NM","B","C9C C AND R FILTERS",27)

"BLD",9104,"KRN",8994,"NM","B","C9C COVERING PROVIDERS MODULE",28)

"BLD",9104,"KRN",8994,"NM","B","C9C COVERING PSYCHOL MODULE",31)

"BLD",9104,"KRN",8994,"NM","B","C9C COVERING SW MODULE",32)

"BLD",9104,"KRN",8994,"NM","B","C9C DASHBOARD GET USER FILTERS",6)

"BLD",9104,"KRN",8994,"NM","B","C9C DASHBOARD PUT USER FILTERS",7)

"BLD",9104,"KRN",8994,"NM","B","C9C DASHBOARD REMINDER MODULE",26)

"BLD",9104,"KRN",8994,"NM","B","C9C DASHBOARD STICKY NOTES",14)

"BLD",9104,"KRN",8994,"NM","B","C9C DATAGRID COLUMN HEADERS",3)

"BLD",9104,"KRN",8994,"NM","B","C9C DB MODULE NOTE TEXT",8)

"BLD",9104,"KRN",8994,"NM","B","C9C DELETE FORMULA",44)

"BLD",9104,"KRN",8994,"NM","B","C9C DELETE SINGLE RULE",42)

"BLD",9104,"KRN",8994,"NM","B","C9C EXPIRING FOR DASHBOARD",22)

"BLD",9104,"KRN",8994,"NM","B","C9C FILTER STICKY NOTES",17)

"BLD",9104,"KRN",8994,"NM","B","C9C FORCE STICKY NOTE EXP",24)

"BLD",9104,"KRN",8994,"NM","B","C9C FORECAST NOTES DUE",23)

"BLD",9104,"KRN",8994,"NM","B","C9C GERD DRUG FILTER",34)

"BLD",9104,"KRN",8994,"NM","B","C9C GET ALL APPROPRIATE TEAMS",29)

"BLD",9104,"KRN",8994,"NM","B","C9C GET COHORT FOR TITLE",46)

"BLD",9104,"KRN",8994,"NM","B","C9C GET CRITICAL LAB RESULTS",13)

"BLD",9104,"KRN",8994,"NM","B","C9C GET DASHBOARD PREFERENCES",10)

"BLD",9104,"KRN",8994,"NM","B","C9C GET DASHBOARD REMINDERS",45)

"BLD",9104,"KRN",8994,"NM","B","C9C GET DIVISIONS",11)

"BLD",9104,"KRN",8994,"NM","B","C9C GET FORMULAS",36)

"BLD",9104,"KRN",8994,"NM","B","C9C GET PASS-THROUGH REMINDERS",48)

"BLD",9104,"KRN",8994,"NM","B","C9C GET PENDING LABS",15)

"BLD",9104,"KRN",8994,"NM","B","C9C GET RULE NAMES",39)

"BLD",9104,"KRN",8994,"NM","B","C9C GET WARDNAMES",16)

"BLD",9104,"KRN",8994,"NM","B","C9C LAB DRAWS OTHER THAN SIX",20)

"BLD",9104,"KRN",8994,"NM","B","C9C MISSING DSCG SUMMARIES",25)

"BLD",9104,"KRN",8994,"NM","B","C9C MODULE DEFINITIONS",2)

"BLD",9104,"KRN",8994,"NM","B","C9C MODULE GET NOTES DUE",1)

"BLD",9104,"KRN",8994,"NM","B","C9C ND GET TEAMS",19)

"BLD",9104,"KRN",8994,"NM","B","C9C NOTES DUE ALL FILTERS",5)

"BLD",9104,"KRN",8994,"NM","B","C9C NOTES DUE BY TEAM",18)

"BLD",9104,"KRN",8994,"NM","B","C9C ON GERD DRUGS",35)

"BLD",9104,"KRN",8994,"NM","B","C9C RULES ENGINE ORD ITEMS",41)

"BLD",9104,"KRN",8994,"NM","B","C9C SAVE DASHBOARD PREFERENCES",9)

"BLD",9104,"KRN",8994,"NM","B","C9C SAVE NEW FORMULA",43)

"BLD",9104,"KRN",8994,"NM","B","C9C SAVE RULES ENGINE UNITS",38)

"BLD",9104,"KRN",8994,"NM","B","C9C SAVE RULES ENGINE WARDS",37)

"BLD",9104,"KRN",8994,"NM","B","C9C SET COHORT FOR TITLE",47)

"BLD",9104,"KRN",8994,"NM","B","C9C SHOW OVERRIDES",33)

"BLD",9104,"KRN",8994,"NM","B","C9C UNVERIFIED FOR DASHBOARD",21)

"BLD",9104,"KRN",8994,"NM","B","C9C WARDS AND UNITS",12)

"BLD",9104,"KRN","B",.4,.4)

"BLD",9104,"KRN","B",.401,.401)

"BLD",9104,"KRN","B",.402,.402)

"BLD",9104,"KRN","B",.403,.403)

"BLD",9104,"KRN","B",.5,.5)

"BLD",9104,"KRN","B",.84,.84)

"BLD",9104,"KRN","B",3.6,3.6)

"BLD",9104,"KRN","B",3.8,3.8)

"BLD",9104,"KRN","B",9.2,9.2)

"BLD",9104,"KRN","B",9.8,9.8)

"BLD",9104,"KRN","B",19,19)

"BLD",9104,"KRN","B",19.1,19.1)

"BLD",9104,"KRN","B",101,101)

"BLD",9104,"KRN","B",409.61,409.61)

"BLD",9104,"KRN","B",771,771)

"BLD",9104,"KRN","B",779.2,779.2)

"BLD",9104,"KRN","B",870,870)

"BLD",9104,"KRN","B",8989.51,8989.51)

"BLD",9104,"KRN","B",8989.52,8989.52)

"BLD",9104,"KRN","B",8994,8994)

"BLD",9104,"QDEF")
^^^^NO^^^^NO^^NO
"BLD",9104,"QUES",0)
^9.62^^
"BLD",9104,"REQB",0)
^9.611^^
"DATA",300892,1,0)
ONE TIME - ADMIT DATE + X DAYS^1^ONE TIME - ADMIT DATE + X DAYS
"DATA",300892,1,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,1,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,15,0,350,0)
"DATA",300892,1,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,1,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"15.0")
"DATA",300892,1,8)
                                                                                                                                                                                                                                                     
"DATA",300892,2,0)
ONE TIME - CALENDAR DATE^1^ONE TIME - CALENDAR DATE
"DATA",300892,2,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,2,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,14,0,350,0)
"DATA",300892,2,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,2,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"14.0")
"DATA",300892,2,8)
                                                                                                                                                                                                                                                     
"DATA",300892,3,0)
WEEKLY BASED ON ADMIT DATE^1^WEEKLY BASED ON ADMIT DATE
"DATA",300892,3,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,3,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0,350,0)
"DATA",300892,3,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,3,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"2.0")
"DATA",300892,3,8)
                                                                                                                                                                                                                                                     
"DATA",300892,4,0)
MONTHLY BASED ON ADMIT DATE^1^MONTHLY BASED ON ADMIT DATE
"DATA",300892,4,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,4,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0,350,0)
"DATA",300892,4,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,4,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"2.0")
"DATA",300892,4,8)
                                                                                                                                                                                                                                                     
"DATA",300892,5,0)
ANNUALLY BASED ON ADMIT DATE^1^ANNUALLY BASED ON ADMIT DATE
"DATA",300892,5,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,5,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,15,0,350,0)
"DATA",300892,5,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,5,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"16.0")
"DATA",300892,5,8)
                                                                                                                                                                                                                                                     
"DATA",300892,5,9)
                                                                                                                                                                                                                                                     
"DATA",300892,6,0)
EVERY X DAYS BASED ON ADMIT DATE^1^EVERY X DAYS BASED ON ADMIT DATE
"DATA",300892,6,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,6,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0,350,0)
"DATA",300892,6,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,6,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"7.0")
"DATA",300892,6,8)
                                                                                                                                                                                                                                                     
"DATA",300892,7,0)
DATE OF YEAR^1^DATE OF YEAR
"DATA",300892,7,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,7,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,14,0,350,0)
"DATA",300892,7,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,7,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"14.0")
"DATA",300892,7,8)
                                                                                                                                                                                                                                                     
"DATA",300892,8,0)
DATE OF MONTH^1^DATE OF MONTH
"DATA",300892,8,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,8,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0,350,0)
"DATA",300892,8,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,8,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"2.0")
"DATA",300892,8,8)
                                                                                                                                                                                                                                                     
"DATA",300892,9,0)
DAY OF WEEK^1^DAY OF WEEK
"DATA",300892,9,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,9,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0,350,0)
"DATA",300892,9,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,9,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"2.0")
"DATA",300892,9,8)
                                                                                                                                                                                                                                                     
"DATA",300892,10,0)
ONE TIME - ADMIT DATE + X HOURS^1^ONE TIME - ADMIT DATE + X HOURS
"DATA",300892,10,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,24)
"DATA",300892,10,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,72,350,0)
"DATA",300892,10,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,10,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"0.32")
"DATA",300892,10,8)
                                                                                                                                                                                                                                                     
"DATA",300892,11,0)
EVERY X DAYS FROM EVENT DATE^1^EVERY X DAYS FROM EVENT DATE
"DATA",300892,11,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,11,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0,350,0)
"DATA",300892,11,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,11,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"2.0")
"DATA",300892,11,8)
                                                                                                                                                                                                                                                     
"DATA",300892,12,0)
EVERY X HOURS FROM EVENT DATE^1^EVERY X HOURS FROM EVENT DATE
"DATA",300892,12,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,1)
"DATA",300892,12,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,8,350,0)
"DATA",300892,12,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,12,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"0.2")
"DATA",300892,12,8)
                                                                                                                                                                                                                                                     
"DATA",300892,13,0)
EVERY X HOURS BASED ON ADMIT DATE^1^EVERY X HOURS BASED ON ADMIT DATE
"DATA",300892,13,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,30)
"DATA",300892,13,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,72,350,0)
"DATA",300892,13,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,13,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"0.81")
"DATA",300892,13,8)
                                                                                                                                                                                                                                                     
"DATA",300892,14,0)
ANNUALLY BASED ON ADMIT DATE + X DAYS^1^ANNUALLY BASED ON ADMIT DATE + X DAYS
"DATA",300892,14,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,14,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,14,0,350,0)
"DATA",300892,14,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,14,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"16.0")
"DATA",300892,14,8)
                                                                                                                                                                                                                                                     
"DATA",300892,15,0)
WEEKLY BASED ON ADMIT DATE SKIP ADMISSION ANNIVERSAY WEEK ^1^WEEKLY FROM ADMIT SKIP ANNIV WEEK
"DATA",300892,15,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,15,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0,350,0)
"DATA",300892,15,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,15,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"2.0")
"DATA",300892,16,0)
MONTHLY BASED ON ADMIT DATE SKIP MONTH 12^1^MONTHLY BASED ON ADMIT SKIP MONTH 12
"DATA",300892,16,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,3,0)
"DATA",300892,16,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,5,0,350,0)
"DATA",300892,16,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,16,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"5.0")
"DATA",300892,17,0)
PASS-THROUGH REMINDER^1^PASS-THROUGH REMINDER
"DATA",300892,17,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,17,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,14,0,350,0)
"DATA",300892,17,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,17,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"3.0")
"DATA",300892,18,0)
DAILY AT 0830^1^DAILY AT 0830
"DATA",300892,18,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,2)
"DATA",300892,18,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,0,8,15,0)
"DATA",300892,18,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,18,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"0.8")
"DATA",300892,19,0)
EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12^1^MONTHLY STARTING MONTH 3 SKIP MONTH 12
"DATA",300892,19,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0)
"DATA",300892,19,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,5,0,350,0)
"DATA",300892,19,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,19,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"5.0")
"DATA",300892,20,0)
ONE TIME - ADMISSION DAY PLUS X DAYS^1^ONE TIME - ADMISSION DAY PLUS X DAYS
"DATA",300892,20,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,1,0)
"DATA",300892,20,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,2,0,350,0)
"DATA",300892,20,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,20,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"1.0")
"DATA",300892,21,0)
ANNUALLY BASED ON ADMISSION DAY^1^ANNUALLY BASED ON ADMISSION DAY
"DATA",300892,21,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,21,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,15,0,350,0)
"DATA",300892,21,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,21,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"16.0")
"DATA",300892,22,0)
ANNUALLY BASED ON ADMISSION DAY + X DAYS^1^ANNUALLY BASED ON ADMISSION DAY + X DAYS
"DATA",300892,22,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,22,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,15,0,350,0)
"DATA",300892,22,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,22,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"16.0")
"DATA",300892,23,0)
DUE NOW^1^DN
"DATA",300892,23,4)
S C9CCHECK=$$NEARLY^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,7,0)
"DATA",300892,23,5)
S C9CCHECK=$$SHOWN^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET,14,0,350,0)
"DATA",300892,23,6)
S C9CCHECK=$$OVERDUE^C9CORIDE(RPOINT,TITLIEN,BASEDATE,OFFSET)
"DATA",300892,23,7)
S ABD=$$GETABD^C9CORIDE(RPOINT,TITLIEN,OFFSET,"3.0")
"DATA",300894,1,0)
Notes Due^1
"DATA",300894,1,2,0)
^300894.02^38^38^3200213^^^^
"DATA",300894,1,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,1,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,1,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^14^195^0^0^14^195^1^199^1
"DATA",300894,1,2,4,0)
11^168^100^0^0^2^189^73^68^65^84^104^67^237^152^59^142^131^48^16^134^247^1
"DATA",300894,1,2,5,0)
02^219^230^32^84^185^7^13^7^65^226^30^72^105^210^166^164^64^72^148^180^148
"DATA",300894,1,2,6,0)
^236^188^108^143^195^174^98^12^56^187^43^255^114^129^157^9^254^60^158^153^
"DATA",300894,1,2,7,0)
216^249^88^254^160^50^116^42^101^232^84^202^208^169^148^161^83^233^127^66^
"DATA",300894,1,2,8,0)
207^245^245^254^121^193^86^52^51^244^219^138^187^93^203^159^175^117^235^21
"DATA",300894,1,2,9,0)
6^254^133^217^14^133^120^218^112^87^19^116^218^170^43^171^87^40^195^88^92^
"DATA",300894,1,2,10,0)
238^229^77^122^135^43^28^250^81^84^99^31^8^141^206^126^212^131^244^14^215^
"DATA",300894,1,2,11,0)
22^79^19^71^8^116^223^140^117^51^158^17^24^172^77^208^176^227^240^252^40^1
"DATA",300894,1,2,12,0)
74^6^218^134^239^21^55^1^212^15^115^63^76^98^131^207^51^143^115^192^144^17
"DATA",300894,1,2,13,0)
7^91^176^73^15^28^172^7^76^152^64^5^66^3^4^36^34^248^207^0^185^241^174^110
"DATA",300894,1,2,14,0)
^30^48^177^164^41^218^192^32^180^145^158^217^223^102^169^188^72^202^13^89^
"DATA",300894,1,2,15,0)
6^172^150^98^169^104^104^48^76^225^208^240^94^132^112^208^60^43^16^216^233
"DATA",300894,1,2,16,0)
^61^231^137^11^61^203^101^42^237^32^47^0^191^53^227^107^207^129^238^74^124
"DATA",300894,1,2,17,0)
^117^87^90^104^154^149^28^236^80^90^112^51^62^35^162^139^108^103^9^175^130
"DATA",300894,1,2,18,0)
^79^37^71^123^218^34^40^50^20^84^167^132^7^108^238^36^251^75^124^60^229^19
"DATA",300894,1,2,19,0)
^116^63^140^244^204^59^32^49^205^150^170^185^194^194^59^195^161^21^174^48^
"DATA",300894,1,2,20,0)
104^172^24^35^0^137^23^127^134^70^57^191^138^148^165^147^245^174^44^137^3^
"DATA",300894,1,2,21,0)
61^76^91^160^151^9^182^251^41^40^215^208^26^145^201^60^104^235^126^220^183
"DATA",300894,1,2,22,0)
^137^106^139^191^230^0^109^130^134^140^233^220^4^223^37^34^72^121^110^166^
"DATA",300894,1,2,23,0)
136^154^85^34^114^121^65^75^50^227^56^57^23^218^22^7^158^64^98^93^151^60^2
"DATA",300894,1,2,24,0)
0^199^61^150^60^196^130^210^110^45^91^162^47^32^71^113^19^96^211^232^87^21
"DATA",300894,1,2,25,0)
4^95^115^136^94^66^179^27^76^204^73^34^26^110^219^245^166^228^18^129^205^1
"DATA",300894,1,2,26,0)
73^132^201^248^139^28^30^54^101^169^109^58^168^132^120^250^215^41^67^167^8
"DATA",300894,1,2,27,0)
2^134^78^165^12^157^74^113^208^174^18^99^219^242^187^112^136^162^61^253^78
"DATA",300894,1,2,28,0)
^238^189^208^120^26^166^159^241^243^238^222^107^237^132^166^19^207^234^44^
"DATA",300894,1,2,29,0)
122^182^14^131^94^29^78^84^227^143^244^241^3^251^241^218^3^237^221^187^132
"DATA",300894,1,2,30,0)
^204^116^49^90^248^76^39^59^96^236^159^140^163^116^28^180^228^162^26^215^2
"DATA",300894,1,2,31,0)
08^236^102^100^221^124^122^94^107^7^180^57^100^123^158^118^112^62^52^217^2
"DATA",300894,1,2,32,0)
08^179^138^171^88^29^6^173^225^214^208^114^157^113^237^221^208^94^201^211^
"DATA",300894,1,2,33,0)
208^106^49^108^35^11^219^173^29^208^242^15^139^10^98^80^8^180^185^219^70^1
"DATA",300894,1,2,34,0)
07^55^180^14^98^16^119^41^41^189^255^52^148^153^189^219^70^43^30^154^110^2
"DATA",300894,1,2,35,0)
18^234^31^5^17^231^153^107^38^36^204^134^112^160^211^221^54^90^113^208^230
"DATA",300894,1,2,36,0)
^182^139^109^85^188^216^169^186^169^188^148^175^188^41^60^222^169^12^157^7
"DATA",300894,1,2,37,0)
4^25^58^149^50^116^42^101^232^84^202^208^169^148^161^83^41^67^167^209^178^
"DATA",300894,1,2,38,0)
124^1^109^182^228^111^158^14^231^148^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,1,3)
DG
"DATA",300894,1,4,0)
^300894.04^14^14
"DATA",300894,1,4,1,0)
Patient^TEXT
"DATA",300894,1,4,1,1)
2
"DATA",300894,1,4,1,2)
1
"DATA",300894,1,4,2,0)
Note Title^TEXT
"DATA",300894,1,4,2,1)
7
"DATA",300894,1,4,2,2)
1
"DATA",300894,1,4,3,0)
Last Completed^DATE
"DATA",300894,1,4,3,1)
8
"DATA",300894,1,4,3,2)
1
"DATA",300894,1,4,3,3)
3093^8
"DATA",300894,1,4,3,4)
Click to see note text
"DATA",300894,1,4,4,0)
PCU^TEXT
"DATA",300894,1,4,4,1)
9
"DATA",300894,1,4,4,2)
0
"DATA",300894,1,4,5,0)
Patient IEN^NUMERIC
"DATA",300894,1,4,5,1)
1
"DATA",300894,1,4,5,2)
0
"DATA",300894,1,4,6,0)
MRN^TEXT
"DATA",300894,1,4,6,1)
3
"DATA",300894,1,4,6,2)
1
"DATA",300894,1,4,7,0)
Title IEN^NUMERIC
"DATA",300894,1,4,7,1)
6
"DATA",300894,1,4,7,2)
0
"DATA",300894,1,4,8,0)
Note IEN^NUMERIC
"DATA",300894,1,4,8,1)
10
"DATA",300894,1,4,8,2)
0
"DATA",300894,1,4,8,4)
Note IEN
"DATA",300894,1,4,9,0)
Date Due^DATE
"DATA",300894,1,4,9,1)
11
"DATA",300894,1,4,9,2)
1
"DATA",300894,1,4,9,4)
Date/Time Next Note Due
"DATA",300894,1,4,10,0)
Row Color^ROW COLOR
"DATA",300894,1,4,10,1)
12
"DATA",300894,1,4,10,2)
0
"DATA",300894,1,4,11,0)
Admission Date^DATE
"DATA",300894,1,4,11,1)
4
"DATA",300894,1,4,11,2)
1
"DATA",300894,1,4,11,4)
Admission Date
"DATA",300894,1,4,12,0)
Attending^TEXT
"DATA",300894,1,4,12,1)
5
"DATA",300894,1,4,12,2)
1
"DATA",300894,1,4,12,4)
Attending Provider
"DATA",300894,1,4,13,0)
Rule Applied^TEXT
"DATA",300894,1,4,13,1)
13
"DATA",300894,1,4,13,2)
0
"DATA",300894,1,4,13,3)
3166^14;7
"DATA",300894,1,4,13,4)
Rule Abbreviation
"DATA",300894,1,4,13,5)
S DHCL=$$GET^XPAR("ALL","VIEW NOTES DUE RULE APPLIED")
"DATA",300894,1,4,14,0)
RuleIEN^TEXT
"DATA",300894,1,4,14,1)
14
"DATA",300894,1,4,14,2)
0
"DATA",300894,1,6)
3086
"DATA",300894,1,7)
3077
"DATA",300894,1,10)
3090
"DATA",300894,1,11,0)
^300894.01P^3^3
"DATA",300894,1,11,1,0)
68
"DATA",300894,1,11,2,0)
71
"DATA",300894,1,11,3,0)
70
"DATA",300894,2,0)
Show Critical Chem Lab Results Last 7 Days^1
"DATA",300894,2,2,0)
^300894.02^34^34^3180430^
"DATA",300894,2,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,2,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,2,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^14^195^0^0^14^195^1^199^1
"DATA",300894,2,2,4,0)
11^168^100^0^0^2^90^73^68^65^84^104^67^237^152^189^117^132^48^12^199^51^80
"DATA",300894,2,2,5,0)
^214^161^207^30^228^166^160^162^184^1^168^25^0^22^112^73^79^231^247^88^130
"DATA",300894,2,2,6,0)
^200^146^108^140^239^0^147^103^148^92^226^255^83^225^111^255^16^178^209^22
"DATA",300894,2,2,7,0)
1^219^252^130^202^208^82^202^208^82^202^208^82^202^208^82^202^208^82^202^2
"DATA",300894,2,2,8,0)
08^82^202^208^82^250^171^208^99^91^189^127^124^130^21^237^196^77^155^26^74
"DATA",300894,2,2,9,0)
^28^105^172^30^184^45^70^170^57^51^235^16^90^247^101^221^148^237^112^191^1
"DATA",300894,2,2,10,0)
93^162^213^93^115^179^83^87^51^37^63^146^30^58^53^116^56^44^236^218^23^111
"DATA",300894,2,2,11,0)
^20^49^242^16^26^221^140^172^170^191^183^253^35^116^168^200^97^143^74^8^14
"DATA",300894,2,2,12,0)
1^222^106^58^83^156^70^61^141^173^125^143^198^154^187^141^28^50^216^149^20
"DATA",300894,2,2,13,0)
3^245^224^130^10^13^86^176^145^115^235^59^13^100^94^32^97^227^152^14^122^1
"DATA",300894,2,2,14,0)
94^168^32^104^43^213^23^183^170^104^27^179^135^9^65^218^222^195^34^91^117^
"DATA",300894,2,2,15,0)
241^193^40^91^38^227^106^13^85^40^224^250^23^67^35^174^154^77^236^42^75^6^
"DATA",300894,2,2,16,0)
174^154^135^206^247^180^115^167^233^90^214^49^175^75^211^9^129^170^183^254
"DATA",300894,2,2,17,0)
^53^208^182^108^161^113^123^216^3^219^13^25^200^81^146^92^87^208^190^84^15
"DATA",300894,2,2,18,0)
1^240^211^120^24^20^13^216^215^89^104^216^41^60^106^107^104^120^158^229^21
"DATA",300894,2,2,19,0)
8^250^25^104^239^246^112^175^207^122^218^106^50^155^181^4^234^104^240^212^
"DATA",300894,2,2,20,0)
106^215^229^30^158^10^85^177^170^166^134^118^172^232^18^186^251^182^161^11
"DATA",300894,2,2,21,0)
7^95^0^52^27^12^94^186^232^206^46^21^191^10^94^141^239^162^228^208^193^23^
"DATA",300894,2,2,22,0)
209^98^217^239^5^185^10^13^163^130^224^112^0^157^54^215^133^47^193^24^125^
"DATA",300894,2,2,23,0)
161^92^53^48^234^221^87^4^244^239^83^134^150^82^134^150^210^63^133^14^47^1
"DATA",300894,2,2,24,0)
93^103^58^151^227^31^42^137^167^85^131^121^223^110^174^19^51^38^86^255^25^
"DATA",300894,2,2,25,0)
122^253^97^7^173^63^120^144^141^32^244^42^72^150^152^129^95^0^56^41^86^215
"DATA",300894,2,2,26,0)
^64^63^201^241^29^34^26^12^118^233^199^195^3^31^234^18^232^32^167^99^104^1
"DATA",300894,2,2,27,0)
4^15^175^128^179^40^31^164^137^145^186^4^250^89^186^236^198^192^109^3^208^
"DATA",300894,2,2,28,0)
94^118^117^210^205^160^52^208^152^85^130^183^48^135^246^83^254^109^104^136
"DATA",300894,2,2,29,0)
^99^227^224^111^113^39^133^198^80^246^163^98^39^60^112^10^84^61^199^71^43^
"DATA",300894,2,2,30,0)
37^244^130^232^14^25^30^59^130^166^67^9^85^236^50^191^109^241^9^233^128^74
"DATA",300894,2,2,31,0)
^67^175^175^5^70^220^204^241^209^12^162^255^23^74^76^226^239^43^137^167^16
"DATA",300894,2,2,32,0)
5^149^161^165^148^161^165^148^161^165^148^161^165^148^161^165^148^161^165^
"DATA",300894,2,2,33,0)
148^161^165^244^130^208^243^252^5^95^27^193^176^26^43^38^160^0^0^0^0^73^69
"DATA",300894,2,2,34,0)
^78^68^174^66^96^130^
"DATA",300894,2,3)
DG
"DATA",300894,2,4,0)
^300894.04^9^9
"DATA",300894,2,4,1,0)
Date^DATE
"DATA",300894,2,4,1,1)
1
"DATA",300894,2,4,1,2)
1
"DATA",300894,2,4,1,4)
Date
"DATA",300894,2,4,2,0)
DFN^TEXT
"DATA",300894,2,4,2,1)
2
"DATA",300894,2,4,2,2)
0
"DATA",300894,2,4,2,4)
DFN
"DATA",300894,2,4,3,0)
PATIENT^TEXT
"DATA",300894,2,4,3,1)
3
"DATA",300894,2,4,3,2)
1
"DATA",300894,2,4,3,4)
Patient
"DATA",300894,2,4,4,0)
WARD^TEXT
"DATA",300894,2,4,4,1)
4
"DATA",300894,2,4,4,2)
1
"DATA",300894,2,4,4,4)
Ward
"DATA",300894,2,4,5,0)
LAB TEST^TEXT
"DATA",300894,2,4,5,1)
5
"DATA",300894,2,4,5,2)
1
"DATA",300894,2,4,5,4)
Lab Test
"DATA",300894,2,4,6,0)
RESULT^TEXT
"DATA",300894,2,4,6,1)
6
"DATA",300894,2,4,6,2)
1
"DATA",300894,2,4,6,4)
Lab Result
"DATA",300894,2,4,7,0)
UNITS^TEXT
"DATA",300894,2,4,7,1)
7
"DATA",300894,2,4,7,2)
1
"DATA",300894,2,4,7,4)
Units
"DATA",300894,2,4,8,0)
FLAG^TEXT
"DATA",300894,2,4,8,1)
8
"DATA",300894,2,4,8,2)
1
"DATA",300894,2,4,8,4)
Results Flag
"DATA",300894,2,4,9,0)
REFERENCE RANGE^TEXT
"DATA",300894,2,4,9,1)
9
"DATA",300894,2,4,9,2)
1
"DATA",300894,2,4,9,4)
Reference Range
"DATA",300894,2,6)
3098
"DATA",300894,2,11,0)
^300894.01P^3^3
"DATA",300894,2,11,1,0)
68
"DATA",300894,2,11,2,0)
71
"DATA",300894,2,11,3,0)
70
"DATA",300894,3,0)
Sticky Notes^1
"DATA",300894,3,1)
SN
"DATA",300894,3,2,0)
^300894.02^11^11^3180924^^^
"DATA",300894,3,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,3,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,3,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^14^195^0^0^14^195^1^199^1
"DATA",300894,3,2,4,0)
11^168^100^0^0^0^140^73^68^65^84^104^67^237^211^177^13^128^48^12^0^65^155^
"DATA",300894,3,2,5,0)
81^88^132^150^130^101^217^131^105^88^32^68^40^35^132^151^44^254^100^41^46^
"DATA",300894,3,2,6,0)
191^112^114^219^175^168^102^25^111^41^127^143^110^17^249^206^231^102^69^18
"DATA",300894,3,2,7,0)
3^200^158^219^187^251^124^110^86^116^34^181^131^31^145^98^52^197^104^138^2
"DATA",300894,3,2,8,0)
09^20^163^41^70^83^140^166^148^140^206^245^60^198^90^135^231^65^49^154^98^
"DATA",300894,3,2,9,0)
52^197^104^138^209^20^163^41^70^83^140^166^148^140^206^118^143^173^16^207^
"DATA",300894,3,2,10,0)
131^98^52^197^104^138^209^20^163^41^70^83^140^166^24^77^49^154^98^52^35^22
"DATA",300894,3,2,11,0)
6^1^98^127^9^217^49^97^167^85^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,3,3)
RT
"DATA",300894,3,6)
3103
"DATA",300894,3,7)
3077
"DATA",300894,3,10)
3110
"DATA",300894,3,11,0)
^300894.01P^3^3
"DATA",300894,3,11,1,0)
71
"DATA",300894,3,11,2,0)
68
"DATA",300894,3,11,3,0)
70
"DATA",300894,3,12)
Expire This Note Now
"DATA",300894,3,13)
3065
"DATA",300894,4,0)
All Pending Labs T-10 To T+5^1
"DATA",300894,4,1)
PL
"DATA",300894,4,2,0)
^300894.02^73^73^3190604^^^^
"DATA",300894,4,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^6^0^0^0^
"DATA",300894,4,2,2,0)
58^252^217^114^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^
"DATA",300894,4,2,3,0)
0^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^14^194^0^0^14^194^1^21^4
"DATA",300894,4,2,4,0)
0^74^128^0^0^5^124^73^68^65^84^104^67^237^153^207^75^91^89^20^199^191^14^2
"DATA",300894,4,2,5,0)
43^63^152^159^70^6^186^24^112^97^92^76^140^17^132^89^85^218^197^136^99^24^
"DATA",300894,4,2,6,0)
134^110^58^164^88^80^196^46^6^20^65^74^161^180^204^102^68^58^208^233^132^1
"DATA",300894,4,2,7,0)
82^139^48^12^162^148^41^14^118^235^96^53^25^152^137^11^233^162^21^201^143^
"DATA",300894,4,2,8,0)
23^77^254^10^231^156^251^238^77^223^123^201^139^70^223^211^154^228^3^175^2
"DATA",300894,4,2,9,0)
47^190^219^220^107^206^61^231^158^123^206^73^215^181^47^191^57^70^27^241^1
"DATA",300894,4,2,10,0)
53^108^219^134^182^19^216^100^210^47^126^123^37^123^173^197^237^59^99^178^
"DATA",300894,4,2,11,0)
215^49^233^214^167^35^176^99^164^39^49^60^220^37^159^73^164^213^240^79^106
"DATA",300894,4,2,12,0)
^236^116^227^78^227^154^192^90^97^79^246^62^45^46^200^164^247^80^208^100^2
"DATA",300894,4,2,13,0)
47^146^113^79^195^185^109^217^99^182^145^147^2^15^126^191^132^62^189^139^1
"DATA",300894,4,2,14,0)
90^153^31^49^40^251^118^227^78^227^146^192^251^40^28^200^174^228^160^176^4
"DATA",300894,4,2,15,0)
7^123^151^139^75^2^127^64^206^114^132^247^114^31^100^239^114^113^71^96^237
"DATA",300894,4,2,16,0)
^61^116^5^15^161^79^217^233^193^123^88^143^241^222^242^181^186^94^217^110^
"DATA",300894,4,2,17,0)
220^9^92^18^248^29^185^41^162^47^142^175^191^16^35^36^197^187^26^129^47^3^
"DATA",300894,4,2,18,0)
87^4^94^121^249^76^239^236^205^98^249^181^222^5^158^225^229^202^62^210^191
"DATA",300894,4,2,19,0)
^207^234^155^97^225^111^155^113^167^113^233^12^127^186^180^157^192^157^244
"DATA",300894,4,2,20,0)
^176^213^169^209^240^198^131^49^172^20^229^0^115^220^139^248^195^159^49^21
"DATA",300894,4,2,21,0)
8^45^223^29^34^251^124^12^203^59^242^37^58^135^23^63^68^228^139^243^52^212
"DATA",300894,4,2,22,0)
^240^232^226^19^196^131^122^63^54^53^135^24^114^88^89^184^135^141^138^62^2
"DATA",300894,4,2,23,0)
30^52^177^169^87^174^10^107^229^4^147^142^224^230^183^189^100^7^57^100^178
"DATA",300894,4,2,24,0)
^37^57^230^18^187^75^66^19^234^73^238^202^113^135^57^241^12^123^60^33^209^
"DATA",300894,4,2,25,0)
230^15^93^14^27^250^103^197^145^82^79^162^95^142^59^204^231^178^173^133^20
"DATA",300894,4,2,26,0)
6^174^223^75^237^145^254^90^165^178^134^251^11^41^228^187^168^127^60^130^1
"DATA",300894,4,2,27,0)
53^228^44^194^200^32^153^120^140^183^60^102^36^120^11^143^22^199^225^145^1
"DATA",300894,4,2,28,0)
75^166^185^38^108^230^215^227^148^107^134^198^159^224^254^117^191^124^251^
"DATA",300894,4,2,29,0)
200^137^26^206^254^183^41^218^144^47^64^255^150^176^241^235^22^208^67^130^
"DATA",300894,4,2,30,0)
78^141^144^169^111^98^249^121^134^198^35^72^36^233^236^71^123^17^162^77^13
"DATA",300894,4,2,31,0)
6^69^71^16^31^167^163^80^76^225^233^27^117^20^120^110^61^97^25^158^79^154^
"DATA",300894,4,2,32,0)
229^53^25^22^74^104^250^108^107^178^95^168^39^44^99^35^48^253^145^158^16^6
"DATA",300894,4,2,33,0)
0^71^75^186^39^165^47^112^151^23^168^164^145^41^228^144^15^68^17^238^143^3
"DATA",300894,4,2,34,0)
4^198^254^125^123^7^89^49^71^177^9^205^55^129^209^235^223^33^22^164^47^248
"DATA",300894,4,2,35,0)
^79^26^101^30^22^115^169^101^143^76^194^204^68^121^240^180^56^183^166^141^
"DATA",300894,4,2,36,0)
192^36^84^145^180^247^11^105^215^104^66^71^69^177^155^186^182^3^240^247^24
"DATA",300894,4,2,37,0)
0^96^30^101^229^193^53^154^71^155^21^9^203^221^229^205^41^20^245^83^97^154
"DATA",300894,4,2,38,0)
^11^132^7^164^54^235^17^8^124^52^89^167^214^148^216^107^56^72^102^203^102^
"DATA",300894,4,2,39,0)
101^56^47^229^114^94^180^249^181^105^242^164^211^230^251^90^32^45^67^220^2
"DATA",300894,4,2,40,0)
17^230^13^81^115^155^199^217^53^235^11^28^8^209^38^7^193^62^171^30^236^16^
"DATA",300894,4,2,41,0)
170^30^53^217^40^40^49^126^217^83^224^13^210^121^149^125^91^154^92^211^194
"DATA",300894,4,2,42,0)
^137^78^171^33^149^18^237^52^61^242^213^140^134^146^48^63^249^106^161^145^
"DATA",300894,4,2,43,0)
118^148^137^214^114^246^53^21^77^9^236^9^15^11^13^168^59^57^155^77^139^167
"DATA",300894,4,2,44,0)
^46^21^77^79^248^135^200^193^81^99^189^207^249^12^158^172^77^11^214^53^45^
"DATA",300894,4,2,45,0)
223^231^232^48^39^218^70^52^167^225^238^65^68^122^200^164^52^242^204^116^2
"DATA",300894,4,2,46,0)
55^253^185^154^66^230^208^168^13^222^125^121^190^178^91^194^217^196^111^20
"DATA",300894,4,2,47,0)
0^176^209^232^213^197^92^250^108^221^43^202^74^131^53^187^3^116^170^9^181^
"DATA",300894,4,2,48,0)
166^177^80^106^67^77^242^144^76^140^233^1^128^93^64^111^188^232^57^240^120
"DATA",300894,4,2,49,0)
^56^1^111^183^134^117^187^192^193^152^124^112^248^200^158^223^10^253^173^7
"DATA",300894,4,2,50,0)
1^190^63^48^191^102^208^16^221^187^177^237^205^51^173^201^247^176^49^82^51
"DATA",300894,4,2,51,0)
^38^15^87^59^31^86^254^163^219^47^110^146^242^155^123^98^211^26^9^124^62^1
"DATA",300894,4,2,52,0)
67^117^233^164^241^116^97^26^235^50^209^16^103^88^133^196^54^92^113^129^15
"DATA",300894,4,2,53,0)
3^94^104^175^151^40^218^203^224^95^141^175^172^97^132^27^92^89^87^92^224^6
"DATA",300894,4,2,54,0)
5^220^125^56^76^209^23^69^133^119^200^135^208^117^21^153^52^36^22^117^232^
"DATA",300894,4,2,55,0)
212^180^90^157^142^192^231^129^11^128^162^68^243^96^205^38^220^52^194^73^1
"DATA",300894,4,2,56,0)
91^252^124^130^157^206^197^224^168^192^163^139^115^34^95^213^131^200^147^2
"DATA",300894,4,2,57,0)
24^164^95^126^190^199^62^81^113^154^142^73^159^27^145^90^26^18^120^9^215^1
"DATA",300894,4,2,58,0)
61^133^249^170^39^97^40^253^22^82^152^55^153^182^217^220^55^40^162^114^138
"DATA",300894,4,2,59,0)
^139^209^176^10^236^185^46^69^15^103^56^177^105^25^11^115^186^167^226^101^
"DATA",300894,4,2,60,0)
85^35^219^221^17^49^116^104^252^22^98^67^64^233^47^61^27^114^130^11^17^88^
"DATA",300894,4,2,61,0)
100^57^36^64^108^96^22^97^95^222^156^37^113^246^37^138^118^242^60^107^26^2
"DATA",300894,4,2,62,0)
02^156^89^209^198^4^40^19^187^121^99^130^30^187^252^184^121^46^68^96^99^14
"DATA",300894,4,2,63,0)
0^171^242^226^42^213^35^16^128^94^181^226^122^21^57^180^1^224^237^206^99^2
"DATA",300894,4,2,64,0)
04^147^118^61^148^28^56^133^227^2^251^125^65^122^88^35^178^26^162^206^105^
"DATA",300894,4,2,65,0)
19^136^121^222^9^189^108^75^66^223^22^165^96^103^112^79^195^21^153^201^28^
"DATA",300894,4,2,66,0)
1^94^159^254^115^77^137^250^53^101^24^45^15^141^205^152^203^55^98^32^72^30
"DATA",300894,4,2,67,0)
^78^175^164^148^251^39^16^23^102^110^45^5^159^29^215^4^86^231^150^81^102^1
"DATA",300894,4,2,68,0)
72^149^215^176^190^106^46^195^248^201^164^117^47^77^193^127^145^254^239^17
"DATA",300894,4,2,69,0)
1^65^50^239^45^100^86^83^148^246^53^174^97^157^5^71^147^135^106^181^196^12
"DATA",300894,4,2,70,0)
8^74^198^77^63^143^218^33^127^186^241^146^87^95^95^72^85^215^178^251^217^2
"DATA",300894,4,2,71,0)
28^180^240^245^166^232^100^75^173^78^71^224^86^167^237^4^54^57^173^118^160
"DATA",300894,4,2,72,0)
^99^210^173^13^240^63^205^156^143^129^91^122^199^241^0^0^0^0^73^69^78^68^1
"DATA",300894,4,2,73,0)
74^66^96^130^
"DATA",300894,4,3)
DG
"DATA",300894,4,4,0)
^300894.04^8^8
"DATA",300894,4,4,1,0)
Patient^TEXT
"DATA",300894,4,4,1,1)
1
"DATA",300894,4,4,1,2)
1
"DATA",300894,4,4,1,4)
Patient Name
"DATA",300894,4,4,2,0)
MRN^TEXT
"DATA",300894,4,4,2,1)
2
"DATA",300894,4,4,2,2)
1
"DATA",300894,4,4,2,4)
Medical Record Number
"DATA",300894,4,4,3,0)
Order Number^TEXT
"DATA",300894,4,4,3,1)
3
"DATA",300894,4,4,3,2)
1
"DATA",300894,4,4,3,3)
188^3;8
"DATA",300894,4,4,3,4)
CPRS Order Number
"DATA",300894,4,4,4,0)
Start Date^DATE
"DATA",300894,4,4,4,1)
4
"DATA",300894,4,4,4,2)
1
"DATA",300894,4,4,4,4)
Start Date/Time
"DATA",300894,4,4,5,0)
Orderable Item^TEXT
"DATA",300894,4,4,5,1)
5
"DATA",300894,4,4,5,2)
1
"DATA",300894,4,4,5,4)
Orderable Item
"DATA",300894,4,4,6,0)
Status^TEXT
"DATA",300894,4,4,6,1)
6
"DATA",300894,4,4,6,2)
0
"DATA",300894,4,4,6,4)
Order Status
"DATA",300894,4,4,7,0)
Row Color^ROW COLOR
"DATA",300894,4,4,7,1)
7
"DATA",300894,4,4,7,2)
0
"DATA",300894,4,4,7,4)
Row Color
"DATA",300894,4,4,8,0)
DFN^NUMERIC
"DATA",300894,4,4,8,1)
8
"DATA",300894,4,4,8,2)
0
"DATA",300894,4,6)
3108
"DATA",300894,4,7)
3077
"DATA",300894,4,10)

"DATA",300894,4,11,0)
^300894.01P^3^3
"DATA",300894,4,11,1,0)
68
"DATA",300894,4,11,2,0)
71
"DATA",300894,4,11,3,0)
70
"DATA",300894,5,0)
Notes Due By Team^1
"DATA",300894,5,2,0)
^^70^70^3190607^
"DATA",300894,5,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^6^0^0^0^
"DATA",300894,5,2,2,0)
58^252^217^114^0^0^0^9^112^72^89^115^0^0^14^196^0^0^14^196^1^149^43^14^27^
"DATA",300894,5,2,3,0)
0^0^0^7^116^73^77^69^7^227^6^7^13^58^2^141^236^34^147^0^0^0^7^116^69^88^11
"DATA",300894,5,2,4,0)
6^65^117^116^104^111^114^0^169^174^204^72^0^0^0^12^116^69^88^116^68^101^11
"DATA",300894,5,2,5,0)
5^99^114^105^112^116^105^111^110^0^19^9^33^35^0^0^0^10^116^69^88^116^67^11
"DATA",300894,5,2,6,0)
1^112^121^114^105^103^104^116^0^172^15^204^58^0^0^0^14^116^69^88^116^67^11
"DATA",300894,5,2,7,0)
4^101^97^116^105^111^110^32^116^105^109^101^0^53^247^15^9^0^0^0^9^116^69^8
"DATA",300894,5,2,8,0)
8^116^83^111^102^116^119^97^114^101^0^93^112^255^58^0^0^0^11^116^69^88^116
"DATA",300894,5,2,9,0)
^68^105^115^99^108^97^105^109^101^114^0^183^192^180^143^0^0^0^8^116^69^88^
"DATA",300894,5,2,10,0)
116^87^97^114^110^105^110^103^0^192^27^230^135^0^0^0^7^116^69^88^116^83^11
"DATA",300894,5,2,11,0)
1^117^114^99^101^0^245^255^131^235^0^0^0^8^116^69^88^116^67^111^109^109^10
"DATA",300894,5,2,12,0)
1^110^116^0^246^204^150^191^0^0^0^6^116^69^88^116^84^105^116^108^101^0^168
"DATA",300894,5,2,13,0)
^238^210^39^0^0^4^143^73^68^65^84^104^129^237^91^177^110^234^72^20^61^179^
"DATA",300894,5,2,14,0)
122^95^17^101^145^229^241^87^32^40^54^133^237^15^160^192^84^84^150^176^180
"DATA",300894,5,2,15,0)
^91^69^184^161^76^99^202^45^176^148^138^138^113^145^15^96^82^108^129^253^2
"DATA",300894,5,2,16,0)
5^216^138^118^163^252^198^108^129^60^207^99^8^24^227^36^47^192^145^144^192
"DATA",300894,5,2,17,0)
^51^30^238^225^222^59^115^207^140^33^255^254^249^135^192^5^225^183^175^54^
"DATA",300894,5,2,18,0)
224^179^113^113^132^127^20^63^252^254^247^63^95^101^199^135^226^191^191^23
"DATA",300894,5,2,19,0)
8^228^251^139^243^240^149^240^185^227^74^248^220^113^52^97^66^8^8^33^200^1
"DATA",300894,5,2,20,0)
78^76^185^110^219^54^60^207^107^204^176^143^66^45^15^83^74^27^33^71^8^65^1
"DATA",300894,5,2,21,0)
46^36^39^143^115^12^106^17^118^93^23^156^243^79^55^182^9^212^34^220^106^18
"DATA",300894,5,2,22,0)
1^48^26^141^48^28^14^247^246^179^109^91^166^0^33^4^81^20^1^0^146^36^1^33^4
"DATA",300894,5,2,23,0)
^0^208^237^118^149^54^0^48^12^67^222^99^24^134^50^166^231^121^202^152^229^
"DATA",300894,5,2,24,0)
212^58^132^218^147^214^253^253^61^210^52^85^12^45^194^182^109^0^128^16^2^6
"DATA",300894,5,2,25,0)
6^8^196^113^12^199^113^16^69^17^58^157^14^132^216^104^150^56^142^33^132^64
"DATA",300894,5,2,26,0)
^191^223^7^176^33^107^154^166^188^207^52^77^57^86^146^36^8^195^80^182^9^33
"DATA",300894,5,2,27,0)
^160^235^250^231^16^214^117^29^65^16^96^50^153^108^181^37^73^2^206^57^102^
"DATA",300894,5,2,28,0)
179^153^188^214^233^116^96^89^22^86^171^213^187^99^38^73^130^52^77^149^251
"DATA",300894,5,2,29,0)
^6^131^1^56^231^138^39^79^73^165^147^150^165^241^120^140^52^77^49^157^78^1
"DATA",300894,5,2,30,0)
19^182^151^127^125^93^215^247^134^224^235^235^43^0^40^33^219^237^118^101^1
"DATA",300894,5,2,31,0)
23^167^211^65^28^199^50^13^234^76^156^63^14^119^217^143^32^8^224^251^62^44
"DATA",300894,5,2,32,0)
^203^218^106^203^178^76^33^93^254^92^198^237^237^45^0^200^112^223^133^98^5
"DATA",300894,5,2,33,0)
8^16^66^160^105^26^198^227^113^101^123^79^46^60^198^227^49^40^165^224^156^
"DATA",300894,5,2,34,0)
43^70^149^151^174^60^204^7^131^129^114^127^238^213^252^62^0^239^70^76^25^1
"DATA",300894,5,2,35,0)
48^82^180^90^173^163^236^109^164^210^122^120^120^216^186^182^94^175^193^57
"DATA",300894,5,2,36,0)
^87^66^51^142^99^73^10^216^68^135^227^56^202^44^45^132^128^239^251^74^88^2
"DATA",300894,5,2,37,0)
31^147^214^116^58^85^174^155^166^41^39^187^170^32^197^45^158^171^30^62^67^
"DATA",300894,5,2,38,0)
92^9^159^59^174^132^127^21^24^134^81^121^121^58^6^7^9^151^151^130^93^5^253
"DATA",300894,5,2,39,0)
^119^66^37^15^83^74^149^130^221^52^205^47^209^178^77^160^86^105^153^23^247
"DATA",300894,5,2,40,0)
^195^225^16^235^245^186^81^131^62^26^181^115^120^48^24^32^77^83^41^6^118^2
"DATA",300894,5,2,41,0)
29^92^57^10^162^40^218^169^143^247^161^168^141^243^241^179^44^219^25^97^85
"DATA",300894,5,2,42,0)
^198^172^77^248^230^230^6^0^240^246^246^86^169^127^20^69^112^28^7^105^154^
"DATA",300894,5,2,43,0)
66^8^129^52^77^225^56^206^222^180^240^125^31^243^249^92^234^105^223^247^17
"DATA",300894,5,2,44,0)
^69^17^116^93^135^101^89^88^44^22^202^248^0^14^150^154^159^54^75^207^231^1
"DATA",300894,5,2,45,0)
15^4^65^32^213^210^46^163^203^8^130^64^214^222^101^61^61^28^14^17^134^161^
"DATA",300894,5,2,46,0)
236^187^90^173^48^26^141^14^218^81^155^112^238^217^220^211^135^176^94^175^
"DATA",300894,5,2,47,0)
183^68^65^81^97^85^65^81^90^230^158^204^61^27^134^225^150^18^219^133^218^1
"DATA",300894,5,2,48,0)
22^120^177^88^128^82^42^141^56^180^84^25^134^1^215^117^143^210^174^101^148
"DATA",300894,5,2,49,0)
^245^116^16^4^152^207^231^0^54^43^73^81^137^189^135^90^30^246^60^15^97^24^
"DATA",300894,5,2,50,0)
202^47^3^54^191^254^227^227^163^252^156^75^186^28^119^119^119^240^125^255^
"DATA",300894,5,2,51,0)
168^239^241^125^95^230^248^46^61^221^235^245^192^57^199^100^50^129^235^186
"DATA",300894,5,2,52,0)
^149^198^172^228^225^52^77^229^46^35^240^115^93^46^98^54^155^201^80^5^0^19
"DATA",300894,5,2,53,0)
8^152^178^100^229^158^45^142^3^96^75^35^23^193^24^83^182^120^24^99^74^223^
"DATA",300894,5,2,54,0)
124^30^224^156^163^215^235^85^161^242^253^245^176^231^121^200^178^12^203^2
"DATA",300894,5,2,55,0)
29^242^221^62^69^61^124^242^158^214^87^35^12^67^48^198^42^247^255^101^197^
"DATA",300894,5,2,56,0)
67^21^84^93^123^139^248^214^132^251^253^254^222^29^206^93^248^214^132^235^
"DATA",300894,5,2,57,0)
224^74^120^31^242^162^253^189^215^71^8^246^166^113^212^44^173^235^186^146^
"DATA",300894,5,2,58,0)
51^132^16^48^198^142^222^27^254^74^92^67^186^9^148^67^191^124^232^85^214^1
"DATA",300894,5,2,59,0)
97^69^137^232^121^158^124^21^83^165^60^102^93^52^78^56^203^50^80^74^193^24
"DATA",300894,5,2,60,0)
^147^91^66^207^207^207^50^191^163^40^194^106^181^146^109^65^16^40^229^35^1
"DATA",300894,5,2,61,0)
76^41^38^52^77^131^16^2^140^49^248^190^175^108^51^89^150^181^85^171^87^69^
"DATA",300894,5,2,62,0)
227^132^159^158^158^96^89^150^146^215^174^235^74^97^209^239^247^149^243^22
"DATA",300894,5,2,63,0)
3^118^187^13^0^202^49^170^101^89^178^246^206^199^137^227^88^182^159^178^18
"DATA",300894,5,2,64,0)
1^212^120^105^249^242^242^34^15^209^138^160^148^202^247^182^109^31^173^133
"DATA",300894,5,2,65,0)
^155^66^227^30^214^52^13^150^101^41^187^156^66^8^233^145^60^159^139^143^66
"DATA",300894,5,2,66,0)
^124^38^26^39^220^110^183^247^62^225^83^126^2^96^223^22^207^71^160^113^194
"DATA",300894,5,2,67,0)
^229^199^18^202^69^201^114^185^84^206^141^53^77^107^218^132^189^248^246^12
"DATA",300894,5,2,68,0)
2^184^10^174^231^195^151^132^43^225^115^199^197^17^38^215^63^106^157^57^46
"DATA",300894,5,2,69,0)
^142^240^255^112^166^42^252^190^203^93^109^0^0^0^0^73^69^78^68^174^66^96^1
"DATA",300894,5,2,70,0)
30^
"DATA",300894,5,3)
DG
"DATA",300894,5,4,0)
^300894.04^14^14
"DATA",300894,5,4,1,0)
Patient^TEXT
"DATA",300894,5,4,1,1)
2
"DATA",300894,5,4,1,2)
1
"DATA",300894,5,4,1,4)
Patient
"DATA",300894,5,4,2,0)
Note Title^TEXT
"DATA",300894,5,4,2,1)
7
"DATA",300894,5,4,2,2)
1
"DATA",300894,5,4,2,4)
Note Title
"DATA",300894,5,4,3,0)
Last Completed^DATE
"DATA",300894,5,4,3,1)
8
"DATA",300894,5,4,3,2)
1
"DATA",300894,5,4,3,3)
3093^8
"DATA",300894,5,4,3,4)
Click to see note text
"DATA",300894,5,4,4,0)
PCU^TEXT
"DATA",300894,5,4,4,1)
9
"DATA",300894,5,4,4,2)
1
"DATA",300894,5,4,4,4)
PCU
"DATA",300894,5,4,5,0)
PATIENT IEN^NUMERIC
"DATA",300894,5,4,5,1)
1
"DATA",300894,5,4,5,2)
0
"DATA",300894,5,4,6,0)
MRN^TEXT
"DATA",300894,5,4,6,1)
3
"DATA",300894,5,4,6,2)
1
"DATA",300894,5,4,6,4)
Medical Record Number
"DATA",300894,5,4,7,0)
Title IEN^NUMERIC
"DATA",300894,5,4,7,1)
6
"DATA",300894,5,4,7,2)
0
"DATA",300894,5,4,8,0)
Note IEN^NUMERIC
"DATA",300894,5,4,8,1)
10
"DATA",300894,5,4,8,2)
0
"DATA",300894,5,4,9,0)
Date Due^DATE
"DATA",300894,5,4,9,1)
11
"DATA",300894,5,4,9,2)
1
"DATA",300894,5,4,9,4)
Date Due
"DATA",300894,5,4,10,0)
Row Color^ROW COLOR
"DATA",300894,5,4,10,1)
12
"DATA",300894,5,4,10,2)
0
"DATA",300894,5,4,11,0)
Admission Date^DATE
"DATA",300894,5,4,11,1)
4
"DATA",300894,5,4,11,2)
1
"DATA",300894,5,4,11,4)
Admission Date
"DATA",300894,5,4,12,0)
Attending^TEXT
"DATA",300894,5,4,12,1)
5
"DATA",300894,5,4,12,2)
1
"DATA",300894,5,4,12,4)
Attending Provider
"DATA",300894,5,4,13,0)
Rule Applied^TEXT
"DATA",300894,5,4,13,1)
13
"DATA",300894,5,4,13,2)
1
"DATA",300894,5,4,13,3)
3166^14,7
"DATA",300894,5,4,13,4)
Rule Applied
"DATA",300894,5,4,13,5)
S DHCL=$$GET^XPAR("ALL","VIEW NOTES DUE RULE APPLIED")
"DATA",300894,5,4,14,0)
RuleIEN^TEXT
"DATA",300894,5,4,14,1)
14
"DATA",300894,5,4,14,2)
0
"DATA",300894,5,6)
3111
"DATA",300894,5,7)
3153
"DATA",300894,5,8)
Select Team
"DATA",300894,5,10)
3090
"DATA",300894,5,11,0)
^300894.01P^2^2
"DATA",300894,5,11,1,0)
68
"DATA",300894,5,11,2,0)
70
"DATA",300894,6,0)
Lab Draws Today Not At 6AM^1
"DATA",300894,6,1)
LT
"DATA",300894,6,2,0)
^^26^26^3190605^
"DATA",300894,6,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,6,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,6,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,6,2,4,0)
02^31^120^0^0^1^191^73^68^65^84^104^67^237^214^209^109^194^48^20^70^97^182
"DATA",300894,6,2,5,0)
^170^196^64^204^192^4^60^51^77^150^97^139^46^208^94^53^81^136^143^125^175^
"DATA",300894,6,2,6,0)
109^225^235^36^149^143^254^167^242^242^213^114^2^151^175^251^227^116^27^23
"DATA",300894,6,2,7,0)
2^94^27^232^94^35^250^231^144^1^57^208^110^1^57^208^110^1^57^208^110^1^89^
"DATA",300894,6,2,8,0)
143^254^190^44^235^24^144^149^232^85^220^215^13^100^49^26^220^121^189^2^17
"DATA",300894,6,2,9,0)
8^12^13^235^118^93^2^50^135^6^49^94^151^128^52^209^240^105^243^15^72^29^13
"DATA",300894,6,2,10,0)
^153^49^255^128^84^208^96^101^231^28^144^41^52^64^37^115^14^200^70^104^89^
"DATA",300894,6,2,11,0)
109^211^237^178^237^250^124^45^31^36^2^178^209^245^144^213^244^122^94^23^1
"DATA",300894,6,2,12,0)
07^208^109^90^62^103^64^182^120^16^231^85^132^67^126^167^29^55^144^58^90^2
"DATA",300894,6,2,13,0)
^43^187^194^84^179^170^6^210^68^75^96^25^43^206^48^107^55^4^200^28^90^2^78
"DATA",300894,6,2,14,0)
^91^105^202^125^94^106^133^150^224^211^86^212^209^208^178^124^184^29^183^4
"DATA",300894,6,2,15,0)
1^248^47^78^129^22^228^22^221^230^65^156^131^204^94^166^0^109^126^165^188^
"DATA",300894,6,2,16,0)
3^210^1^45^179^82^95^30^233^155^241^23^144^101^104^9^44^123^86^214^27^79^1
"DATA",300894,6,2,17,0)
15^3^89^140^150^32^51^102^101^161^53^53^144^53^232^57^248^146^179^10^209^2
"DATA",300894,6,2,18,0)
15^231^20^188^2^27^190^61^16^136^88^166^232^65^12^94^121^233^39^19^72^7^18
"DATA",300894,6,2,19,0)
0^204^42^66^7^127^217^17^45^83^59^236^73^203^212^236^59^189^47^90^150^46^6
"DATA",300894,6,2,20,0)
8^51^63^180^4^95^114^233^118^68^207^65^25^47^81^183^95^121^70^80^98^169^17
"DATA",300894,6,2,21,0)
2^163^246^250^114^137^3^20^139^50^142^218^225^107^220^8^208^237^18^41^103^
"DATA",300894,6,2,22,0)
173^145^189^208^18^172^219^37^138^142^91^23^75^64^182^67^75^176^174^251^56
"DATA",300894,6,2,23,0)
^32^155^162^37^112^215^125^22^144^173^209^115^16^203^62^11^72^31^180^116^7
"DATA",300894,6,2,24,0)
4^180^212^72^44^1^233^137^110^23^144^3^237^22^144^255^2^125^138^13^116^175
"DATA",300894,6,2,25,0)
^13^116^159^221^31^191^22^248^10^223^191^31^152^97^0^0^0^0^73^69^78^68^174
"DATA",300894,6,2,26,0)
^66^96^130^
"DATA",300894,6,3)
DG
"DATA",300894,6,4,0)
^300894.04^8^8
"DATA",300894,6,4,1,0)
Patient^TEXT
"DATA",300894,6,4,1,1)
1
"DATA",300894,6,4,1,2)
1
"DATA",300894,6,4,1,4)
Patient Name
"DATA",300894,6,4,2,0)
MRN^TEXT
"DATA",300894,6,4,2,1)
2
"DATA",300894,6,4,2,2)
1
"DATA",300894,6,4,2,4)
Medical Record Number
"DATA",300894,6,4,3,0)
Order Number^TEXT
"DATA",300894,6,4,3,1)
3
"DATA",300894,6,4,3,2)
1
"DATA",300894,6,4,3,3)
188^3;8
"DATA",300894,6,4,3,4)
CPRS Order Number
"DATA",300894,6,4,4,0)
Start Date^DATE
"DATA",300894,6,4,4,1)
4
"DATA",300894,6,4,4,2)
1
"DATA",300894,6,4,4,4)
Start Date/Time
"DATA",300894,6,4,5,0)
Orderable Item^TEXT
"DATA",300894,6,4,5,1)
5
"DATA",300894,6,4,5,2)
1
"DATA",300894,6,4,5,4)
Orderable Item
"DATA",300894,6,4,6,0)
Status^TEXT
"DATA",300894,6,4,6,1)
6
"DATA",300894,6,4,6,2)
0
"DATA",300894,6,4,6,4)
Order Status
"DATA",300894,6,4,7,0)
Row Color^ROW COLOR
"DATA",300894,6,4,7,1)
7
"DATA",300894,6,4,7,2)
0
"DATA",300894,6,4,8,0)
DFN^NUMERIC
"DATA",300894,6,4,8,1)
8
"DATA",300894,6,4,8,2)
0
"DATA",300894,6,6)
3127
"DATA",300894,6,7)
3077
"DATA",300894,6,11,0)
^300894.01P^2^2
"DATA",300894,6,11,1,0)
68
"DATA",300894,6,11,2,0)
70
"DATA",300894,7,0)
Unverified orders > T-30^1
"DATA",300894,7,1)
UV
"DATA",300894,7,2,0)
^^97^97^3190605^
"DATA",300894,7,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,7,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,7,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,7,2,4,0)
02^31^120^0^0^7^105^73^68^65^84^104^67^237^88^223^107^84^71^20^158^251^107
"DATA",300894,7,2,5,0)
^55^155^68^218^23^233^95^80^77^233^147^182^181^77^162^86^209^23^49^62^25^1
"DATA",300894,7,2,6,0)
9^146^208^196^128^52^193^24^170^80^17^98^130^90^187^105^147^246^65^17^10^3
"DATA",300894,7,2,7,0)
4^98^13^33^160^66^74^171^105^84^236^15^10^165^136^245^193^250^98^176^53^12
"DATA",300894,7,2,8,0)
5^242^65^74^213^213^117^55^187^247^71^191^51^231^238^221^93^77^147^157^221
"DATA",300894,7,2,9,0)
^37^24^200^199^48^59^59^119^238^204^55^223^156^57^115^230^106^59^62^105^18
"DATA",300894,7,2,10,0)
^139^13^186^255^187^168^176^68^122^161^144^103^211^231^7^206^249^165^151^1
"DATA",300894,7,2,11,0)
5^77^71^155^253^210^146^121^44^28^150^72^47^20^20^72^123^158^35^132^235^73
"DATA",300894,7,2,12,0)
^112^141^235^186^65^193^113^240^84^184^14^37^225^9^15^79^114^115^33^28^39^
"DATA",300894,7,2,13,0)
120^17^141^211^178^43^84^81^159^178^82^1^10^164^53^77^227^28^0^203^128^58^
"DATA",300894,7,2,14,0)
211^53^12^3^57^102^113^231^206^221^93^187^122^234^234^54^236^217^179^111^1
"DATA",300894,7,2,15,0)
06^234^175^76^43^52^160^23^81^176^109^155^27^203^158^168^70^21^106^230^129
"DATA",300894,7,2,16,0)
^241^184^160^105^58^198^211^117^122^29^12^184^96^219^238^191^143^30^182^18
"DATA",300894,7,2,17,0)
0^181^62^142^197^218^59^58^238^253^61^253^97^119^215^163^88^60^119^16^244^
"DATA",300894,7,2,18,0)
96^154^161^220^113^131^229^42^28^10^164^209^187^105^154^180^198^4^18^21^18
"DATA",300894,7,2,19,0)
5^92^116^17^143^199^19^137^25^211^208^39^38^190^183^204^240^240^240^151^22
"DATA",300894,7,2,20,0)
1^221^157^131^209^207^83^169^212^213^171^87^241^110^106^198^69^19^204^10^6
"DATA",300894,7,2,21,0)
1^112^87^120^81^246^234^47^160^18^20^14^23^215^181^161^104^48^176^157^22^1
"DATA",300894,7,2,22,0)
86^137^33^69^50^153^234^237^237^125^240^224^159^170^170^170^120^252^217^16
"DATA",300894,7,2,23,0)
3^135^177^229^203^95^67^75^168^127^255^254^253^87^94^93^86^89^89^233^56^24
"DATA",300894,7,2,24,0)
6^178^101^85^103^206^156^198^84^241^10^166^172^107^164^151^99^83^159^212^1
"DATA",300894,7,2,25,0)
16^62^228^30^46^10^164^177^123^208^187^231^65^24^93^199^192^24^153^74^168^
"DATA",300894,7,2,26,0)
23^155^55^111^90^177^162^102^229^202^154^103^241^100^56^28^214^52^3^134^17
"DATA",300894,7,2,27,0)
4^105^30^218^187^158^13^45^167^167^167^111^222^252^253^250^245^95^65^154^2
"DATA",300894,7,2,28,0)
5^186^114^123^106^180^98^190^10^115^35^151^244^252^173^3^128^138^52^101^11
"DATA",300894,7,2,29,0)
3^235^214^237^187^127^222^11^133^66^182^77^158^34^18^137^60^125^250^108^23
"DATA",300894,7,2,30,0)
5^214^134^134^134^45^108^110^176^124^208^208^225^55^60^210^213^245^196^248
"DATA",300894,7,2,31,0)
^248^183^183^111^255^113^229^202^15^152^140^109^167^48^141^68^34^241^38^22
"DATA",300894,7,2,32,0)
5^13^108^8^217^189^2^20^72^67^18^82^206^21^151^47^95^62^243^245^136^101^89
"DATA",300894,7,2,33,0)
^112^33^216^133^166^137^204^152^153^153^193^163^39^79^146^152^12^10^201^16
"DATA",300894,7,2,34,0)
4^231^217^105^246^18^213^213^86^44^22^75^36^146^253^253^253^176^126^144^14
"DATA",300894,7,2,35,0)
8^43^230^117^117^117^173^172^121^221^52^20^56^48^20^94^96^6^48^69^236^160^
"DATA",300894,7,2,36,0)
213^171^87^143^142^158^37^235^148^114^174^90^245^86^52^250^233^254^253^31^
"DATA",300894,7,2,37,0)
227^185^161^91^105^215^35^223^2^3^208^200^51^98^26^48^107^216^192^141^27^1
"DATA",300894,7,2,38,0)
91^177^246^169^148^219^210^210^140^54^96^204^53^74^80^158^165^4^22^52^111^
"DATA",300894,7,2,39,0)
156^19^39^78^164^211^105^104^111^89^33^20^176^67^145^87^132^124^87^3^93^24
"DATA",300894,7,2,40,0)
1^151^13^55^224^135^122^191^164^14^5^123^194^14^156^117^28^56^175^245^235^
"DATA",300894,7,2,41,0)
235^54^110^124^31^121^109^237^219^235^214^213^174^95^251^206^166^141^117^1
"DATA",300894,7,2,42,0)
17^117^107^214^174^125^183^190^254^189^218^218^53^27^54^212^163^12^129^153
"DATA",300894,7,2,43,0)
^106^192^24^83^80^84^153^160^188^9^130^81^3^165^44^75^3^111^150^144^221^54
"DATA",300894,7,2,44,0)
^252^9^204^218^182^169^5^234^249^17^106^44^139^246^49^67^246^64^13^130^126
"DATA",300894,7,2,45,0)
^10^135^50^105^128^7^3^224^176^144^224^249^76^67^174^130^231^161^96^232^24
"DATA",300894,7,2,46,0)
8^43^144^99^50^240^107^76^218^78^59^168^113^108^135^236^156^212^117^101^94
"DATA",300894,7,2,47,0)
^36^138^33^77^52^115^44^69^158^18^96^70^155^143^227^16^126^78^180^16^165^1
"DATA",300894,7,2,48,0)
20^240^49^46^111^98^248^25^246^111^193^180^129^64^251^194^81^28^233^231^12
"DATA",300894,7,2,49,0)
9^227^26^130^130^44^36^68^110^227^180^68^252^134^195^72^120^88^3^205^131^1
"DATA",300894,7,2,50,0)
75^20^180^65^137^109^150^110^209^40^142^52^121^89^191^40^117^10^133^224^25
"DATA",300894,7,2,51,0)
^28^196^19^58^20^117^53^211^178^132^174^177^186^48^101^36^172^128^244^235^
"DATA",300894,7,2,52,0)
176^22^122^129^243^162^161^68^154^22^154^7^5^103^20^224^79^64^137^234^193^
"DATA",300894,7,2,53,0)
11^246^65^189^225^228^208^64^31^141^224^235^92^15^33^6^18^29^63^178^134^94
"DATA",300894,7,2,54,0)
^148^214^143^53^224^36^119^133^34^74^55^15^10^33^164^240^80^153^152^33^162
"DATA",300894,7,2,55,0)
^226^3^15^167^55^38^38^149^118^71^70^70^218^218^218^80^95^154^196^62^212^1
"DATA",300894,7,2,56,0)
48^102^138^82^171^44^176^244^76^23^128^196^166^73^161^54^68^133^29^35^8^65
"DATA",300894,7,2,57,0)
^62^49^49^49^56^56^88^83^83^195^187^176^116^148^222^13^228^163^78^160^53^2
"DATA",300894,7,2,58,0)
19^12^120^167^82^54^212^229^176^105^116^116^172^175^175^175^179^179^243^22
"DATA",300894,7,2,59,0)
4^193^131^104^16^132^209^165^160^12^115^199^101^100^106^106^10^145^180^157
"DATA",300894,7,2,60,0)
^38^66^44^39^110^51^150^33^46^125^55^249^197^240^112^227^246^237^7^14^28^3
"DATA",300894,7,2,61,0)
2^131^113^177^38^210^205^104^188^98^180^143^41^212^85^68^25^72^195^45^180^
"DATA",300894,7,2,62,0)
180^180^65^72^211^244^199^151^206^68^92^184^240^13^184^54^53^53^13^12^12^2
"DATA",300894,7,2,63,0)
24^47^76^72^154^205^203^161^52^28^240^177^99^199^38^39^39^15^31^62^74^46^6
"DATA",300894,7,2,64,0)
9^222^196^46^94^188^132^64^116^219^182^109^253^253^125^150^101^36^147^73^1
"DATA",300894,7,2,65,0)
80^44^209^211^5^40^143^210^245^245^245^209^104^116^124^124^252^248^241^175
"DATA",300894,7,2,66,0)
^64^236^231^159^126^233^233^233^105^108^108^28^26^142^98^2^152^70^69^69^13
"DATA",300894,7,2,67,0)
3^60^92^202^195^91^141^52^15^137^37^206^20^168^6^54^141^165^223^177^99^123
"DATA",300894,7,2,68,0)
^119^119^247^201^147^39^143^28^137^130^113^107^107^107^116^240^8^24^203^18
"DATA",300894,7,2,69,0)
3^40^47^228^78^85^32^202^160^52^243^134^91^232^233^233^234^232^232^24^27^2
"DATA",300894,7,2,70,0)
7^219^218^176^101^104^232^51^255^177^239^37^203^137^50^144^134^204^240^122
"DATA",300894,7,2,71,0)
^228^22^132^216^187^247^35^232^125^232^208^33^148^121^203^101^236^33^240^2
"DATA",300894,7,2,72,0)
41^101^128^2^233^57^54^62^238^170^50^23^225^176^177^111^95^111^117^117^85^
"DATA",300894,7,2,73,0)
96^24^25^210^115^189^174^138^82^149^6^43^216^6^110^129^233^180^131^91^97^1
"DATA",300894,7,2,74,0)
12^55^161^72^149^227^10^78^89^201^243^144^121^168^134^146^72^75^26^46^206^
"DATA",300894,7,2,75,0)
109^252^192^60^100^210^29^250^122^36^191^158^225^233^11^60^23^222^79^163^4
"DATA",300894,7,2,76,0)
9^183^207^227^130^243^155^99^127^228^184^16^128^55^28^197^139^228^102^85^1
"DATA",300894,7,2,77,0)
86^56^20^167^116^238^170^234^8^87^249^180^163^40^68^39^249^113^1^160^195^1
"DATA",300894,7,2,78,0)
56^149^38^250^104^236^79^88^126^160^42^21^10^164^41^132^199^160^184^140^20
"DATA",300894,7,2,79,0)
0^243^24^193^53^42^241^31^225^50^69^210^32^139^90^158^141^95^144^45^244^18
"DATA",300894,7,2,80,0)
8^122^254^108^130^187^162^227^217^30^125^49^166^30^84^161^64^154^227^79^14
"DATA",300894,7,2,81,0)
0^51^147^74^200^3^197^215^140^230^145^155^40^3^75^254^231^72^86^82^237^76^
"DATA",300894,7,2,82,0)
2^81^28^162^44^121^113^193^170^146^210^200^116^67^55^44^51^92^81^81^153^22
"DATA",300894,7,2,83,0)
7^212^242^147^255^139^57^113^146^127^51^181^156^16^90^69^34^17^156^71^242^
"DATA",300894,7,2,84,0)
147^131^178^212^42^95^77^233^174^69^161^228^208^208^240^181^107^63^226^38^
"DATA",300894,7,2,85,0)
2^11^33^67^241^71^13^198^230^217^200^28^23^42^31^92^32^117^33^51^226^144^1
"DATA",300894,7,2,86,0)
45^145^179^205^205^205^187^119^127^8^222^244^5^98^62^20^253^169^215^195^11
"DATA",300894,7,2,87,0)
7^201^115^197^169^83^167^207^157^59^15^223^140^216^13^142^130^102^226^67^2
"DATA",300894,7,2,88,0)
42^14^98^101^32^75^58^75^139^39^9^183^216^222^222^190^115^231^7^244^246^25
"DATA",300894,7,2,89,0)
2^156^139^37^13^224^4^177^76^227^241^227^120^34^65^223^161^225^44^96^220^2
"DATA",300894,7,2,90,0)
54^51^66^70^108^201^27^182^193^255^36^158^227^229^97^182^216^36^145^72^24^
"DATA",300894,7,2,91,0)
102^102^90^126^237^28^40^146^116^174^17^103^109^225^69^4^244^254^191^13^11
"DATA",300894,7,2,92,0)
9^133^150^133^111^196^92^210^10^27^17^192^24^193^182^65^97^150^45^84^192^6
"DATA",300894,7,2,93,0)
6^227^32^98^47^206^140^103^233^100^62^40^144^230^49^124^109^160^55^92^179^
"DATA",300894,7,2,94,0)
28^59^47^229^226^185^71^153^68^31^209^115^52^206^238^136^130^161^64^250^22
"DATA",300894,7,2,95,0)
9^193^18^233^133^194^18^233^133^194^162^36^157^119^184^44^22^44^153^199^66
"DATA",300894,7,2,96,0)
^97^17^146^22^226^63^201^127^212^209^109^58^233^22^0^0^0^0^73^69^78^68^174
"DATA",300894,7,2,97,0)
^66^96^130^
"DATA",300894,7,3)
DG
"DATA",300894,7,4,0)
^300894.04^7^7
"DATA",300894,7,4,1,0)
DFN^TEXT
"DATA",300894,7,4,1,1)
1
"DATA",300894,7,4,1,2)
0
"DATA",300894,7,4,2,0)
Patient Name^TEXT
"DATA",300894,7,4,2,1)
2
"DATA",300894,7,4,2,2)
1
"DATA",300894,7,4,2,4)
Patient Name
"DATA",300894,7,4,3,0)
MRN^TEXT
"DATA",300894,7,4,3,1)
3
"DATA",300894,7,4,3,2)
1
"DATA",300894,7,4,3,4)
Medical Record Number
"DATA",300894,7,4,4,0)
Order Entered Date^DATE
"DATA",300894,7,4,4,1)
4
"DATA",300894,7,4,4,2)
1
"DATA",300894,7,4,4,4)
Order Entered Date
"DATA",300894,7,4,5,0)
Order Number^TEXT
"DATA",300894,7,4,5,1)
5
"DATA",300894,7,4,5,2)
1
"DATA",300894,7,4,5,3)
188^5;1
"DATA",300894,7,4,5,4)
CPRS Order Number
"DATA",300894,7,4,6,0)
Status^TEXT
"DATA",300894,7,4,6,1)
6
"DATA",300894,7,4,6,2)
1
"DATA",300894,7,4,6,4)
Order Status
"DATA",300894,7,4,7,0)
Display Group^TEXT
"DATA",300894,7,4,7,1)
7
"DATA",300894,7,4,7,2)
1
"DATA",300894,7,4,7,4)
CPRS Display Group
"DATA",300894,7,6)
3128
"DATA",300894,7,7)
3077
"DATA",300894,7,11,0)
^300894.01P^2^2
"DATA",300894,7,11,1,0)
68
"DATA",300894,7,11,2,0)
70
"DATA",300894,8,0)
Orders Expiring Next 10 Days By Team^1
"DATA",300894,8,1)
EO
"DATA",300894,8,2,0)
^^79^79^3190607^
"DATA",300894,8,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^6^0^0^0^
"DATA",300894,8,2,2,0)
58^252^217^114^0^0^0^9^112^72^89^115^0^0^14^196^0^0^14^196^1^149^43^14^27^
"DATA",300894,8,2,3,0)
0^0^0^7^116^73^77^69^7^227^6^6^19^22^40^193^98^105^244^0^0^0^7^116^69^88^1
"DATA",300894,8,2,4,0)
16^65^117^116^104^111^114^0^169^174^204^72^0^0^0^12^116^69^88^116^68^101^1
"DATA",300894,8,2,5,0)
15^99^114^105^112^116^105^111^110^0^19^9^33^35^0^0^0^10^116^69^88^116^67^1
"DATA",300894,8,2,6,0)
11^112^121^114^105^103^104^116^0^172^15^204^58^0^0^0^14^116^69^88^116^67^1
"DATA",300894,8,2,7,0)
14^101^97^116^105^111^110^32^116^105^109^101^0^53^247^15^9^0^0^0^9^116^69^
"DATA",300894,8,2,8,0)
88^116^83^111^102^116^119^97^114^101^0^93^112^255^58^0^0^0^11^116^69^88^11
"DATA",300894,8,2,9,0)
6^68^105^115^99^108^97^105^109^101^114^0^183^192^180^143^0^0^0^8^116^69^88
"DATA",300894,8,2,10,0)
^116^87^97^114^110^105^110^103^0^192^27^230^135^0^0^0^7^116^69^88^116^83^1
"DATA",300894,8,2,11,0)
11^117^114^99^101^0^245^255^131^235^0^0^0^8^116^69^88^116^67^111^109^109^1
"DATA",300894,8,2,12,0)
01^110^116^0^246^204^150^191^0^0^0^6^116^69^88^116^84^105^116^108^101^0^16
"DATA",300894,8,2,13,0)
8^238^210^39^0^0^5^86^73^68^65^84^104^129^237^91^189^110^242^58^24^126^114
"DATA",300894,8,2,14,0)
^244^93^6^231^19^194^185^140^180^210^97^32^185^128^14^129^137^169^146^35^1
"DATA",300894,8,2,15,0)
57^51^85^100^233^200^66^212^233^12^137^196^196^84^50^244^2^8^3^67^137^58^2
"DATA",300894,8,2,16,0)
44^26^112^132^56^189^15^159^1^217^114^66^126^8^133^254^80^30^9^169^142^29^
"DATA",300894,8,2,17,0)
219^79^252^250^231^125^252^86^219^252^253^23^199^15^194^31^159^221^129^143
"DATA",300894,8,2,18,0)
^198^143^35^252^75^77^252^249^239^226^179^250^113^82^252^247^79^91^254^253
"DATA",300894,8,2,19,0)
^227^70^248^66^248^220^81^74^216^113^28^104^154^150^250^57^142^243^174^6^2
"DATA",300894,8,2,20,0)
9^199^129^174^235^133^249^113^28^67^211^52^196^113^252^174^118^138^240^171
"DATA",300894,8,2,21,0)
^170^0^165^20^190^239^31^173^193^170^186^12^195^0^231^167^59^26^28^100^210
"DATA",300894,8,2,22,0)
^217^81^72^146^68^166^227^56^134^174^235^8^195^80^90^133^101^89^242^93^207
"DATA",300894,8,2,23,0)
^243^100^90^148^245^60^79^90^143^168^43^73^18^0^128^101^89^169^186^212^60^
"DATA",300894,8,2,24,0)
81^95^214^10^61^207^59^46^97^195^48^64^41^69^191^223^7^176^53^211^209^104^
"DATA",300894,8,2,25,0)
4^195^48^0^0^140^49^76^38^19^112^206^193^57^71^20^69^133^157^96^140^97^189
"DATA",300894,8,2,26,0)
^94^131^115^94^56^250^221^110^23^140^49^112^206^65^41^149^211^42^142^99^18
"DATA",300894,8,2,27,0)
4^174^43^243^76^211^4^165^20^131^193^224^112^194^65^16^228^126^93^209^57^9
"DATA",300894,8,2,28,0)
3^215^177^90^173^118^26^153^205^102^242^239^209^104^132^197^162^120^143^17
"DATA",300894,8,2,29,0)
5^50^243^209^104^132^86^171^5^0^232^245^122^88^173^86^0^128^183^183^55^16^
"DATA",300894,8,2,30,0)
66^100^94^187^221^78^141^126^30^42^9^83^74^229^72^113^206^101^229^0^48^28^
"DATA",300894,8,2,31,0)
14^193^24^195^112^56^44^173^227^247^239^223^85^205^212^2^99^12^0^208^104^5
"DATA",300894,8,2,32,0)
2^192^24^147^36^23^139^69^170^127^121^120^215^182^212^237^118^65^41^69^183
"DATA",300894,8,2,33,0)
^219^45^45^183^217^108^222^211^76^37^8^33^208^52^13^171^213^170^210^90^14^
"DATA",300894,8,2,34,0)
38^236^56^142^92^193^77^211^220^217^174^212^180^235^186^114^190^31^19^47^4
"DATA",300894,8,2,35,0)
7^47^41^11^20^166^94^134^202^109^41^8^2^4^65^32^211^166^105^162^223^239^35
"DATA",300894,8,2,36,0)
^8^2^185^125^248^190^15^66^8^122^189^158^44^215^108^54^161^105^26^128^237^
"DATA",300894,8,2,37,0)
180^176^109^187^54^161^42^12^6^3^232^186^46^219^17^253^83^215^143^44^52^21
"DATA",300894,8,2,38,0)
3^31^62^134^243^16^199^49^174^174^174^78^186^151^10^8^43^82^205^88^215^117
"DATA",300894,8,2,39,0)
^12^135^195^212^7^62^27^231^33^73^18^52^155^205^212^51^198^24^26^141^70^22
"DATA",300894,8,2,40,0)
5^59^149^38^253^149^49^155^205^160^105^26^92^215^149^207^166^211^169^60^15
"DATA",300894,8,2,41,0)
^228^225^232^132^79^125^52^204^162^110^91^223^218^164^15^193^133^240^185^2
"DATA",300894,8,2,42,0)
27^66^248^35^144^117^1^63^18^181^9^231^169^32^223^9^181^182^37^203^178^176
"DATA",300894,8,2,43,0)
^90^173^82^91^129^112^192^25^99^149^158^202^87^192^222^35^28^199^49^162^40
"DATA",300894,8,2,44,0)
^218^57^160^15^6^3^152^166^137^135^135^7^0^91^11^240^60^79^158^113^133^42^
"DATA",300894,8,2,45,0)
98^89^150^180^136^167^167^167^157^250^69^249^60^133^196^113^28^249^126^24^
"DATA",300894,8,2,46,0)
134^0^176^183^194^113^48^225^151^151^23^152^166^153^155^215^110^183^49^159
"DATA",300894,8,2,47,0)
^207^101^218^117^93^169^120^24^134^1^207^243^164^101^112^206^119^196^0^203
"DATA",300894,8,2,48,0)
^178^208^233^116^100^190^32^42^16^4^1^250^253^62^56^231^176^109^91^122^106
"DATA",300894,8,2,49,0)
^162^124^153^194^113^48^225^245^122^93^104^178^89^7^159^82^154^58^222^141^
"DATA",300894,8,2,50,0)
199^227^148^72^160^30^246^147^36^65^20^69^184^187^187^147^207^250^253^62^1
"DATA",300894,8,2,51,0)
98^227^177^76^155^166^185^227^109^169^31^184^14^106^205^225^162^85^117^179
"DATA",300894,8,2,52,0)
^217^148^74^175^0^74^15^244^192^214^137^47^75^171^240^125^95^46^158^64^189
"DATA",300894,8,2,53,0)
^227^229^222^35^124^125^125^141^40^138^114^243^22^139^5^218^237^118^110^15
"DATA",300894,8,2,54,0)
8^192^219^219^91^105^190^16^226^246^117^230^125^223^151^162^158^58^231^171
"DATA",300894,8,2,55,0)
^176^55^97^219^182^65^8^217^169^220^113^28^68^81^84^58^143^58^157^14^238^2
"DATA",300894,8,2,56,0)
39^239^83^105^129^86^171^149^90^244^234^34^235^30^86^161^214^62^44^190^186
"DATA",300894,8,2,57,0)
^186^66^206^231^243^74^147^18^115^86^188^51^153^76^82^249^179^217^12^243^2
"DATA",300894,8,2,58,0)
49^124^239^27^14^117^69^119^93^183^84^225^200^226^232^138^199^87^196^217^4
"DATA",300894,8,2,59,0)
0^30^135^224^66^248^220^113^33^124^238^184^16^62^119^228^18^14^195^176^242
"DATA",300894,8,2,60,0)
^108^252^93^113^178^17^86^253^223^236^79^248^180^159^129^147^17^158^205^10
"DATA",300894,8,2,61,0)
2^210^17^32^132^96^58^157^202^244^41^46^214^246^69^41^97^53^126^66^156^109
"DATA",300894,8,2,62,0)
^243^204^93^141^219^168^131^172^62^86^212^182^154^151^141^11^17^138^135^16
"DATA",300894,8,2,63,0)
^6^179^138^201^222^132^197^45^59^231^28^140^49^4^65^128^48^12^97^219^54^24
"DATA",300894,8,2,64,0)
^99^169^176^162^241^120^92^251^254^215^243^60^233^120^112^206^49^26^141^10
"DATA",300894,8,2,65,0)
0^71^195^48^148^113^31^34^118^67^117^38^212^184^144^229^114^9^215^117^65^8
"DATA",300894,8,2,66,0)
^73^197^148^20^77^155^66^194^132^16^233^242^181^90^45^80^74^241^252^252^12
"DATA",300894,8,2,67,0)
^96^171^104^60^62^62^2^216^126^113^198^88^109^51^205^170^32^55^55^55^136^1
"DATA",300894,8,2,68,0)
62^8^73^146^192^182^237^148^42^146^23^187^33^242^133^178^178^92^46^101^30^
"DATA",300894,8,2,69,0)
165^180^48^234^96^239^57^172^250^157^189^94^79^94^146^63^62^62^130^82^186^
"DATA",300894,8,2,70,0)
111^53^41^116^187^93^105^134^89^133^67^93^244^212^219^193^125^177^94^175^1
"DATA",300894,8,2,71,0)
15^159^215^210^180^4^12^195^0^33^4^97^24^98^62^159^167^110^254^235^64^93^2
"DATA",300894,8,2,72,0)
00^212^160^25^97^190^170^185^31^11^165^115^88^40^135^73^146^32^8^130^20^49
"DATA",300894,8,2,73,0)
^85^197^40^187^143^45^194^237^237^109^74^5^201^66^21^12^85^65^239^189^40^3
"DATA",300894,8,2,74,0)
6^108^154^38^214^235^181^52^55^53^240^12^216^154^53^99^12^183^183^183^7^53
"DATA",300894,8,2,75,0)
^60^24^12^208^233^116^82^43^177^88^253^125^223^79^197^135^169^146^208^123^
"DATA",300894,8,2,76,0)
113^176^226^145^36^9^8^33^88^46^151^7^141^240^71^226^40^138^199^235^235^43
"DATA",300894,8,2,77,0)
^8^33^95^158^108^22^7^19^158^76^38^71^53^181^143^194^193^49^30^117^148^194
"DATA",300894,8,2,78,0)
^175^132^31^231^30^106^151^127^212^58^115^252^56^194^255^3^163^211^204^177
"DATA",300894,8,2,79,0)
^203^126^152^1^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,8,3)
DG
"DATA",300894,8,4,0)
^300894.04^9^9
"DATA",300894,8,4,1,0)
DFN^TEXT
"DATA",300894,8,4,1,1)
1
"DATA",300894,8,4,1,2)
0
"DATA",300894,8,4,2,0)
Patient Name^TEXT
"DATA",300894,8,4,2,1)
2
"DATA",300894,8,4,2,2)
1
"DATA",300894,8,4,2,4)
Patient Name
"DATA",300894,8,4,3,0)
MRN^TEXT
"DATA",300894,8,4,3,1)
3
"DATA",300894,8,4,3,2)
1
"DATA",300894,8,4,3,4)
Medical Record Number
"DATA",300894,8,4,4,0)
Ward^TEXT
"DATA",300894,8,4,4,1)
4
"DATA",300894,8,4,4,2)
1
"DATA",300894,8,4,4,4)
Patient Ward
"DATA",300894,8,4,5,0)
Order Start Date^DATE
"DATA",300894,8,4,5,1)
5
"DATA",300894,8,4,5,2)
1
"DATA",300894,8,4,5,4)
Order Start Date
"DATA",300894,8,4,6,0)
Order Stop Date^DATE
"DATA",300894,8,4,6,1)
6
"DATA",300894,8,4,6,2)
1
"DATA",300894,8,4,6,4)
Order Stop Date
"DATA",300894,8,4,7,0)
Order Number^NUMERIC
"DATA",300894,8,4,7,1)
7
"DATA",300894,8,4,7,2)
1
"DATA",300894,8,4,7,3)
188^7;1
"DATA",300894,8,4,7,4)
CPRS Order Number
"DATA",300894,8,4,8,0)
Order Status^TEXT
"DATA",300894,8,4,8,1)
8
"DATA",300894,8,4,8,2)
1
"DATA",300894,8,4,8,4)
Order Status
"DATA",300894,8,4,9,0)
Display Group^TEXT
"DATA",300894,8,4,9,1)
9
"DATA",300894,8,4,9,2)
1
"DATA",300894,8,4,9,4)
CPRS Display Group
"DATA",300894,8,6)
3129
"DATA",300894,8,7)
3112
"DATA",300894,8,8)
Select Team
"DATA",300894,8,11,0)
^300894.01P^2^2
"DATA",300894,8,11,1,0)
68
"DATA",300894,8,11,2,0)
70
"DATA",300894,9,0)
Notes Due Forecast^1
"DATA",300894,9,1)
NDF
"DATA",300894,9,2,0)
^^142^142^3190617^
"DATA",300894,9,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,9,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,9,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,9,2,4,0)
02^31^120^0^0^11^33^73^68^65^84^104^67^237^152^121^80^20^87^30^199^247^143
"DATA",300894,9,2,5,0)
^252^103^89^86^18^215^141^150^150^90^49^198^115^152^129^25^6^230^30^80^238
"DATA",300894,9,2,6,0)
^129^30^152^225^240^96^85^118^209^34^152^24^79^76^172^74^82^166^112^93^15^
"DATA",300894,9,2,7,0)
226^145^37^107^118^77^214^115^173^162^8^9^30^168^8^113^21^141^7^135^186^42
"DATA",300894,9,2,8,0)
^209^148^10^10^194^12^51^208^51^211^61^255^238^183^251^53^143^1^26^75^179^
"DATA",300894,9,2,9,0)
145^210^42^191^245^171^153^215^175^251^189^247^233^95^255^222^239^189^238^
"DATA",300894,9,2,10,0)
223^173^216^89^243^210^217^43^232^225^178^62^232^224^11^47^138^250^10^250^
"DATA",300894,9,2,11,0)
57^139^162^14^19^244^47^191^252^210^213^213^133^66^71^71^7^202^164^242^89^
"DATA",300894,9,2,12,0)
69^81^135^9^186^165^165^37^57^57^25^5^157^78^247^210^64^255^38^162^168^195
"DATA",300894,9,2,13,0)
^4^125^245^234^213^13^27^54^160^176^118^237^218^203^151^47^147^202^103^21^
"DATA",300894,9,2,14,0)
69^29^110^79^187^221^238^31^127^252^241^163^143^62^146^142^159^69^20^117^1
"DATA",300894,9,2,15,0)
52^160^181^90^173^211^233^220^188^121^115^85^85^213^131^7^15^164^218^103^2
"DATA",300894,9,2,16,0)
0^69^29^54^79^243^254^171^23^131^233^250^94^211^241^233^38^215^127^78^75^3
"DATA",300894,9,2,17,0)
9^159^78^20^117^216^160^57^127^253^185^96^186^33^212^220^47^1^116^67^221^4
"DATA",300894,9,2,18,0)
3^232^223^2^218^229^114^85^87^87^167^132^41^173^111^143^193^239^242^164^68
"DATA",300894,9,2,19,0)
^98^179^167^71^248^219^30^224^236^139^8^61^99^198^140^123^247^238^97^122^2
"DATA",300894,9,2,20,0)
45^50^25^137^37^171^21^254^76^211^253^251^247^95^80^104^225^175^143^73^74^
"DATA",300894,9,2,21,0)
20^5^17^10^62^219^220^212^212^244^34^66^39^38^38^10^127^253^177^96^159^25^
"DATA",300894,9,2,22,0)
34^189^14^211^233^211^167^159^59^52^207^243^99^198^140^33^101^172^97^208^1
"DATA",300894,9,2,23,0)
64^73^147^200^225^80^170^169^169^105^111^111^31^128^5^107^176^233^78^219^1
"DATA",300894,9,2,24,0)
62^203^202^202^174^92^185^82^88^88^152^97^183^39^36^36^196^198^198^174^88^
"DATA",300894,9,2,25,0)
185^186^225^210^79^164^109^109^109^45^230^3^41^63^65^20^85^30^154^227^184^
"DATA",300894,9,2,26,0)
237^219^183^95^186^116^9^229^8^81^235^214^173^35^167^32^222^199^242^29^237
"DATA",300894,9,2,27,0)
^161^134^202^219^183^111^55^54^54^14^32^134^181^101^196^236^141^81^148^150
"DATA",300894,9,2,28,0)
^150^170^213^97^231^206^157^19^28^18^240^7^185^0^124^255^206^140^169^55^11
"DATA",300894,9,2,29,0)
1^222^68^219^253^251^247^143^24^49^66^236^251^73^162^168^67^134^7^156^45^1
"DATA",300894,9,2,30,0)
49^250^11^27^226^91^135^191^17^129^164^168^229^211^162^197^203^121^140^221
"DATA",300894,9,2,31,0)
^203^106^100^237^6^98^9^202^153^173^173^173^152^163^236^241^239^216^162^10
"DATA",300894,9,2,32,0)
1^172^211^236^79^213^192^216^141^43^122^154^111^28^60^120^112^81^206^130^1
"DATA",300894,9,2,33,0)
61^198^26^32^138^58^36^52^156^29^8^4^164^131^16^141^28^57^242^81^85^69^47^
"DATA",300894,9,2,34,0)
28^49^61^57^181^106^213^42^82^195^167^155^99^103^42^136^121^89^239^148^41^
"DATA",300894,9,2,35,0)
227^185^36^165^120^135^6^158^49^241^73^90^152^112^183^233^198^158^109^197^
"DATA",300894,9,2,36,0)
104^56^107^214^172^167^225^166^168^67^66^135^133^133^137^255^82^95^227^198
"DATA",300894,9,2,37,0)
^141^35^133^5^11^22^244^156^63^221^139^43^65^147^219^211^104^52^164^166^40
"DATA",300894,9,2,38,0)
^90^217^208^212^72^236^224^129^253^30^38^218^253^97^174^216^17^39^246^39^1
"DATA",300894,9,2,39,0)
85^195^223^214^234^203^182^6^157^113^158^93^155^63^253^244^211^177^99^199^
"DATA",300894,9,2,40,0)
10^151^12^45^138^42^7^205^7^57^4^30^34^79^24^65^50^209^239^28^94^153^118^2
"DATA",300894,9,2,41,0)
36^216^209^81^93^25^66^12^51^222^189^123^23^237^34^35^35^177^19^98^211^141
"DATA",300894,9,2,42,0)
^73^12^163^80^43^136^245^172^89^230^203^177^10^140^34^53^145^207^231^35^22
"DATA",300894,9,2,43,0)
0^108^243^77^206^105^100^179^204^222^11^181^216^115^91^68^145^107^6^139^16
"DATA",300894,9,2,44,0)
2^246^65^119^247^138^244^30^104^125^16^104^189^31^106^172^199^13^232^163^7
"DATA",300894,9,2,45,0)
1^143^222^173^56^220^31^218^112^225^194^5^52^177^217^108^40^159^77^138^186
"DATA",300894,9,2,46,0)
^124^245^106^201^198^207^136^249^179^44^1^103^156^208^99^136^88^150^37^208
"DATA",300894,9,2,47,0)
^124^144^111^223^180^6^119^229^158^23^219^217^217^137^199^219^251^132^101^
"DATA",300894,9,2,48,0)
68^81^251^160^177^210^130^9^18^30^98^144^235^78^209^116^37^42^97^61^140^22
"DATA",300894,9,2,49,0)
^198^49^186^174^99^229^56^139^55^188^179^95^110^67^212^250^51^140^174^36^1
"DATA",300894,9,2,50,0)
49^199^166^70^249^235^175^191^70^167^203^10^10^16^42^31^104^149^94^175^215
"DATA",300894,9,2,51,0)
^181^113^13^49^54^99^78^37^99^238^233^21^112^17^190^248^133^119^112^232^24
"DATA",300894,9,2,52,0)
3^177^152^60^109^233^122^172^154^143^31^63^94^87^84^4^195^171^13^122^192^5
"DATA",300894,9,2,53,0)
^194^236^230^121^92^54^36^52^57^1^33^63^32^199^117^218^117^1^187^206^111^5
"DATA",300894,9,2,54,0)
5^116^165^168^5^139^87^22^39^152^208^17^186^219^184^104^30^14^59^19^148^18
"DATA",300894,9,2,55,0)
4^192^203^68^161^204^48^12^26^254^115^47^178^74^116^78^78^14^226^190^203^1
"DATA",300894,9,2,56,0)
66^33^118^39^53^250^204^153^51^240^43^134^7^31^92^3^143^18^122^4^9^132^195
"DATA",300894,9,2,57,0)
^111^183^125^238^207^180^20^23^23^163^12^9^203^167^223^143^11^176^62^192^7
"DATA",300894,9,2,58,0)
7^168^65^1^61^80^84^25^104^36^255^20^155^45^144^29^19^178^145^48^184^227^1
"DATA",300894,9,2,59,0)
49^69^58^165^199^227^65^95^121^90^13^64^57^7^182^22^6^31^163^247^36^168^11
"DATA",300894,9,2,60,0)
6^122^97^46^98^141^0^116^246^146^252^49^239^42^186^82^35^137^85^48^49^24^2
"DATA",300894,9,2,61,0)
4^184^164^115^64^67^128^38^225^33^136^15^150^151^151^63^182^105^87^173^94^
"DATA",300894,9,2,62,0)
141^229^9^74^73^73^17^170^121^30^13^9^46^65^167^168^50^208^215^174^93^43^4
"DATA",300894,9,2,63,0)
0^40^240^103^244^17^195^58^230^42^182^49^115^144^113^49^222^18^213^116^10^
"DATA",300894,9,2,64,0)
141^89^216^62^119^182^213^106^69^215^240^16^38^162^227^143^121^211^85^202^
"DATA",300894,9,2,65,0)
174^164^8^98^53^171^150^130^146^66^19^225^206^41^52^194^250^200^145^35^45^
"DATA",300894,9,2,66,0)
201^234^15^139^138^196^112^64^14^144^78^129^21^15^22^5^226^114^138^218^7^7
"DATA",300894,9,2,67,0)
7^251^125^237^181^215^118^124^245^213^67^198^44^166^82^179^63^75^48^80^158
"DATA",300894,9,2,68,0)
^47^217^124^254^252^121^140^247^247^252^249^56^116^219^212^128^14^56^77^22
"DATA",300894,9,2,69,0)
1^241^179^243^242^242^240^64^225^36^36^224^172^172^44^172^118^158^196^112^
"DATA",300894,9,2,70,0)
201^118^23^91^173^113^131^161^17^24^40^0^17^94^112^58^50^217^121^115^79^15
"DATA",300894,9,2,71,0)
7^58^5^50^8^149^56^117^252^248^113^60^88^220^15^136^33^52^161^168^125^208^
"DATA",300894,9,2,72,0)
98^56^9^194^141^254^240^195^15^55^146^13^237^115^102^1^142^88^103^188^242^
"DATA",300894,9,2,73,0)
191^123^191^60^116^232^16^26^151^175^41^232^74^84^161^146^92^224^141^155^1
"DATA",300894,9,2,74,0)
89^101^203^22^244^11^110^28^22^173^93^139^114^187^109^14^49^151^195^186^11
"DATA",300894,9,2,75,0)
2^225^66^100^76^145^86^18^58^193^244^192^228^193^112^128^46^200^113^194^47
"DATA",300894,9,2,76,0)
^56^36^208^120^50^168^127^244^232^17^202^232^10^191^228^14^41^170^12^116^1
"DATA",300894,9,2,77,0)
10^110^110^67^67^67^93^172^18^113^44^96^137^243^201^231^48^54^31^249^215^2
"DATA",300894,9,2,78,0)
14^173^91^49^94^245^231^235^124^14^131^43^41^28^103^59^231^42^252^140^254^
"DATA",300894,9,2,79,0)
192^129^3^24^3^253^226^202^227^223^124^133^56^217^109^14^39^198^102^232^14
"DATA",300894,9,2,80,0)
5^112^252^126^97^84^42^226^105^56^18^195^173^92^185^178^169^244^11^100^15^
"DATA",300894,9,2,81,0)
18^187^16^42^241^139^183^119^120^193^104^52^226^144^60^40^138^42^19^211^11
"DATA",300894,9,2,82,0)
1^189^245^22^98^119^95^140^22^177^1^235^11^235^138^35^194^182^137^15^54^25
"DATA",300894,9,2,83,0)
3^99^39^173^36^134^45^222^173^91^183^208^22^215^179^37^27^38^79^153^100^21
"DATA",300894,9,2,84,0)
2^168^137^117^59^99^220^27^150^131^146^116^62^64^39^79^158^44^41^41^233^20
"DATA",300894,9,2,85,0)
6^138^229^28^102^20^0^71^248^72^132^64^196^23^68^20^85^6^122^236^31^132^22
"DATA",300894,9,2,86,0)
9^116^137^86^53^128^204^123^162^34^45^45^13^208^131^151^241^135^15^31^98^2
"DATA",300894,9,2,87,0)
35^131^86^226^77^26^3^183^175^23^111^46^38^86^184^236^79^215^24^99^75^203^
"DATA",300894,9,2,88,0)
3^139^213^130^7^130^100^44^14^18^68^106^143^139^139^99^47^86^115^78^139^63
"DATA",300894,9,2,89,0)
^59^198^155^47^36^205^111^69^145^111^81^131^69^81^101^160^95^127^253^117^2
"DATA",300894,9,2,90,0)
52^166^68^132^135^166^60^24^160^163^162^162^112^74^118^239^33^125^52^74^55
"DATA",300894,9,2,91,0)
^242^152^157^169^186^146^146^237^196^206^212^156^201^52^68^123^243^152^64^
"DATA",300894,9,2,92,0)
143^231^254^253^123^112^103^246^252^28^68^121^75^107^139^231^226^73^46^195
"DATA",300894,9,2,93,0)
^90^30^31^201^59^98^177^40^10^205^69^97^151^59^115^230^76^233^32^68^20^85^
"DATA",300894,9,2,94,0)
6^186^190^190^30^43^226^76^197^236^193^208^36^131^14^134^70^37^249^40^74^1
"DATA",300894,9,2,95,0)
06^2^78^163^187^246^123^98^31^188^247^94^217^247^101^135^146^173^172^211^2
"DATA",300894,9,2,96,0)
34^205^77^100^203^247^249^126^170^101^107^142^5^210^244^158^12^75^190^90^2
"DATA",300894,9,2,97,0)
49^93^82^132^83^163^108^79^159^211^189^111^55^130^130^238^246^50^51^51^7^4
"DATA",300894,9,2,98,0)
^21^69^149^129^86^40^20^29^29^143^205^97^211^67^176^4^3^52^58^194^5^178^20
"DATA",300894,9,2,99,0)
8^106^181^90^104^220^91^201^58^77^146^185^218^116^58^221^122^173^50^37^66^
"DATA",300894,9,2,100,0)
117^193^166^247^59^132^71^129^223^75^54^179^93^21^126^249^88^5^159^28^213^
"DATA",300894,9,2,101,0)
204^24^77^42^36^126^83^128^237^128^33^2^225^181^138^138^138^143^63^254^88^
"DATA",300894,9,2,102,0)
232^179^87^20^85^6^186^170^170^10^147^125^167^133^50^73^6^104^204^27^44^22
"DATA",300894,9,2,103,0)
8^178^208^225^225^225^66^227^126^245^146^117^219^117^216^193^97^126^57^51^
"DATA",300894,9,2,104,0)
153^183^103^79^209^105^98^13^6^67^118^118^118^93^93^221^210^165^75^209^200
"DATA",300894,9,2,105,0)
^223^209^202^165^69^70^206^152^18^116^196^194^124^140^142^3^186^176^5^10^3
"DATA",300894,9,2,106,0)
4^51^82^127^83^84^25^232^241^227^199^159^56^113^226^112^66^212^128^177^1^1
"DATA",300894,9,2,107,0)
41^84^120^227^198^13^89^104^100^40^161^113^191^122^201^122^28^134^202^202^
"DATA",300894,9,2,108,0)
74^206^199^218^147^24^228^37^188^197^65^120^103^11^184^59^62^249^228^19^52
"DATA",300894,9,2,109,0)
^194^46^219^85^118^224^90^170^129^137^80^194^220^140^193^141^200^236^13^20
"DATA",300894,9,2,110,0)
^173^86^75^10^20^85^6^26^59^1^143^167^171^137^177^96^35^17^58^54^160^145^8
"DATA",300894,9,2,111,0)
9^15^31^62^44^11^189^103^207^30^161^113^191^122^201^0^189^105^211^38^95^12
"DATA",300894,9,2,112,0)
5^221^38^163^154^203^176^244^100^232^248^76^4^137^14^111^227^136^1^161^149
"DATA",300894,9,2,113,0)
^32^14^153^167^91^52^115^184^202^151^19^227^249^219^95^132^16^15^6^219^218
"DATA",300894,9,2,114,0)
^218^200^21^20^85^6^90^124^46^28^222^41^66^147^52^12^208^56^151^159^159^47
"DATA",300894,9,2,115,0)
^11^13^231^221^185^115^167^127^189^100^128^94^188^104^177^191^161^174^50^6
"DATA",300894,9,2,116,0)
5^215^146^57^151^214^3^250^250^245^235^200^21^100^80^239^170^69^24^81^176^
"DATA",300894,9,2,117,0)
12^253^252^104^77^107^170^182^123^239^78^100^81^132^7^249^58^76^81^135^132
"DATA",300894,9,2,118,0)
^14^56^12^205^118^43^29^0^70^160^223^124^243^77^89^104^104^215^174^93^253^
"DATA",300894,9,2,119,0)
235^37^3^244^196^137^19^1^221^153^25^115^40^182^47^234^0^141^165^100^253^2
"DATA",300894,9,2,120,0)
50^245^164^57^220^234^239^108^23^12^29^226^57^164^27^19^194^166^253^59^209
"DATA",300894,9,2,121,0)
^24^31^47^230^165^167^131^54^30^79^146^241^244^168^81^163^134^130^198^250^
"DATA",300894,9,2,122,0)
223^191^94^50^64^79^155^54^13^208^72^133^127^214^96^205^138^70^50^133^71^1
"DATA",300894,9,2,123,0)
89^181^39^208^74^165^82^145^230^84^224^14^166^8^47^194^129^12^115^187^221^
"DATA",300894,9,2,124,0)
32^213^62^37^244^23^230^240^208^177^9^52^214^151^161^160^77^166^126^121^15
"DATA",300894,9,2,125,0)
7^26^160^205^86^19^160^193^154^173^137^96^179^44^205^169^134^111^44^209^17
"DATA",300894,9,2,126,0)
1^23^204^79^77^77^197^67^32^205^233^210^141^121^233^254^254^136^120^99^38^
"DATA",300894,9,2,127,0)
206^174^163^153^155^162^202^66^67^92^79^110^130^77^249^142^107^97^28^181^2
"DATA",300894,9,2,128,0)
06^234^163^56^177^98^197^10^182^254^66^104^189^55^45^9^221^194^224^179^123
"DATA",300894,9,2,129,0)
^142^57^29^11^19^93^11^227^253^239^231^16^115^231^217^47^51^38^173^33^146^
"DATA",300894,9,2,130,0)
109^170^119^207^75^254^253^244^119^223^183^89^42^50^83^209^144^126^22^195^
"DATA",300894,9,2,131,0)
150^104^242^228^201^125^46^23^40^57^215^158^146^182^229^185^8^104^186^63^1
"DATA",300894,9,2,132,0)
64^168^114^208^66^27^30^222^126^227^141^55^132^50^53^225^37^157^63^123^246
"DATA",300894,9,2,133,0)
^236^207^63^255^140^3^208^47^94^188^120^244^232^209^136^242^169^83^167^98^
"DATA",300894,9,2,134,0)
195^128^4^47^52^23^133^43^169^208^22^189^225^87^244^153^184^73^229^131^34^
"DATA",300894,9,2,135,0)
138^80^77^4^56^178^255^12^145^244^189^129^28^64^20^117^40^79^11^154^48^97^
"DATA",300894,9,2,136,0)
2^56^254^42^10^73^195^110^183^59^28^142^194^194^66^242^193^160^185^185^153
"DATA",300894,9,2,137,0)
^92^246^255^11^73^13^171^166^94^175^167^187^60^89^81^212^39^65^55^54^54^14
"DATA",300894,9,2,138,0)
^186^123^65^116^131^251^132^1^158^135^40^234^147^160^135^210^48^179^82^81^
"DATA",300894,9,2,139,0)
212^95^3^13^149^150^150^74^165^97^20^69^253^53^208^120^155^32^159^148^94^1
"DATA",300894,9,2,140,0)
66^240^160^122^41^161^135^89^20^245^21^244^115^22^69^237^131^126^137^236^2
"DATA",300894,9,2,141,0)
1^244^240^216^206^154^255^1^120^91^85^51^162^124^88^88^0^0^0^0^73^69^78^68
"DATA",300894,9,2,142,0)
^174^66^96^130^
"DATA",300894,9,3)
DG
"DATA",300894,9,4,0)
^300894.04^14^14
"DATA",300894,9,4,1,0)
PATIENT IEN^NUMERIC
"DATA",300894,9,4,1,1)
1
"DATA",300894,9,4,1,2)
0
"DATA",300894,9,4,1,4)
Patient IEN
"DATA",300894,9,4,2,0)
Patient Name^TEXT
"DATA",300894,9,4,2,1)
2
"DATA",300894,9,4,2,2)
1
"DATA",300894,9,4,2,4)
Patient Name
"DATA",300894,9,4,3,0)
MRN^TEXT
"DATA",300894,9,4,3,1)
3
"DATA",300894,9,4,3,2)
1
"DATA",300894,9,4,3,4)
Medical Record Number
"DATA",300894,9,4,4,0)
Admission Date^DATE
"DATA",300894,9,4,4,1)
4
"DATA",300894,9,4,4,2)
1
"DATA",300894,9,4,4,4)
Admission Date
"DATA",300894,9,4,5,0)
Attending^TEXT
"DATA",300894,9,4,5,1)
5
"DATA",300894,9,4,5,2)
1
"DATA",300894,9,4,5,4)
Attending Physician
"DATA",300894,9,4,6,0)
Title IEN^NUMERIC
"DATA",300894,9,4,6,1)
6
"DATA",300894,9,4,6,2)
0
"DATA",300894,9,4,7,0)
Note Title^TEXT
"DATA",300894,9,4,7,1)
7
"DATA",300894,9,4,7,2)
1
"DATA",300894,9,4,7,4)
Note Title
"DATA",300894,9,4,8,0)
Last Completed^DATE
"DATA",300894,9,4,8,1)
8
"DATA",300894,9,4,8,2)
1
"DATA",300894,9,4,8,3)
3093^10
"DATA",300894,9,4,8,4)
Click to see note text
"DATA",300894,9,4,9,0)
PCU^TEXT
"DATA",300894,9,4,9,1)
9
"DATA",300894,9,4,9,2)
1
"DATA",300894,9,4,9,4)
PCU
"DATA",300894,9,4,10,0)
Note IEN^NUMERIC
"DATA",300894,9,4,10,1)
10
"DATA",300894,9,4,10,2)
0
"DATA",300894,9,4,11,0)
Date Due^DATE
"DATA",300894,9,4,11,1)
11
"DATA",300894,9,4,11,2)
1
"DATA",300894,9,4,11,4)
Date Due
"DATA",300894,9,4,12,0)
Row Color^ROW COLOR
"DATA",300894,9,4,12,1)
12
"DATA",300894,9,4,12,2)
0
"DATA",300894,9,4,13,0)
Rule Applied^TEXT
"DATA",300894,9,4,13,1)
13
"DATA",300894,9,4,13,2)
1
"DATA",300894,9,4,13,3)
3166^14,6
"DATA",300894,9,4,13,5)
S DHCL=$$GET^XPAR("ALL","VIEW NOTES DUE RULE APPLIED")
"DATA",300894,9,4,14,0)
RuleIEN^TEXT
"DATA",300894,9,4,14,1)
14
"DATA",300894,9,4,14,2)
0
"DATA",300894,9,6)
3130
"DATA",300894,9,7)
3112
"DATA",300894,9,8)
Select Team
"DATA",300894,9,10)
3090
"DATA",300894,9,11,0)
^300894.01P^2^2
"DATA",300894,9,11,1,0)
68
"DATA",300894,9,11,2,0)
70
"DATA",300894,10,0)
Missing Discharge Summaries^1
"DATA",300894,10,1)
DS
"DATA",300894,10,2,0)
^300894.02^37^37^3190807^^
"DATA",300894,10,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,10,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,10,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,10,2,4,0)
02^31^120^0^0^2^152^73^68^65^84^104^67^237^150^93^146^164^32^16^132^61^151
"DATA",300894,10,2,5,0)
^7^226^121^143^98^204^97^124^156^139^120^152^222^172^202^130^206^94^251^7^
"DATA",300894,10,2,6,0)
93^113^214^13^50^50^102^176^64^248^40^139^214^225^215^215^247^229^220^161^
"DATA",300894,10,2,7,0)
207^242^245^161^111^255^170^20^18^238^208^205^164^144^112^135^110^38^133^1
"DATA",300894,10,2,8,0)
32^59^116^51^41^36^92^5^61^167^33^52^78^203^237^182^76^227^144^230^232^187
"DATA",300894,10,2,9,0)
^203^194^28^112^184^20^18^222^8^61^24^237^95^66^191^184^253^157^20^18^222^
"DATA",300894,10,2,10,0)
12^253^142^10^227^62^67^47^83^154^230^101^219^243^80^72^184^174^166^61^137
"DATA",300894,10,2,11,0)
^105^54^248^113^154^239^23^195^56^142^105^246^94^195^205^155^67^147^177^24
"DATA",300894,10,2,12,0)
2^96^108^32^218^17^245^157^113^240^231^77^154^20^18^222^13^61^5^213^144^82
"DATA",300894,10,2,13,0)
^65^157^162^37^189^194^63^140^41^229^123^230^242^244^170^168^21^18^222^1^1
"DATA",300894,10,2,14,0)
89^216^130^118^65^32^131^246^157^56^52^247^20^37^139^113^206^148^199^35^21
"DATA",300894,10,2,15,0)
9^184^102^212^99^54^111^77^121^43^36^188^31^90^163^142^22^144^1^109^157^16
"DATA",300894,10,2,16,0)
0^44^208^216^160^253^167^36^211^62^211^39^41^36^188^235^32^26^68^201^52^24
"DATA",300894,10,2,17,0)
3^247^103^166^99^8^183^227^23^54^145^111^147^156^222^231^119^53^42^15^44^8
"DATA",300894,10,2,18,0)
0^84^206^29^88^93^165^65^177^196^37^24^245^205^29^222^211^26^252^103^100^2
"DATA",300894,10,2,19,0)
18^242^82^160^73^198^170^65^128^199^140^208^36^245^1^119^232^71^208^184^17
"DATA",300894,10,2,20,0)
1^38^209^251^106^250^32^121^69^69^101^212^176^22^41^36^124^38^180^37^186^1
"DATA",300894,10,2,21,0)
48^243^85^160^183^213^177^74^33^225^83^161^119^75^33^225^255^24^218^79^186
"DATA",300894,10,2,22,0)
^253^22^108^172^197^87^202^213^93^43^133^132^171^160^249^235^100^186^14^11
"DATA",300894,10,2,23,0)
6^57^63^135^65^111^149^66^194^213^153^230^155^208^223^32^252^156^227^11^15
"DATA",300894,10,2,24,0)
5^47^144^252^154^241^237^61^68^202^142^115^211^139^204^58^17^224^19^244^68
"DATA",300894,10,2,25,0)
^228^2^124^158^127^133^132^235^106^154^203^217^228^78^174^208^162^183^17^2
"DATA",300894,10,2,26,0)
20^157^249^169^252^38^125^236^58^16^218^101^107^228^111^28^44^98^123^64^40
"DATA",300894,10,2,27,0)
^127^95^190^140^196^173^222^244^94^123^47^98^215^241^81^197^177^232^225^17
"DATA",300894,10,2,28,0)
2^199^65^99^118^78^12^106^212^7^167^127^142^184^142^216^5^158^187^53^189^2
"DATA",300894,10,2,29,0)
3^55^23^122^102^23^77^44^98^227^216^90^75^33^225^106^232^144^23^181^175^87
"DATA",300894,10,2,30,0)
^9^237^129^24^206^222^152^49^162^124^114^8^224^111^204^177^150^66^194^187^
"DATA",300894,10,2,31,0)
160^67^126^158^248^151^225^232^92^71^92^15^223^168^214^40^125^241^20^77^13
"DATA",300894,10,2,32,0)
5^66^19^208^230^244^233^201^85^1^205^147^232^145^21^180^159^103^15^216^18^
"DATA",300894,10,2,33,0)
156^237^121^125^40^36^188^225^32^254^160^20^18^238^208^205^164^144^112^135
"DATA",300894,10,2,34,0)
^110^38^133^132^59^116^51^41^36^220^161^155^73^33^225^14^221^76^10^9^119^2
"DATA",300894,10,2,35,0)
32^102^82^72^184^67^55^147^66^194^29^186^153^20^18^238^208^205^164^144^240
"DATA",300894,10,2,36,0)
^245^161^175^226^14^125^150^47^8^253^245^253^27^215^233^109^43^67^92^17^20
"DATA",300894,10,2,37,0)
5^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,10,3)
DG
"DATA",300894,10,4,0)
^300894.04^5^5
"DATA",300894,10,4,1,0)
DFN^TEXT
"DATA",300894,10,4,1,1)
1
"DATA",300894,10,4,1,2)
0
"DATA",300894,10,4,2,0)
PATIENT^TEXT
"DATA",300894,10,4,2,1)
2
"DATA",300894,10,4,2,2)
1
"DATA",300894,10,4,3,0)
MRN^TEXT
"DATA",300894,10,4,3,1)
3
"DATA",300894,10,4,3,2)
1
"DATA",300894,10,4,3,4)
Medical Record Number
"DATA",300894,10,4,4,0)
DISCHARGE DATE^DATE
"DATA",300894,10,4,4,1)
4
"DATA",300894,10,4,4,2)
1
"DATA",300894,10,4,4,4)
Discharge Date
"DATA",300894,10,4,5,0)
COLOR^ROW COLOR
"DATA",300894,10,4,5,1)
5
"DATA",300894,10,4,5,2)
0
"DATA",300894,10,6)
3139
"DATA",300894,10,11,0)
^300894.01P^2^2
"DATA",300894,10,11,1,0)
68
"DATA",300894,10,11,2,0)
70
"DATA",300894,11,0)
Reminders^1
"DATA",300894,11,1)
REM
"DATA",300894,11,2,0)
^^34^34^3190910^
"DATA",300894,11,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,11,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,11,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,11,2,4,0)
02^31^120^0^0^2^106^73^68^65^84^104^67^237^151^193^145^131^48^12^69^183^15
"DATA",300894,11,2,5,0)
0^212^195^80^10^55^202^160^1^90^224^68^1^12^87^14^52^192^37^151^204^80^64^
"DATA",300894,11,2,6,0)
26^200^74^250^182^35^8^9^16^226^44^236^248^143^38^227^53^150^253^44^100^17
"DATA",300894,11,2,7,0)
2^253^57^149^209^225^44^64^127^203^142^15^125^219^177^52^103^128^246^41^20
"DATA",300894,11,2,8,0)
5^25^160^125^74^115^6^104^159^210^156^1^218^167^52^103^128^246^41^205^249^
"DATA",300894,11,2,9,0)
239^161^175^69^108^70^38^249^213^244^13^117^169^250^139^105^90^157^187^228
"DATA",300894,11,2,10,0)
^212^54^230^143^13^210^156^43^160^121^121^51^242^25^116^147^119^135^131^23
"DATA",300894,11,2,11,0)
8^179^248^1^250^83^114^144^100^43^160^171^150^198^100^21^39^73^146^119^25^
"DATA",300894,11,2,12,0)
187^212^197^249^118^201^107^106^36^212^25^83^163^140^210^222^109^47^171^24
"DATA",300894,11,2,13,0)
0^180^45^236^152^232^237^93^129^16^182^18^154^41^109^155^93^40^228^130^165
"DATA",300894,11,2,14,0)
^38^73^123^215^99^159^2^26^3^222^77^21^227^46^182^30^218^30^71^192^81^92^4
"DATA",300894,11,2,15,0)
1^43^8^165^106^147^180^77^84^32^155^20^89^36^79^241^187^37^191^53^231^123^
"DATA",300894,11,2,16,0)
233^113^119^177^208^180^25^206^10^3^45^41^20^215^59^128^86^7^145^45^238^15
"DATA",300894,11,2,17,0)
4^92^99^201^0^64^211^246^210^126^31^145^86^208^156^9^104^219^12^102^62^12^
"DATA",300894,11,2,18,0)
144^205^96^216^48^155^203^44^197^187^50^243^173^147^157^132^109^5^180^164^
"DATA",300894,11,2,19,0)
169^140^68^228^168^225^190^30^46^168^242^125^16^122^249^152^236^0^250^47^1
"DATA",300894,11,2,20,0)
65^57^3^180^79^105^206^0^237^83^154^115^6^218^94^215^100^242^125^120^169^2
"DATA",300894,11,2,21,0)
33^207^176^92^70^124^7^109^147^131^36^91^14^61^95^54^28^18^250^137^108^137
"DATA",300894,11,2,22,0)
^178^77^119^140^249^156^182^113^98^250^199^59^5^213^102^205^23^161^185^26^
"DATA",300894,11,2,23,0)
71^85^40^198^35^210^19^190^184^110^232^26^154^191^113^48^15^108^17^180^60^
"DATA",300894,11,2,24,0)
229^156^182^129^167^54^46^194^187^153^219^123^88^133^186^23^101^182^205^23
"DATA",300894,11,2,25,0)
7^9^223^37^215^164^30^191^48^210^188^12^22^30^85^164^200^99^250^53^113^197
"DATA",300894,11,2,26,0)
^219^176^253^52^30^155^153^244^165^106^86^42^65^234^244^6^29^119^133^169^6
"DATA",300894,11,2,27,0)
1^220^235^94^9^61^244^229^106^22^25^207^94^115^130^47^108^217^65^172^179^2
"DATA",300894,11,2,28,0)
12^190^208^81^69^186^10^122^228^43^243^35^210^210^249^82^88^29^182^16^186^
"DATA",300894,11,2,29,0)
200^165^129^51^71^102^142^29^74^57^108^73^109^204^21^116^242^43^86^23^21^1
"DATA",300894,11,2,30,0)
09^99^232^59^60^36^102^197^103^50^243^136^45^133^150^37^31^254^159^157^131
"DATA",300894,11,2,31,0)
^174^40^162^216^42^185^72^91^251^10^180^204^240^225^131^184^27^105^206^0^2
"DATA",300894,11,2,32,0)
37^83^154^51^64^251^148^230^12^208^62^165^57^3^180^79^105^206^0^237^83^154
"DATA",300894,11,2,33,0)
^51^64^251^148^230^60^62^244^81^44^64^127^203^2^244^119^172^140^126^1^106^
"DATA",300894,11,2,34,0)
186^225^129^84^75^53^49^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,11,3)
DG
"DATA",300894,11,4,0)
^300894.04^6^6
"DATA",300894,11,4,1,0)
DFN^TEXT
"DATA",300894,11,4,1,1)
1
"DATA",300894,11,4,1,2)
0
"DATA",300894,11,4,2,0)
PATIENT NAME^TEXT
"DATA",300894,11,4,2,1)
2
"DATA",300894,11,4,2,2)
1
"DATA",300894,11,4,2,4)
Patient Name
"DATA",300894,11,4,3,0)
Reminder^TEXT
"DATA",300894,11,4,3,1)
3
"DATA",300894,11,4,3,2)
1
"DATA",300894,11,4,3,4)
Reminder Name
"DATA",300894,11,4,4,0)
DUE DATE^DATE
"DATA",300894,11,4,4,1)
4
"DATA",300894,11,4,4,2)
1
"DATA",300894,11,4,4,4)
Due Date
"DATA",300894,11,4,5,0)
COLOR^ROW COLOR
"DATA",300894,11,4,5,1)
5
"DATA",300894,11,4,5,2)
0
"DATA",300894,11,4,6,0)
ADDITIONAL INFORMATION^WEBSITE
"DATA",300894,11,4,6,1)
6
"DATA",300894,11,4,6,2)
1
"DATA",300894,11,4,6,4)
Additional Information
"DATA",300894,11,6)
3145
"DATA",300894,11,7)
3077
"DATA",300894,11,10)
3146
"DATA",300894,11,11,0)
^300894.01P^2^2
"DATA",300894,11,11,1,0)
68
"DATA",300894,11,11,2,0)
70
"DATA",300894,12,0)
Covering Providers^1
"DATA",300894,12,1)
CP
"DATA",300894,12,2,0)
^^34^34^3190920^
"DATA",300894,12,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,12,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,12,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,12,2,4,0)
02^31^120^0^0^2^109^73^68^65^84^104^67^237^151^81^114^131^48^12^68^57^23^7
"DATA",300894,12,2,5,0)
^226^187^71^241^228^48^124^230^34^28^166^149^86^18^94^50^13^99^67^156^134^
"DATA",300894,12,2,6,0)
142^119^40^181^133^108^63^9^57^113^134^175^219^253^114^87^135^126^215^117^
"DATA",300894,12,2,7,0)
125^232^239^15^22^115^118^232^150^98^206^14^221^82^204^217^161^91^138^57^2
"DATA",300894,12,2,8,0)
55^55^244^146^198^193^52^166^197^109^37^210^113^211^236^157^19^98^206^82^2
"DATA",300894,12,2,9,0)
32^204^252^34^232^218^96^152^179^57^244^19^45^105^74^243^82^49^17^115^150^
"DATA",300894,12,2,10,0)
66^207^147^224^78^179^178^143^41^105^71^187^22^203^56^77^114^151^30^156^16
"DATA",300894,12,2,11,0)
^148^217^71^113^150^191^97^74^209^205^15^173^89^46^230^172^129^142^85^140^
"DATA",300894,12,2,12,0)
77^100^65^172^208^97^23^63^231^114^25^180^201^199^88^19^211^149^137^57^43^
"DATA",300894,12,2,13,0)
161^99^65^105^138^197^82^141^182^6^4^139^122^40^13^58^106^151^215^98^47^33
"DATA",300894,12,2,14,0)
^158^73^211^134^235^152^98^49^231^129^242^216^64^131^70^18^233^77^211^106^
"DATA",300894,12,2,15,0)
215^162^53^63^220^87^232^236^86^44^230^60^176^17^85^25^90^30^72^121^8^31^2
"DATA",300894,12,2,16,0)
40^198^52^35^245^193^42^178^6^238^6^29^115^85^49^159^133^182^18^86^97^89^1
"DATA",300894,12,2,17,0)
93^65^16^228^19^111^68^172^52^110^144^216^228^46^251^177^14^215^196^156^16
"DATA",300894,12,2,18,0)
5^208^14^167^75^63^166^74^31^88^211^92^52^128^29^232^188^43^171^216^153^17
"DATA",300894,12,2,19,0)
9^28^250^101^178^93^171^17^226^127^161^152^243^253^208^154^123^205^241^165
"DATA",300894,12,2,20,0)
^160^185^244^221^82^34^230^252^3^232^99^98^206^14^221^82^204^89^4^29^159^1
"DATA",300894,12,2,21,0)
18^162^162^58^140^189^230^245^91^85^187^207^196^156^181^208^69^4^31^7^93^2
"DATA",300894,12,2,22,0)
43^49^37^202^252^39^197^156^101^53^237^9^83^120^156^46^240^101^236^6^145^8
"DATA",300894,12,2,23,0)
0^193^195^207^168^248^202^19^91^196^170^208^214^214^136^205^83^135^87^125^
"DATA",300894,12,2,24,0)
171^51^231^81^104^32^232^169^30^242^195^198^22^58^152^153^95^168^225^185^8
"DATA",300894,12,2,25,0)
1^75^232^188^128^32^40^147^66^11^5^122^234^130^54^202^199^29^60^66^131^94^
"DATA",300894,12,2,26,0)
15^121^52^220^98^104^9^157^231^214^85^245^172^12^172^95^14^214^129^181^129
"DATA",300894,12,2,27,0)
^206^65^195^19^191^15^31^230^221^19^115^214^108^68^36^209^251^193^150^161^
"DATA",300894,12,2,28,0)
53^213^126^176^54^7^60^205^208^104^231^247^0^47^203^244^58^239^158^152^243
"DATA",300894,12,2,29,0)
^0^52^210^131^142^181^68^17^2^155^115^197^59^59^68^71^237^152^54^230^221^2
"DATA",300894,12,2,30,0)
3^115^158^130^14^106^48^155^155^231^28^14^248^209^158^11^31^54^58^106^139^
"DATA",300894,12,2,31,0)
191^5^230^195^247^197^156^101^53^253^1^98^206^14^221^82^204^217^161^91^138
"DATA",300894,12,2,32,0)
^57^59^116^75^49^103^135^110^41^230^236^208^45^197^156^29^186^165^152^179^
"DATA",300894,12,2,33,0)
67^183^20^115^118^232^150^98^206^235^67^95^229^234^208^239^186^46^8^125^18
"DATA",300894,12,2,34,0)
7^255^0^120^236^65^88^239^103^240^239^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,12,3)
DG
"DATA",300894,12,4,0)
^300894.04^8^8
"DATA",300894,12,4,1,0)
DFN^TEXT
"DATA",300894,12,4,1,1)
1
"DATA",300894,12,4,1,2)
0
"DATA",300894,12,4,2,0)
Patient Name^TEXT
"DATA",300894,12,4,2,1)
2
"DATA",300894,12,4,2,2)
1
"DATA",300894,12,4,2,4)
Patient Name
"DATA",300894,12,4,3,0)
Ward^TEXT
"DATA",300894,12,4,3,1)
3
"DATA",300894,12,4,3,2)
1
"DATA",300894,12,4,3,4)
Patient Ward
"DATA",300894,12,4,4,0)
Attending Psychiatrist^TEXT
"DATA",300894,12,4,4,1)
4
"DATA",300894,12,4,4,2)
1
"DATA",300894,12,4,4,4)
Attending Psychiatrist
"DATA",300894,12,4,5,0)
Covering Psychiatrist^TEXT
"DATA",300894,12,4,5,1)
5
"DATA",300894,12,4,5,2)
1
"DATA",300894,12,4,5,4)
Covering Psychiatrist
"DATA",300894,12,4,6,0)
Begin Date^DATE
"DATA",300894,12,4,6,1)
6
"DATA",300894,12,4,6,2)
1
"DATA",300894,12,4,6,4)
Begin Date
"DATA",300894,12,4,7,0)
End Date^DATE
"DATA",300894,12,4,7,1)
7
"DATA",300894,12,4,7,2)
1
"DATA",300894,12,4,7,4)
End Date
"DATA",300894,12,4,8,0)
Color^ROW COLOR
"DATA",300894,12,4,8,1)
8
"DATA",300894,12,4,8,2)
0
"DATA",300894,12,6)
3149
"DATA",300894,12,11,0)
^300894.01P^2^2
"DATA",300894,12,11,1,0)
68
"DATA",300894,12,11,2,0)
70
"DATA",300894,13,0)
Orders Expiring Next 5 Days By Team^1
"DATA",300894,13,1)
EO
"DATA",300894,13,2,0)
^^79^79^3190607^
"DATA",300894,13,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^6^0^0^0^
"DATA",300894,13,2,2,0)
58^252^217^114^0^0^0^9^112^72^89^115^0^0^14^196^0^0^14^196^1^149^43^14^27^
"DATA",300894,13,2,3,0)
0^0^0^7^116^73^77^69^7^227^6^6^19^22^40^193^98^105^244^0^0^0^7^116^69^88^1
"DATA",300894,13,2,4,0)
16^65^117^116^104^111^114^0^169^174^204^72^0^0^0^12^116^69^88^116^68^101^1
"DATA",300894,13,2,5,0)
15^99^114^105^112^116^105^111^110^0^19^9^33^35^0^0^0^10^116^69^88^116^67^1
"DATA",300894,13,2,6,0)
11^112^121^114^105^103^104^116^0^172^15^204^58^0^0^0^14^116^69^88^116^67^1
"DATA",300894,13,2,7,0)
14^101^97^116^105^111^110^32^116^105^109^101^0^53^247^15^9^0^0^0^9^116^69^
"DATA",300894,13,2,8,0)
88^116^83^111^102^116^119^97^114^101^0^93^112^255^58^0^0^0^11^116^69^88^11
"DATA",300894,13,2,9,0)
6^68^105^115^99^108^97^105^109^101^114^0^183^192^180^143^0^0^0^8^116^69^88
"DATA",300894,13,2,10,0)
^116^87^97^114^110^105^110^103^0^192^27^230^135^0^0^0^7^116^69^88^116^83^1
"DATA",300894,13,2,11,0)
11^117^114^99^101^0^245^255^131^235^0^0^0^8^116^69^88^116^67^111^109^109^1
"DATA",300894,13,2,12,0)
01^110^116^0^246^204^150^191^0^0^0^6^116^69^88^116^84^105^116^108^101^0^16
"DATA",300894,13,2,13,0)
8^238^210^39^0^0^5^86^73^68^65^84^104^129^237^91^189^110^242^58^24^126^114
"DATA",300894,13,2,14,0)
^244^93^6^231^19^194^185^140^180^210^97^32^185^128^14^129^137^169^146^35^1
"DATA",300894,13,2,15,0)
57^51^85^100^233^200^66^212^233^12^137^196^196^84^50^244^2^8^3^67^137^58^2
"DATA",300894,13,2,16,0)
44^26^112^132^56^189^15^159^1^217^114^66^126^8^133^254^80^30^9^169^142^29^
"DATA",300894,13,2,17,0)
219^79^252^250^231^125^252^86^219^252^253^23^199^15^194^31^159^221^129^143
"DATA",300894,13,2,18,0)
^198^143^35^252^75^77^252^249^239^226^179^250^113^82^252^247^79^91^254^253
"DATA",300894,13,2,19,0)
^227^70^248^66^248^220^81^74^216^113^28^104^154^150^250^57^142^243^174^6^2
"DATA",300894,13,2,20,0)
9^199^129^174^235^133^249^113^28^67^211^52^196^113^252^174^118^138^240^171
"DATA",300894,13,2,21,0)
^170^0^165^20^190^239^31^173^193^170^186^12^195^0^231^167^59^26^28^100^210
"DATA",300894,13,2,22,0)
^217^81^72^146^68^166^227^56^134^174^235^8^195^80^90^133^101^89^242^93^207
"DATA",300894,13,2,23,0)
^243^100^90^148^245^60^79^90^143^168^43^73^18^0^128^101^89^169^186^212^60^
"DATA",300894,13,2,24,0)
81^95^214^10^61^207^59^46^97^195^48^64^41^69^191^223^7^176^53^211^209^104^
"DATA",300894,13,2,25,0)
4^195^48^0^0^140^49^76^38^19^112^206^193^57^71^20^69^133^157^96^140^97^189
"DATA",300894,13,2,26,0)
^94^131^115^94^56^250^221^110^23^140^49^112^206^65^41^149^211^42^142^99^18
"DATA",300894,13,2,27,0)
4^174^43^243^76^211^4^165^20^131^193^224^112^194^65^16^228^126^93^209^57^9
"DATA",300894,13,2,28,0)
3^215^177^90^173^118^26^153^205^102^242^239^209^104^132^197^162^120^143^17
"DATA",300894,13,2,29,0)
5^50^243^209^104^132^86^171^5^0^232^245^122^88^173^86^0^128^183^183^55^16^
"DATA",300894,13,2,30,0)
66^100^94^187^221^78^141^126^30^42^9^83^74^229^72^113^206^101^229^0^48^28^
"DATA",300894,13,2,31,0)
14^193^24^195^112^56^44^173^227^247^239^223^85^205^212^2^99^12^0^208^104^5
"DATA",300894,13,2,32,0)
2^192^24^147^36^23^139^69^170^127^121^120^215^182^212^237^118^65^41^69^183
"DATA",300894,13,2,33,0)
^219^45^45^183^217^108^222^211^76^37^8^33^208^52^13^171^213^170^210^90^14^
"DATA",300894,13,2,34,0)
38^236^56^142^92^193^77^211^220^217^174^212^180^235^186^114^190^31^19^47^4
"DATA",300894,13,2,35,0)
7^47^41^11^20^166^94^134^202^109^41^8^2^4^65^32^211^166^105^162^223^239^35
"DATA",300894,13,2,36,0)
^8^2^185^125^248^190^15^66^8^122^189^158^44^215^108^54^161^105^26^128^237^
"DATA",300894,13,2,37,0)
180^176^109^187^54^161^42^12^6^3^232^186^46^219^17^253^83^215^143^44^52^21
"DATA",300894,13,2,38,0)
3^31^62^134^243^16^199^49^174^174^174^78^186^151^10^8^43^82^205^88^215^117
"DATA",300894,13,2,39,0)
^12^135^195^212^7^62^27^231^33^73^18^52^155^205^212^51^198^24^26^141^70^22
"DATA",300894,13,2,40,0)
5^59^149^38^253^149^49^155^205^160^105^26^92^215^149^207^166^211^169^60^15
"DATA",300894,13,2,41,0)
^228^225^232^132^79^125^52^204^162^110^91^223^218^164^15^193^133^240^185^2
"DATA",300894,13,2,42,0)
27^66^248^35^144^117^1^63^18^181^9^231^169^32^223^9^181^182^37^203^178^176
"DATA",300894,13,2,43,0)
^90^173^82^91^129^112^192^25^99^149^158^202^87^192^222^35^28^199^49^162^40
"DATA",300894,13,2,44,0)
^218^57^160^15^6^3^152^166^137^135^135^7^0^91^11^240^60^79^158^113^133^42^
"DATA",300894,13,2,45,0)
98^89^150^180^136^167^167^167^157^250^69^249^60^133^196^113^28^249^126^24^
"DATA",300894,13,2,46,0)
134^0^176^183^194^113^48^225^151^151^23^152^166^153^155^215^110^183^49^159
"DATA",300894,13,2,47,0)
^207^101^218^117^93^169^120^24^134^1^207^243^164^101^112^206^119^196^0^203
"DATA",300894,13,2,48,0)
^178^208^233^116^100^190^32^42^16^4^1^250^253^62^56^231^176^109^91^122^106
"DATA",300894,13,2,49,0)
^162^124^153^194^113^48^225^245^122^93^104^178^89^7^159^82^154^58^222^141^
"DATA",300894,13,2,50,0)
199^227^148^72^160^30^246^147^36^65^20^69^184^187^187^147^207^250^253^62^1
"DATA",300894,13,2,51,0)
98^227^177^76^155^166^185^227^109^169^31^184^14^106^205^225^162^85^117^179
"DATA",300894,13,2,52,0)
^217^148^74^175^0^74^15^244^192^214^137^47^75^171^240^125^95^46^158^64^189
"DATA",300894,13,2,53,0)
^227^229^222^35^124^125^125^141^40^138^114^243^22^139^5^218^237^118^110^15
"DATA",300894,13,2,54,0)
8^192^219^219^91^105^190^16^226^246^117^230^125^223^151^162^158^58^231^171
"DATA",300894,13,2,55,0)
^176^55^97^219^182^65^8^217^169^220^113^28^68^81^84^58^143^58^157^14^238^2
"DATA",300894,13,2,56,0)
39^239^83^105^129^86^171^149^90^244^234^34^235^30^86^161^214^62^44^190^186
"DATA",300894,13,2,57,0)
^186^66^206^231^243^74^147^18^115^86^188^51^153^76^82^249^179^217^12^243^2
"DATA",300894,13,2,58,0)
49^124^239^27^14^117^69^119^93^183^84^225^200^226^232^138^199^87^196^217^4
"DATA",300894,13,2,59,0)
0^30^135^224^66^248^220^113^33^124^238^184^16^62^119^228^18^14^195^176^242
"DATA",300894,13,2,60,0)
^108^252^93^113^178^17^86^253^223^236^79^248^180^159^129^147^17^158^205^10
"DATA",300894,13,2,61,0)
2^210^17^32^132^96^58^157^202^244^41^46^214^246^69^41^97^53^126^66^156^109
"DATA",300894,13,2,62,0)
^243^204^93^141^219^168^131^172^62^86^212^182^154^151^141^11^17^138^135^16
"DATA",300894,13,2,63,0)
^6^179^138^201^222^132^197^45^59^231^28^140^49^4^65^128^48^12^97^219^54^24
"DATA",300894,13,2,64,0)
^99^169^176^162^241^120^92^251^254^215^243^60^233^120^112^206^49^26^141^10
"DATA",300894,13,2,65,0)
0^71^195^48^148^113^31^34^118^67^117^38^212^184^144^229^114^9^215^117^65^8
"DATA",300894,13,2,66,0)
^73^197^148^20^77^155^66^194^132^16^233^242^181^90^45^80^74^241^252^252^12
"DATA",300894,13,2,67,0)
^96^171^104^60^62^62^2^216^126^113^198^88^109^51^205^170^32^55^55^55^136^1
"DATA",300894,13,2,68,0)
62^8^73^146^192^182^237^148^42^146^23^187^33^242^133^178^178^92^46^101^30^
"DATA",300894,13,2,69,0)
165^180^48^234^96^239^57^172^250^157^189^94^79^94^146^63^62^62^130^82^186^
"DATA",300894,13,2,70,0)
111^53^41^116^187^93^105^134^89^133^67^93^244^212^219^193^125^177^94^175^1
"DATA",300894,13,2,71,0)
15^159^215^210^180^4^12^195^0^33^4^97^24^98^62^159^167^110^254^235^64^93^2
"DATA",300894,13,2,72,0)
00^212^160^25^97^190^170^185^31^11^165^115^88^40^135^73^146^32^8^130^20^49
"DATA",300894,13,2,73,0)
^85^197^40^187^143^45^194^237^237^109^74^5^201^66^21^12^85^65^239^189^40^3
"DATA",300894,13,2,74,0)
6^108^154^38^214^235^181^52^55^53^240^12^216^154^53^99^12^183^183^183^7^53
"DATA",300894,13,2,75,0)
^60^24^12^208^233^116^82^43^177^88^253^125^223^79^197^135^169^146^208^123^
"DATA",300894,13,2,76,0)
113^176^226^145^36^9^8^33^88^46^151^7^141^240^71^226^40^138^199^235^235^43
"DATA",300894,13,2,77,0)
^8^33^95^158^108^22^7^19^158^76^38^71^53^181^143^194^193^49^30^117^148^194
"DATA",300894,13,2,78,0)
^175^132^31^231^30^106^151^127^212^58^115^252^56^194^255^3^163^211^204^177
"DATA",300894,13,2,79,0)
^203^126^152^1^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,13,3)
DG
"DATA",300894,13,4,0)
^300894.04^9^9
"DATA",300894,13,4,1,0)
DFN^TEXT
"DATA",300894,13,4,1,1)
1
"DATA",300894,13,4,1,2)
0
"DATA",300894,13,4,2,0)
Patient Name^TEXT
"DATA",300894,13,4,2,1)
2
"DATA",300894,13,4,2,2)
1
"DATA",300894,13,4,2,4)
Patient Name
"DATA",300894,13,4,3,0)
MRN^TEXT
"DATA",300894,13,4,3,1)
3
"DATA",300894,13,4,3,2)
1
"DATA",300894,13,4,3,4)
Medical Record Number
"DATA",300894,13,4,4,0)
Ward^TEXT
"DATA",300894,13,4,4,1)
4
"DATA",300894,13,4,4,2)
1
"DATA",300894,13,4,4,4)
Patient Ward
"DATA",300894,13,4,5,0)
Order Start Date^DATE
"DATA",300894,13,4,5,1)
5
"DATA",300894,13,4,5,2)
1
"DATA",300894,13,4,5,4)
Order Start Date
"DATA",300894,13,4,6,0)
Order Stop Date^DATE
"DATA",300894,13,4,6,1)
6
"DATA",300894,13,4,6,2)
1
"DATA",300894,13,4,6,4)
Order Stop Date
"DATA",300894,13,4,7,0)
Order Number^NUMERIC
"DATA",300894,13,4,7,1)
7
"DATA",300894,13,4,7,2)
1
"DATA",300894,13,4,7,3)
188^7;1
"DATA",300894,13,4,7,4)
CPRS Order Number
"DATA",300894,13,4,8,0)
Order Status^TEXT
"DATA",300894,13,4,8,1)
8
"DATA",300894,13,4,8,2)
1
"DATA",300894,13,4,8,4)
Order Status
"DATA",300894,13,4,9,0)
Display Group^TEXT
"DATA",300894,13,4,9,1)
9
"DATA",300894,13,4,9,2)
1
"DATA",300894,13,4,9,4)
CPRS Display Group
"DATA",300894,13,6)
3129
"DATA",300894,13,7)
3112
"DATA",300894,13,8)
Select Team
"DATA",300894,13,11,0)
^300894.01P^2^2
"DATA",300894,13,11,1,0)
68
"DATA",300894,13,11,2,0)
70
"DATA",300894,14,0)
Reminders Hospital Wide^1
"DATA",300894,14,1)
RMA
"DATA",300894,14,2,0)
^^66^66^3191230^
"DATA",300894,14,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^6^0^0^0^
"DATA",300894,14,2,2,0)
58^252^217^114^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^
"DATA",300894,14,2,3,0)
0^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^
"DATA",300894,14,2,4,0)
102^31^120^0^0^4^247^73^68^65^84^104^67^237^155^61^76^98^89^20^199^255^179
"DATA",300894,14,2,5,0)
^245^64^175^248^17^32^130^5^29^33^179^137^217^68^140^133^133^174^5^147^45^
"DATA",300894,14,2,6,0)
166^177^162^176^114^98^34^177^176^180^152^236^38^38^83^89^80^217^88^24^41^
"DATA",300894,14,2,7,0)
92^167^176^48^96^50^177^48^134^142^2^48^66^102^21^232^97^250^221^115^191^2
"DATA",300894,14,2,8,0)
22^123^124^232^242^113^31^206^60^223^47^33^247^190^251^120^87^207^189^231^
"DATA",300894,14,2,9,0)
220^119^254^247^234^155^192^217^234^191^120^69^252^34^203^87^131^107^176^2
"DATA",300894,14,2,10,0)
11^233^138^225^251^223^207^101^205^25^4^255^94^147^53^129^235^210^78^199^5
"DATA",300894,14,2,11,0)
3^248^57^178^249^53^30^19^226^179^133^116^75^222^232^131^106^121^11^193^25
"DATA",300894,14,2,12,0)
2^141^188^234^160^117^138^117^234^51^213^144^215^54^50^194^12^87^240^169^2
"DATA",300894,14,2,13,0)
52^132^1^63^48^99^115^105^127^232^51^238^163^239^228^85^7^158^95^177^234^1
"DATA",300894,14,2,14,0)
49^117^155^25^200^224^165^208^6^34^84^38^98^231^72^251^68^27^26^7^194^197^
"DATA",300894,14,2,15,0)
175^78^81^197^35^210^87^172^190^197^93^116^157^74^118^47^213^144^237^249^2
"DATA",300894,14,2,16,0)
11^246^251^229^71^249^252^38^62^53^255^175^191^3^164^120^72^81^253^234^0^8
"DATA",300894,14,2,17,0)
9^249^245^65^25^106^134^51^183^107^72^214^2^216^13^189^67^182^158^19^141^2
"DATA",300894,14,2,18,0)
05^175^184^84^49^221^172^160^64^69^129^74^70^169^85^227^165^129^186^79^237
"DATA",300894,14,2,19,0)
^198^243^146^167^251^203^33^195^187^161^186^26^156^33^24^202^224^68^236^16
"DATA",300894,14,2,20,0)
^187^222^10^238^190^119^94^79^33^25^142^3^190^61^92^206^7^204^18^62^209^14
"DATA",300894,14,2,21,0)
2^233^246^251^146^200^252^30^61^47^47^136^94^253^165^125^1^68^188^52^200^1
"DATA",300894,14,2,22,0)
13^118^79^126^113^8^70^138^225^18^173^174^23^52^234^153^91^139^75^106^160^
"DATA",300894,14,2,23,0)
187^191^7^190^6^156^45^238^0^121^186^231^89^192^146^188^51^40^3^25^156^45^
"DATA",300894,14,2,24,0)
31^113^87^204^148^78^112^71^101^161^120^132^12^149^98^134^2^152^123^203^19
"DATA",300894,14,2,25,0)
0^53^58^221^253^77^195^239^97^175^197^191^128^40^205^112^235^120^160^87^16
"DATA",300894,14,2,26,0)
2^149^33^103^120^6^115^244^11^48^152^155^21^138^251^52^35^204^5^105^145^41
"DATA",300894,14,2,27,0)
^81^12^214^142^241^177^78^241^219^186^198^33^149^133^250^9^82^188^125^31^1
"DATA",300894,14,2,28,0)
93^91^86^82^123^139^238^83^121^65^125^136^231^217^64^158^210^138^221^187^6
"DATA",300894,14,2,29,0)
3^97^32^189^10^115^163^121^211^208^46^29^164^95^12^8^96^117^114^86^52^120^
"DATA",300894,14,2,30,0)
55^176^57^33^170^131^176^50^201^98^91^12^28^195^239^121^174^63^22^199^172^
"DATA",300894,14,2,31,0)
156^165^159^207^27^6^198^85^75^78^199^53^216^233^140^100^176^82^79^235^249
"DATA",300894,14,2,32,0)
^3^158^42^6^41^253^27^36^229^51^21^212^35^178^148^126^118^163^82^75^150^10
"DATA",300894,14,2,33,0)
2^234^225^7^153^225^26^238^135^124^175^14^202^139^26^108^40^168^198^53^190
"DATA",300894,14,2,34,0)
^200^182^118^100^106^169^145^145^12^86^234^41^60^185^128^48^149^145^249^63
"DATA",300894,14,2,35,0)
^176^164^212^142^116^111^225^246^76^225^176^143^82^80^108^243^192^162^160^
"DATA",300894,14,2,36,0)
40^185^40^20^55^249^6^0^119^243^33^194^163^95^180^204^112^230^118^159^167^
"DATA",300894,14,2,37,0)
152^12^83^253^228^112^65^113^41^92^213^84^56^66^65^85^240^165^209^161^160^
"DATA",300894,14,2,38,0)
56^143^184^100^25^26^231^155^45^110^174^197^224^68^108^15^9^89^103^68^230^
"DATA",300894,14,2,39,0)
15^165^94^158^226^25^153^80^56^179^148^149^245^86^80^203^212^206^158^249^1
"DATA",300894,14,2,40,0)
15^130^92^120^241^156^146^159^246^254^116^98^123^12^47^69^77^133^179^44^21
"DATA",300894,14,2,41,0)
9^158^133^239^111^29^163^100^211^14^200^72^6^43^245^84^170^95^163^68^101^1
"DATA",300894,14,2,42,0)
61^120^194^197^128^21^171^194^57^236^195^69^89^159^225^216^7^132^53^202^77
"DATA",300894,14,2,43,0)
^43^218^103^120^142^171^157^77^36^141^16^237^80^56^164^152^150^139^44^78^1
"DATA",300894,14,2,44,0)
07^134^18^98^3^193^158^89^47^223^240^184^21^107^2^219^36^20^11^90^219^238^
"DATA",300894,14,2,45,0)
199^136^104^55^56^56^241^27^95^185^129^56^86^184^218^49^21^14^147^148^74^2
"DATA",300894,14,2,46,0)
1^133^61^106^83^140^13^146^84^72^20^215^44^158^205^103^244^51^86^181^196^9
"DATA",300894,14,2,47,0)
4^57^31^177^131^179^208^148^108^177^159^23^87^75^44^206^237^120^191^246^20
"DATA",300894,14,2,48,0)
3^24^13^182^190^99^95^142^49^26^172^222^177^219^67^111^192^233^96^236^46^2
"DATA",300894,14,2,49,0)
53^210^104^51^152^231^197^44^7^38^169^152^226^185^176^121^242^192^229^29^2
"DATA",300894,14,2,50,0)
07^177^173^249^177^204^165^109^202^153^159^194^157^97^219^152^216^238^136^
"DATA",300894,14,2,51,0)
95^253^210^175^31^180^25^156^140^202^131^182^201^109^172^240^156^34^142^17
"DATA",300894,14,2,52,0)
3^197^29^190^161^190^27^125^143^42^151^137^210^125^229^121^48^223^163^54^1
"DATA",300894,14,2,53,0)
84^49^66^193^206^115^98^237^51^92^106^137^244^80^200^187^26^238^122^228^19
"DATA",300894,14,2,54,0)
6^213^198^87^158^131^91^169^150^143^13^137^153^169^219^119^238^172^207^96^
"DATA",300894,14,2,55,0)
207^52^223^4^48^169^224^174^241^64^162^66^108^154^171^205^2^70^149^157^58^
"DATA",300894,14,2,56,0)
120^55^144^182^28^168^113^84^91^235^65^219^30^86^39^26^103^216^135^57^202^
"DATA",300894,14,2,57,0)
127^11^173^107^99^86^75^117^154^73^239^12^252^226^178^29^26^160^37^35^135^
"DATA",300894,14,2,58,0)
150^131^160^218^154^255^252^12^6^51^177^79^69^45^71^174^105^73^254^201^136
"DATA",300894,14,2,59,0)
^158^6^247^66^157^61^217^136^214^24^246^243^243^38^194^59^203^221^91^29^13
"DATA",300894,14,2,60,0)
6^247^141^111^15^247^49^90^185^159^242^10^13^104^95^180^56^158^5^172^168^2
"DATA",300894,14,2,61,0)
11^69^41^3^197^102^65^14^159^217^159^57^48^40^78^179^173^111^84^17^109^124
"DATA",300894,14,2,62,0)
^176^126^190^25^54^99^82^205^118^216^211^45^5^249^189^230^17^146^124^35^96
"DATA",300894,14,2,63,0)
^188^232^157^225^183^51^124^37^86^179^202^132^124^175^67^114^191^218^36^24
"DATA",300894,14,2,64,0)
0^197^141^205^58^127^232^131^81^79^132^223^219^230^210^238^113^169^211^113
"DATA",300894,14,2,65,0)
^13^118^58^174^193^78^199^253^55^30^167^227^26^236^116^94^153^193^192^127^
"DATA",300894,14,2,66,0)
194^19^49^128^207^22^47^244^0^0^0^0^73^69^78^68^174^66^96^130^
"DATA",300894,14,3)
DG
"DATA",300894,14,4,0)
^300894.04^7^7
"DATA",300894,14,4,1,0)
DFN^TEXT
"DATA",300894,14,4,1,1)
1
"DATA",300894,14,4,1,2)
0
"DATA",300894,14,4,2,0)
PATIENT NAME^TEXT
"DATA",300894,14,4,2,1)
2
"DATA",300894,14,4,2,2)
1
"DATA",300894,14,4,2,4)
Patient Name
"DATA",300894,14,4,3,0)
WARD^TEXT
"DATA",300894,14,4,3,1)
3
"DATA",300894,14,4,3,2)
1
"DATA",300894,14,4,3,4)
Patient Ward
"DATA",300894,14,4,4,0)
REMINDER^TEXT
"DATA",300894,14,4,4,1)
4
"DATA",300894,14,4,4,2)
1
"DATA",300894,14,4,4,4)
Reminder
"DATA",300894,14,4,5,0)
DUE DATE^DATE
"DATA",300894,14,4,5,1)
5
"DATA",300894,14,4,5,2)
1
"DATA",300894,14,4,5,4)
Due Date
"DATA",300894,14,4,6,0)
COLOR^ROW COLOR
"DATA",300894,14,4,6,1)
6
"DATA",300894,14,4,6,2)
0
"DATA",300894,14,4,7,0)
ADDITIONAL INFORMATION^WEBSITE
"DATA",300894,14,4,7,1)
7
"DATA",300894,14,4,7,2)
1
"DATA",300894,14,4,7,4)
Additional Information
"DATA",300894,14,6)
3154
"DATA",300894,14,7)

"DATA",300894,14,10)
3146
"DATA",300894,14,11,0)
^300894.01P^2^2
"DATA",300894,14,11,1,0)
68
"DATA",300894,14,11,2,0)
70
"DATA",300894,15,0)
Covering Psychologists^1
"DATA",300894,15,1)
CG
"DATA",300894,15,2,0)
^^37^37^3200214^
"DATA",300894,15,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,15,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,15,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,15,2,4,0)
02^31^120^0^0^2^158^73^68^65^84^104^67^237^152^221^117^227^32^16^133^183^3
"DATA",300894,15,2,5,0)
4^181^227^18^212^132^158^212^7^106^131^87^117^64^11^126^163^12^239^252^92^
"DATA",300894,15,2,6,0)
4^227^36^178^144^124^240^110^14^247^228^36^48^98^152^143^1^217^76^254^60^2
"DATA",300894,15,2,7,0)
54^67^117^232^86^234^208^173^212^161^91^169^67^183^82^135^110^165^14^221^7
"DATA",300894,15,2,8,0)
4^29^186^149^58^116^43^253^102^232^224^134^209^77^206^173^232^215^136^124^
"DATA",300894,15,2,9,0)
93^64^251^61^58^6^189^186^113^10^97^26^79^65^191^95^135^160^227^50^19^52^5
"DATA",300894,15,2,10,0)
8^148^186^105^28^135^81^44^188^3^227^224^60^13^24^102^127^215^46^53^162^19
"DATA",300894,15,2,11,0)
1^141^243^228^230^193^57^30^76^22^241^186^121^207^93^73^252^221^207^60^137
"DATA",300894,15,2,12,0)
^115^242^180^74^245^208^146^117^250^139^196^163^27^195^26^105^152^90^230^3
"DATA",300894,15,2,13,0)
7^178^253^230^35^59^208^74^4^75^40^221^74^235^225^174^14^62^183^123^213^20
"DATA",300894,15,2,14,0)
8^212^102^166^220^208^35^27^163^112^240^14^232^38^40^58^171^128^230^101^0^
"DATA",300894,15,2,15,0)
90^113^63^5^77^129^103^191^4^206^182^102^90^245^10^154^183^66^142^22^230^1
"DATA",300894,15,2,16,0)
73^81^197^139^72^81^29^113^228^227^33^177^183^167^101^238^143^100^122^61^6
"DATA",300894,15,2,17,0)
5^11^29^131^230^72^188^239^41^181^233^12^168^238^33^40^61^243^209^35^98^21
"DATA",300894,15,2,18,0)
0^241^2^167^131^241^10^234^219^153^187^102^158^195^58^8^253^126^197^197^43
"DATA",300894,15,2,19,0)
^108^152^170^79^200^167^160^163^159^210^103^11^62^100^42^244^193^76^235^71
"DATA",300894,15,2,20,0)
^77^122^49^106^244^49^232^43^234^208^173^212^161^91^169^67^183^82^135^110^
"DATA",300894,15,2,21,0)
37^3^141^203^13^255^28^189^15^176^203^207^223^195^242^181^247^114^42^189^1
"DATA",300894,15,2,22,0)
45^63^233^91^35^100^51^141^219^35^163^164^139^229^43^37^151^31^180^23^123^
"DATA",300894,15,2,23,0)
87^167^161^169^139^235^129^222^57^183^90^48^223^60^213^37^87^126^226^91^92
"DATA",300894,15,2,24,0)
^56^115^108^99^215^153^165^64^156^203^169^16^14^131^45^131^204^34^250^2^20
"DATA",300894,15,2,25,0)
5^35^232^135^35^233^165^62^46^142^29^112^211^231^90^80^47^248^168^83^196^1
"DATA",300894,15,2,26,0)
01^171^252^138^18^65^235^168^4^109^237^234^91^140^97^95^19^46^57^90^35^244
"DATA",300894,15,2,27,0)
^21^26^137^97^9^16^47^87^219^188^9^168^5^97^44^236^91^185^170^143^82^195^1
"DATA",300894,15,2,28,0)
96^222^236^138^251^4^109^194^109^171^53^70^104^23^154^68^25^194^214^8^86^1
"DATA",300894,15,2,29,0)
70^5^243^44^167^160^101^90^236^103^134^38^229^112^9^218^24^161^93^232^149^
"DATA",300894,15,2,30,0)
255^165^68^97^36^31^220^192^137^68^253^23^60^253^182^208^28^0^199^192^198^
"DATA",300894,15,2,31,0)
182^118^91^32^38^104^19^46^59^150^12^42^3^77^251^133^227^175^66^62^210^42^
"DATA",300894,15,2,32,0)
239^222^195^147^16^97^135^75^170^252^120^41^197^11^199^235^76^237^210^142^
"DATA",300894,15,2,33,0)
182^116^209^38^95^19^142^160^169^237^194^19^131^200^102^122^95^185^128^189
"DATA",300894,15,2,34,0)
^170^43^5^34^169^2^58^174^33^109^193^69^93^42^16^73^7^161^121^179^242^177^
"DATA",300894,15,2,35,0)
185^44^28^27^187^233^199^85^115^60^254^25^117^232^86^234^208^173^212^161^9
"DATA",300894,15,2,36,0)
1^169^67^183^82^135^110^163^199^227^47^32^7^15^168^125^4^56^145^0^0^0^0^73
"DATA",300894,15,2,37,0)
^69^78^68^174^66^96^130^
"DATA",300894,15,3)
DG
"DATA",300894,15,4,0)
^300894.04^8^8
"DATA",300894,15,4,1,0)
DFN^TEXT
"DATA",300894,15,4,1,1)
1
"DATA",300894,15,4,1,2)
0
"DATA",300894,15,4,2,0)
Patient Name^TEXT
"DATA",300894,15,4,2,1)
2
"DATA",300894,15,4,2,2)
1
"DATA",300894,15,4,2,4)
Patient Name
"DATA",300894,15,4,3,0)
Ward^TEXT
"DATA",300894,15,4,3,1)
3
"DATA",300894,15,4,3,2)
1
"DATA",300894,15,4,3,4)
Patient Ward
"DATA",300894,15,4,4,0)
Assigned Psychologist^TEXT
"DATA",300894,15,4,4,1)
4
"DATA",300894,15,4,4,2)
1
"DATA",300894,15,4,4,4)
Assigned Psychologist
"DATA",300894,15,4,5,0)
Covering Psychologist^TEXT
"DATA",300894,15,4,5,1)
5
"DATA",300894,15,4,5,2)
1
"DATA",300894,15,4,5,4)
Covering Psychologist
"DATA",300894,15,4,6,0)
Begin Date^DATE
"DATA",300894,15,4,6,1)
6
"DATA",300894,15,4,6,2)
1
"DATA",300894,15,4,6,4)
Begin Date
"DATA",300894,15,4,7,0)
End Date^DATE
"DATA",300894,15,4,7,1)
7
"DATA",300894,15,4,7,2)
1
"DATA",300894,15,4,7,4)
End Date
"DATA",300894,15,4,8,0)
Color^ROW COLOR
"DATA",300894,15,4,8,1)
8
"DATA",300894,15,4,8,2)
0
"DATA",300894,15,6)
3164
"DATA",300894,15,11,0)
^300894.01P^2^2
"DATA",300894,15,11,1,0)
68
"DATA",300894,15,11,2,0)
70
"DATA",300894,16,0)
Covering Social Workers^1
"DATA",300894,16,1)
CS
"DATA",300894,16,2,0)
^^39^39^3200214^
"DATA",300894,16,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,16,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,16,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,16,2,4,0)
02^31^120^0^0^2^204^73^68^65^84^104^67^237^153^77^114^131^32^20^199^115^46
"DATA",300894,16,2,5,0)
^15^196^45^188^131^139^156^194^109^102^220^115^0^151^108^244^0^206^184^244
"DATA",300894,16,2,6,0)
^2^246^125^33^146^54^13^208^4^218^14^255^233^36^124^60^227^207^199^3^158^2
"DATA",300894,16,2,7,0)
44^178^255^65^85^232^92^170^208^185^84^161^115^169^66^231^210^191^133^94^8
"DATA",300894,16,2,8,0)
4^123^83^253^168^140^212^99^4^215^142^131^148^95^166^0^104^51^94^250^101^2
"DATA",300894,16,2,9,0)
32^111^73^208^111^209^115^232^89^107^128^150^202^190^3^253^165^189^81^11^1
"DATA",300894,16,2,10,0)
42^192^165^29^59^48^104^117^183^114^21^10^91^119^189^53^253^216^180^163^66
"DATA",300894,16,2,11,0)
^99^104^161^171^174^83^135^85^114^252^58^53^248^35^163^162^222^88^69^66^14
"DATA",300894,16,2,12,0)
7^215^225^91^28^47^213^109^48^27^152^113^75^163^55^108^191^78^51^94^0^79^6
"DATA",300894,16,2,13,0)
6^88^68^169^12^60^15^86^217^56^121^244^226^160^161^140^76^174^192^33^187^2
"DATA",300894,16,2,14,0)
05^196^129^35^192^131^192^232^168^19^52^62^134^64^51^110^41^104^184^177^23
"DATA",300894,16,2,15,0)
8^244^2^35^14^45^142^224^25^52^14^5^133^86^218^28^13^157^136^112^87^5^28^4
"DATA",300894,16,2,16,0)
6^60^232^222^71^239^217^247^33^158^54^226^133^52^5^64^227^157^112^220^173^
"DATA",300894,16,2,17,0)
107^109^12^176^214^101^96^122^228^131^46^96^98^123^130^99^99^153^130^60^59
"DATA",300894,16,2,18,0)
^93^213^251^157^24^133^64^191^94^179^158^56^48^134^62^37^66^138^64^111^93^
"DATA",300894,16,2,19,0)
111^215^22^89^100^226^84^202^211^188^212^216^137^17^169^50^208^63^84^133^2
"DATA",300894,16,2,20,0)
06^165^10^157^75^241^208^178^3^63^157^248^156^150^120^162^69^35^113^235^62
"DATA",300894,16,2,21,0)
^43^26^154^179^156^89^143^73^171^213^23^79^146^160^20^104^155^87^160^252^9
"DATA",300894,16,2,22,0)
3^253^110^3^167^209^224^145^113^153^106^9^104^130^176^55^118^249^19^37^153
"DATA",300894,16,2,23,0)
^148^39^217^116^79^82^37^238^18^131^98^208^228^78^118^182^205^236^164^112^
"DATA",300894,16,2,24,0)
84^73^2^205^42^14^13^146^12^51^16^26^218^33^66^74^66^203^20^228^192^112^22
"DATA",300894,16,2,25,0)
5^33^225^75^208^75^71^159^71^120^52^122^129^193^41^11^45^175^85^4^129^76^1
"DATA",300894,16,2,26,0)
43^39^34^206^191^1^237^181^234^181^45^39^230^208^103^165^133^71^97^85^232^
"DATA",300894,16,2,27,0)
92^170^208^185^84^161^115^41^8^154^14^52^142^191^227^196^81^122^239^132^43
"DATA",300894,16,2,28,0)
^116^210^59^118^184^194^60^237^246^191^105^70^86^60^188^123^40^57^76^122^1
"DATA",300894,16,2,29,0)
63^2^195^131^182^95^60^249^36^7^219^83^165^211^118^72^89^20^29^239^162^153
"DATA",300894,16,2,30,0)
^156^128^113^23^92^11^102^112^161^111^35^141^244^243^145^10^141^105^224^11
"DATA",300894,16,2,31,0)
5^7^181^102^65^71^126^202^75^37^42^44^244^96^36^151^226^94^76^75^172^141^7
"DATA",300894,16,2,32,0)
7^176^210^222^36^194^39^34^33^2^31^222^108^117^153^157^43^28^135^142^8^173
"DATA",300894,16,2,33,0)
^101^76^78^185^10^7^152^179^105^189^151^137^40^5^67^211^40^43^141^64^29^16
"DATA",300894,16,2,34,0)
5^74^223^66^79^179^29^7^232^229^212^10^117^216^80^249^237^225^65^81^11^89^
"DATA",300894,16,2,35,0)
37^127^146^44^150^159^151^186^240^240^115^110^255^8^216^224^191^157^188^23
"DATA",300894,16,2,36,0)
1^137^81^56^180^132^50^199^6^235^110^34^178^231^184^81^25^158^127^240^132^
"DATA",300894,16,2,37,0)
222^68^20^239^162^155^109^57^94^17^208^191^71^21^58^151^42^116^46^85^232^9
"DATA",300894,16,2,38,0)
2^170^208^185^84^161^243^104^223^63^0^123^140^82^236^114^45^44^236^0^0^0^0
"DATA",300894,16,2,39,0)
^73^69^78^68^174^66^96^130^
"DATA",300894,16,3)
DG
"DATA",300894,16,4,0)
^300894.04^8^8
"DATA",300894,16,4,1,0)
DFN^TEXT
"DATA",300894,16,4,1,1)
1
"DATA",300894,16,4,1,2)
0
"DATA",300894,16,4,2,0)
Patient Name^TEXT
"DATA",300894,16,4,2,1)
2
"DATA",300894,16,4,2,2)
1
"DATA",300894,16,4,2,4)
Patient Name
"DATA",300894,16,4,3,0)
Ward^TEXT
"DATA",300894,16,4,3,1)
3
"DATA",300894,16,4,3,2)
1
"DATA",300894,16,4,3,4)
Patient Ward
"DATA",300894,16,4,4,0)
Assigned Social Worker^TEXT
"DATA",300894,16,4,4,1)
4
"DATA",300894,16,4,4,2)
1
"DATA",300894,16,4,4,4)
Assigned Social Worker
"DATA",300894,16,4,5,0)
Covering Social Worker^TEXT
"DATA",300894,16,4,5,1)
5
"DATA",300894,16,4,5,2)
1
"DATA",300894,16,4,5,4)
Covering Social Worker
"DATA",300894,16,4,6,0)
Begin Date^DATE
"DATA",300894,16,4,6,1)
6
"DATA",300894,16,4,6,2)
1
"DATA",300894,16,4,6,4)
Begin Date
"DATA",300894,16,4,7,0)
End Date^DATE
"DATA",300894,16,4,7,1)
7
"DATA",300894,16,4,7,2)
1
"DATA",300894,16,4,7,4)
End Date
"DATA",300894,16,4,8,0)
Color^ROW COLOR
"DATA",300894,16,4,8,1)
8
"DATA",300894,16,4,8,2)
0
"DATA",300894,16,6)
3165
"DATA",300894,16,11,0)
^300894.01P^2^2
"DATA",300894,16,11,1,0)
68
"DATA",300894,16,11,2,0)
70
"DATA",300894,17,0)
Patients With GERD Drug Orders^1
"DATA",300894,17,1)
GD
"DATA",300894,17,2,0)
^300894.02^23^23^3200407^^
"DATA",300894,17,2,1,0)
137^80^78^71^13^10^26^10^0^0^0^13^73^72^68^82^0^0^0^60^0^0^0^60^8^2^0^0^0^
"DATA",300894,17,2,2,0)
181^158^78^37^0^0^0^1^115^82^71^66^0^174^206^28^233^0^0^0^4^103^65^77^65^0
"DATA",300894,17,2,3,0)
^0^177^143^11^252^97^5^0^0^0^9^112^72^89^115^0^0^18^116^0^0^18^116^1^222^1
"DATA",300894,17,2,4,0)
02^31^120^0^0^1^128^73^68^65^84^104^67^237^211^193^113^194^48^16^133^97^21
"DATA",300894,17,2,5,0)
5^69^61^12^117^80^65^134^59^55^247^96^106^224^70^1^46^0^46^212^64^20^73^20
"DATA",300894,17,2,6,0)
0^210^111^73^198^147^108^130^50^251^102^47^203^130^248^108^175^187^174^191
"DATA",300894,17,2,7,0)
^181^87^236^155^40^246^77^20^251^38^138^125^19^133^254^241^150^1^82^209^98
"DATA",300894,17,2,8,0)
^1^82^209^98^1^82^209^98^1^82^209^98^1^82^209^98^1^82^209^98^1^82^209^98^1
"DATA",300894,17,2,9,0)
^82^209^98^1^82^209^98^1^242^21^244^184^219^126^116^81^109^134^187^159^92^
"DATA",300894,17,2,10,0)
207^155^116^228^106^119^49^51^254^202^149^29^229^167^211^177^179^0^185^132
"DATA",300894,17,2,11,0)
^46^176^186^227^88^153^86^208^221^182^63^92^139^211^146^27^200^58^250^126^
"DATA",300894,17,2,12,0)
216^251^227^102^119^104^56^153^46^160^221^53^36^121^126^115^127^118^179^21
"DATA",300894,17,2,13,0)
1^209^253^48^189^36^63^13^199^186^75^98^128^172^162^107^38^155^31^67^63^19
"DATA",300894,17,2,14,0)
8^161^143^166^12^144^85^244^101^112^7^249^167^246^108^109^217^91^146^95^15
"DATA",300894,17,2,15,0)
^251^16^166^155^151^22^110^237^12^157^221^16^32^127^21^29^129^136^230^127^
"DATA",300894,17,2,16,0)
165^1^114^253^122^248^211^83^244^194^122^132^11^8^43^91^188^211^223^94^143
"DATA",300894,17,2,17,0)
^204^139^24^62^89^133^142^158^146^87^2^157^30^59^11^144^117^116^105^1^76^8
"DATA",300894,17,2,18,0)
5^214^195^61^226^18^43^125^17^211^202^238^134^9^144^75^232^175^240^15^166^
"DATA",300894,17,2,19,0)
163^87^160^227^87^194^44^125^6^93^18^155^0^249^10^250^239^3^164^162^197^2^
"DATA",300894,17,2,20,0)
164^162^197^2^164^162^197^2^164^162^197^2^164^162^197^2^164^162^197^2^164^
"DATA",300894,17,2,21,0)
162^197^2^164^162^197^2^164^162^197^2^164^162^197^2^228^191^64^183^81^236^
"DATA",300894,17,2,22,0)
155^40^246^77^20^251^247^175^254^246^9^110^84^37^61^85^100^215^18^0^0^0^0^
"DATA",300894,17,2,23,0)
73^69^78^68^174^66^96^130^
"DATA",300894,17,3)
DG
"DATA",300894,17,4,0)
^300894.04^8^8
"DATA",300894,17,4,1,0)
DFN^TEXT
"DATA",300894,17,4,1,1)
1
"DATA",300894,17,4,1,2)
0
"DATA",300894,17,4,1,4)
DFN
"DATA",300894,17,4,2,0)
Patient^TEXT
"DATA",300894,17,4,2,1)
2
"DATA",300894,17,4,2,2)
1
"DATA",300894,17,4,2,4)
Patient Name
"DATA",300894,17,4,3,0)
Ward^TEXT
"DATA",300894,17,4,3,1)
3
"DATA",300894,17,4,3,2)
1
"DATA",300894,17,4,3,4)
Patient Ward
"DATA",300894,17,4,4,0)
Orderable Item^TEXT
"DATA",300894,17,4,4,1)
4
"DATA",300894,17,4,4,2)
1
"DATA",300894,17,4,4,4)
Orderable Item
"DATA",300894,17,4,5,0)
Start Date^DATE
"DATA",300894,17,4,5,1)
5
"DATA",300894,17,4,5,2)
1
"DATA",300894,17,4,5,4)
Start Date
"DATA",300894,17,4,6,0)
Order Number^NUMERIC
"DATA",300894,17,4,6,1)
6
"DATA",300894,17,4,6,2)
1
"DATA",300894,17,4,6,3)
188^6;1
"DATA",300894,17,4,6,4)
Order Number
"DATA",300894,17,4,7,0)
Status^TEXT
"DATA",300894,17,4,7,1)
7
"DATA",300894,17,4,7,2)
1
"DATA",300894,17,4,7,4)
Order Status
"DATA",300894,17,4,8,0)
Row Color^ROW COLOR
"DATA",300894,17,4,8,1)
8
"DATA",300894,17,4,8,2)
0
"DATA",300894,17,6)
3175
"DATA",300894,17,7)
3077
"DATA",300894,17,8)
Select Ward
"DATA",300894,17,10)
3174
"DATA",300894,17,11,0)
^300894.01P^3^3
"DATA",300894,17,11,1,0)
68
"DATA",300894,17,11,2,0)
70
"DATA",300894,17,11,3,0)
71
"FIA",300890)
C9C RULES ENGINE
"FIA",300890,0)
^C9C(300890,
"FIA",300890,0,0)
300890V
"FIA",300890,0,1)
y^y^f^^^^n
"FIA",300890,0,10)

"FIA",300890,0,11)

"FIA",300890,0,"RLRO")

"FIA",300890,300890)
0
"FIA",300890,300890.01)
0
"FIA",300890,300890.02)
0
"FIA",300890,300890.03)
0
"FIA",300890,300890.04)
0
"FIA",300890,300890.05)
0
"FIA",300890,300890.06)
0
"FIA",300890,300890.11)
0
"FIA",300890,300890.21)
0
"FIA",300890,300890.31)
0
"FIA",300892)
C9C RULES
"FIA",300892,0)
^C9C(300892,
"FIA",300892,0,0)
300892
"FIA",300892,0,1)
y^y^f^^n^^y^a^y
"FIA",300892,0,10)

"FIA",300892,0,11)

"FIA",300892,0,"RLRO")

"FIA",300892,300892)
0
"FIA",300894)
C9C DASHBOARD MODULES
"FIA",300894,0)
^C9C(300894,
"FIA",300894,0,0)
300894
"FIA",300894,0,1)
y^y^f^^n^^y^a^y
"FIA",300894,0,10)

"FIA",300894,0,11)

"FIA",300894,0,"RLRO")

"FIA",300894,300894)
0
"FIA",300894,300894.01)
0
"FIA",300894,300894.02)
0
"FIA",300894,300894.04)
0
"FIA",300896)
C9C DASHBOARD USER SETTINGS
"FIA",300896,0)
^C9C(300896,
"FIA",300896,0,0)
300896P
"FIA",300896,0,1)
y^y^f^^^^n
"FIA",300896,0,10)

"FIA",300896,0,11)

"FIA",300896,0,"RLRO")

"FIA",300896,300896)
0
"FIA",300896,300896.02)
0
"FIA",300896,300896.21)
0
"FIA",300896,300896.212)
0
"FIA",300896,300896.2121)
0
"KRN",19,11467,-1)
0^2
"KRN",19,11467,0)
C9C RULES ENGINE^C9C RULES ENGINE^^O^^^^^^^^
"KRN",19,11467,99.1)
65289,41013
"KRN",19,11467,"U")
C9C RULES ENGINE
"KRN",19,11468,-1)
0^1
"KRN",19,11468,0)
C9C DASHBOARD^C9C DASHBOARD^^B^^^^^^^^
"KRN",19,11468,1,0)
^^1^1^3180214^
"KRN",19,11468,1,1,0)
Dashboard to display custom modules
"KRN",19,11468,99.1)
65462,38399
"KRN",19,11468,"RPC",0)
^19.05P^43^43
"KRN",19,11468,"RPC",1,0)
C9C MODULE GET NOTES DUE
"KRN",19,11468,"RPC",2,0)
XUS INTRO MSG
"KRN",19,11468,"RPC",3,0)
XUS GET USER INFO
"KRN",19,11468,"RPC",4,0)
XUS DIVISION GET
"KRN",19,11468,"RPC",5,0)
XUS DIVISION SET
"KRN",19,11468,"RPC",6,0)
ORWU HASKEY
"KRN",19,11468,"RPC",7,0)
XUS C9CKEYS
"KRN",19,11468,"RPC",8,0)
XOBV TEST PING
"KRN",19,11468,"RPC",9,0)
C9C MODULE DEFINITIONS
"KRN",19,11468,"RPC",10,0)
C9C DATAGRID COLUMN HEADERS
"KRN",19,11468,"RPC",11,0)
C9C BUTTON IMAGE BYTE STRING
"KRN",19,11468,"RPC",12,0)
C9C NOTES DUE ALL FILTERS
"KRN",19,11468,"RPC",13,0)
C9C DASHBOARD GET USER FILTERS
"KRN",19,11468,"RPC",14,0)
C9C DASHBOARD PUT USER FILTERS
"KRN",19,11468,"RPC",15,0)
C9C DB MODULE NOTE TEXT
"KRN",19,11468,"RPC",16,0)
C9C SAVE DASHBOARD PREFERENCES
"KRN",19,11468,"RPC",17,0)
C9C GET DASHBOARD PREFERENCES
"KRN",19,11468,"RPC",18,0)
C9C GET DIVISIONS
"KRN",19,11468,"RPC",19,0)
C9C WARDS AND UNITS
"KRN",19,11468,"RPC",20,0)
C9C GET CRITICAL LAB RESULTS
"KRN",19,11468,"RPC",21,0)
C9C DASHBOARD STICKY NOTES
"KRN",19,11468,"RPC",22,0)
C9C GET PENDING LABS
"KRN",19,11468,"RPC",23,0)
C9C GET WARDNAMES
"KRN",19,11468,"RPC",24,0)
C9C FILTER STICKY NOTES
"KRN",19,11468,"RPC",25,0)
C9C NOTES DUE BY TEAM
"KRN",19,11468,"RPC",26,0)
C9C ND GET TEAMS
"KRN",19,11468,"RPC",27,0)
ORQOR DETAIL
"KRN",19,11468,"RPC",28,0)
C9C LAB DRAWS OTHER THAN SIX
"KRN",19,11468,"RPC",29,0)
C9C UNVERIFIED FOR DASHBOARD
"KRN",19,11468,"RPC",30,0)
C9C EXPIRING FOR DASHBOARD
"KRN",19,11468,"RPC",31,0)
C9C FORECAST NOTES DUE
"KRN",19,11468,"RPC",32,0)
C9C FORCE STICKY NOTE EXP
"KRN",19,11468,"RPC",33,0)
C9C MISSING DSCG SUMMARIES
"KRN",19,11468,"RPC",34,0)
C9C DASHBOARD REMINDER MODULE
"KRN",19,11468,"RPC",35,0)
C9C C AND R FILTERS
"KRN",19,11468,"RPC",36,0)
C9C COVERING PROVIDERS MODULE
"KRN",19,11468,"RPC",37,0)
C9C GET ALL APPROPRIATE TEAMS
"KRN",19,11468,"RPC",38,0)
C9C ALL PATIENTS REMINDERS
"KRN",19,11468,"RPC",39,0)
C9C COVERING PSYCHOL MODULE
"KRN",19,11468,"RPC",40,0)
C9C COVERING SW MODULE
"KRN",19,11468,"RPC",41,0)
C9C SHOW OVERRIDES
"KRN",19,11468,"RPC",42,0)
C9C GERD DRUG FILTER
"KRN",19,11468,"RPC",43,0)
C9C ON GERD DRUGS
"KRN",19,11468,"U")
C9C DASHBOARD
"KRN",19.1,556,-1)
0^1
"KRN",19.1,556,0)
INACTIVE DASHBOARD MODULES^INACTIVE DASHBOARD MODULES^l
"KRN",8989.51,1420,-1)
0^1
"KRN",8989.51,1420,0)
VIEW NOTES DUE RULE APPLIED^VIEW NOTES DUE RULE APPLIED
"KRN",8989.51,1420,1)
Y
"KRN",8989.51,1420,6)
Y
"KRN",8989.51,1420,30,0)
^8989.513I^4^4
"KRN",8989.51,1420,30,1,0)
4^4.2
"KRN",8989.51,1420,30,2,0)
3^9.4
"KRN",8989.51,1420,30,3,0)
2^4
"KRN",8989.51,1420,30,4,0)
1^200
"KRN",8994,2869,-1)
0^11
"KRN",8994,2869,0)
C9C GET DIVISIONS^DIVGET^C9CGDIV^2^P
"KRN",8994,2869,1,0)
^^1^1^3130815^
"KRN",8994,2869,1,1,0)
Return Divisions for User
"KRN",8994,2869,2,0)
^8994.02A^1^1
"KRN",8994,2869,2,1,0)
IEN^1^20^1^1
"KRN",8994,2869,2,1,1,0)
^^1^1^3130815^
"KRN",8994,2869,2,1,1,1,0)
User IEN
"KRN",8994,2869,2,"B","IEN",1)

"KRN",8994,2869,2,"PARAMSEQ",1,1)

"KRN",8994,2919,-1)
0^16
"KRN",8994,2919,0)
C9C GET WARDNAMES^WARDS^C9CRTRPT^2^P
"KRN",8994,2919,1,0)
^^1^1^3140509^
"KRN",8994,2919,1,1,0)
Returns wardnames for active wards that match DUZ(2)
"KRN",8994,3065,-1)
0^24
"KRN",8994,3065,0)
C9C FORCE STICKY NOTE EXP^FORCEEXP^C9CSTN^2^P
"KRN",8994,3065,2,0)
^8994.02A^2^2
"KRN",8994,3065,2,1,0)
C9CDFN^1^30^1^1
"KRN",8994,3065,2,2,0)
NOTEIEN^1^30^1^2
"KRN",8994,3065,2,"B","C9CDFN",1)

"KRN",8994,3065,2,"B","NOTEIEN",2)

"KRN",8994,3065,2,"PARAMSEQ",1,1)

"KRN",8994,3065,2,"PARAMSEQ",2,2)

"KRN",8994,3077,-1)
0^12
"KRN",8994,3077,0)
C9C WARDS AND UNITS^RPCWB^C9CWBS^2^P
"KRN",8994,3078,-1)
0^37
"KRN",8994,3078,0)
C9C SAVE RULES ENGINE WARDS^RPCSW^C9CWBS^1^P
"KRN",8994,3078,2,0)
^8994.02A^2^2
"KRN",8994,3078,2,1,0)
WARDIENS^1^200^1^1
"KRN",8994,3078,2,1,1,0)
^^1^1^3180125^
"KRN",8994,3078,2,1,1,1,0)
WARDIENS - "IEN^IEN^IEN..."
"KRN",8994,3078,2,2,0)
RIEN^1^100^1^2
"KRN",8994,3078,2,2,1,0)
^8994.021^1^1^3180125^^
"KRN",8994,3078,2,2,1,1,0)
RIEN - "RECORD IEN FOR TIU TITLE,1,FORMULA IEN,1,RULE IEN"
"KRN",8994,3078,2,"B","RIEN",2)

"KRN",8994,3078,2,"B","WARDIENS",1)

"KRN",8994,3078,2,"PARAMSEQ",1,1)

"KRN",8994,3078,2,"PARAMSEQ",2,2)

"KRN",8994,3078,3,0)
^^2^2^3180125^
"KRN",8994,3078,3,1,0)
1 for success
"KRN",8994,3078,3,2,0)
0 for failure
"KRN",8994,3079,-1)
0^38
"KRN",8994,3079,0)
C9C SAVE RULES ENGINE UNITS^RPCSU^C9CWBS^1^P
"KRN",8994,3079,2,0)
^8994.02A^2^2
"KRN",8994,3079,2,1,0)
UNITNAMES^1^200^1^1
"KRN",8994,3079,2,1,1,0)
^^1^1^3180125^
"KRN",8994,3079,2,1,1,1,0)
UNITNAMES - "UNITNAME^UNITNAME^UNITNAME..."
"KRN",8994,3079,2,2,0)
RIEN^1^100^1^2
"KRN",8994,3079,2,2,1,0)
^8994.021^1^1^3180125^^
"KRN",8994,3079,2,2,1,1,0)
RIEN - "RECORD IEN FOR TIU TITLE,1,FORMULA IEN,1,RULE IEN"
"KRN",8994,3079,2,"B","RIEN",2)

"KRN",8994,3079,2,"B","UNITNAMES",1)

"KRN",8994,3079,2,"PARAMSEQ",1,1)

"KRN",8994,3079,2,"PARAMSEQ",2,2)

"KRN",8994,3080,-1)
0^39
"KRN",8994,3080,0)
C9C GET RULE NAMES^GETRULES^C9CGSR^2^P
"KRN",8994,3081,-1)
0^40
"KRN",8994,3081,0)
C9C ADD RULE TO FORMULA^RPCAR^C9CWBS^1^P
"KRN",8994,3081,2,0)
^8994.02A^13^13
"KRN",8994,3081,2,1,0)
PTRIEN^1^30^1^2
"KRN",8994,3081,2,1,1,0)
^8994.021^1^1^3180131^^
"KRN",8994,3081,2,1,1,1,0)
Pointer to C9C RULES file
"KRN",8994,3081,2,2,0)
IENSTR^1^80^1^3
"KRN",8994,3081,2,3,0)
XDAYSA^1^30^1^4
"KRN",8994,3081,2,4,0)
XHOURSA^1^30^1^5
"KRN",8994,3081,2,5,0)
CDATE^1^80^1^6
"KRN",8994,3081,2,5,1,0)
^8994.021^1^1^3180131^^
"KRN",8994,3081,2,5,1,1,0)
External calendar date
"KRN",8994,3081,2,6,0)
DYEAR^1^30^1^7
"KRN",8994,3081,2,7,0)
DMONTH^1^30^1^8
"KRN",8994,3081,2,8,0)
DWEEK^1^30^1^9
"KRN",8994,3081,2,9,0)
COHORT^1^30^1^1
"KRN",8994,3081,2,9,1,0)
^^1^1^3180131^
"KRN",8994,3081,2,9,1,1,0)
"WARD" or "UNIT" or "HOSPITAL"
"KRN",8994,3081,2,10,0)
ORDABLE^1^30^1^12
"KRN",8994,3081,2,11,0)
XDAYSE^1^30^1^10
"KRN",8994,3081,2,12,0)
XHOURSE^1^30^1^11
"KRN",8994,3081,2,13,0)
PASSTHIEN^1^30^0^13
"KRN",8994,3081,2,13,1,0)
^^1^1^3190818^
"KRN",8994,3081,2,13,1,1,0)
Pass-through reminder ien
"KRN",8994,3081,2,"B","CDATE",5)

"KRN",8994,3081,2,"B","COHORT",9)

"KRN",8994,3081,2,"B","DMONTH",7)

"KRN",8994,3081,2,"B","DWEEK",8)

"KRN",8994,3081,2,"B","DYEAR",6)

"KRN",8994,3081,2,"B","IENSTR",2)

"KRN",8994,3081,2,"B","ORDABLE",10)

"KRN",8994,3081,2,"B","PASSTHIEN",13)

"KRN",8994,3081,2,"B","PTRIEN",1)

"KRN",8994,3081,2,"B","XDAYSA",3)

"KRN",8994,3081,2,"B","XDAYSE",11)

"KRN",8994,3081,2,"B","XHOURSA",4)

"KRN",8994,3081,2,"B","XHOURSE",12)

"KRN",8994,3081,2,"PARAMSEQ",1,9)

"KRN",8994,3081,2,"PARAMSEQ",2,1)

"KRN",8994,3081,2,"PARAMSEQ",3,2)

"KRN",8994,3081,2,"PARAMSEQ",4,3)

"KRN",8994,3081,2,"PARAMSEQ",5,4)

"KRN",8994,3081,2,"PARAMSEQ",6,5)

"KRN",8994,3081,2,"PARAMSEQ",7,6)

"KRN",8994,3081,2,"PARAMSEQ",8,7)

"KRN",8994,3081,2,"PARAMSEQ",9,8)

"KRN",8994,3081,2,"PARAMSEQ",10,11)

"KRN",8994,3081,2,"PARAMSEQ",11,12)

"KRN",8994,3081,2,"PARAMSEQ",12,10)

"KRN",8994,3081,2,"PARAMSEQ",13,13)

"KRN",8994,3082,-1)
0^41
"KRN",8994,3082,0)
C9C RULES ENGINE ORD ITEMS^RPCEOI^C9CWBS^2^P
"KRN",8994,3083,-1)
0^42
"KRN",8994,3083,0)
C9C DELETE SINGLE RULE^RPCDR^C9CWBS^1^P
"KRN",8994,3083,2,0)
^8994.02A^1^1
"KRN",8994,3083,2,1,0)
IENSTRING^1^80^1^1
"KRN",8994,3083,2,1,1,0)
^^1^1^3180205^
"KRN",8994,3083,2,1,1,1,0)
RECORD IEN FOR TIU TITLE;SEPARATOR;FORMULA IEN;SEPARATOR;RULE IEN
"KRN",8994,3083,2,"B","IENSTRING",1)

"KRN",8994,3083,2,"PARAMSEQ",1,1)

"KRN",8994,3084,-1)
0^43
"KRN",8994,3084,0)
C9C SAVE NEW FORMULA^RPCSF^C9CWBS^1^P
"KRN",8994,3084,2,0)
^8994.02A^3^3
"KRN",8994,3084,2,1,0)
RIEN^1^30^1^1
"KRN",8994,3084,2,1,1,0)
^^1^1^3180206^
"KRN",8994,3084,2,1,1,1,0)
IEN of TIU DOCUMENT DEFINITION
"KRN",8994,3084,2,2,0)
COHORT^1^30^1^2
"KRN",8994,3084,2,2,1,0)
^^1^1^3180206^
"KRN",8994,3084,2,2,1,1,0)
COHORT - WARD, UNIT, or HOSPITAL
"KRN",8994,3084,2,3,0)
FORNAME^1^80^1^3
"KRN",8994,3084,2,3,1,0)
^^1^1^3180206^
"KRN",8994,3084,2,3,1,1,0)
Formula Name
"KRN",8994,3084,2,"B","COHORT",2)

"KRN",8994,3084,2,"B","FORNAME",3)

"KRN",8994,3084,2,"B","RIEN",1)

"KRN",8994,3084,2,"PARAMSEQ",1,1)

"KRN",8994,3084,2,"PARAMSEQ",2,2)

"KRN",8994,3084,2,"PARAMSEQ",3,3)

"KRN",8994,3085,-1)
0^44
"KRN",8994,3085,0)
C9C DELETE FORMULA^RPCDF^C9CWBS^1^P
"KRN",8994,3085,2,0)
^8994.02A^3^3
"KRN",8994,3085,2,1,0)
RIEN^1^30^1^1
"KRN",8994,3085,2,1,1,0)
^^1^1^3180206^
"KRN",8994,3085,2,1,1,1,0)
RIEN - IEN of TIU DOCUMENT DEFINITION this formula applies to
"KRN",8994,3085,2,2,0)
FORIEN^1^30^1^2
"KRN",8994,3085,2,2,1,0)
^^1^1^3180206^
"KRN",8994,3085,2,2,1,1,0)
FORIEN - IEN of this formula
"KRN",8994,3085,2,3,0)
COHORT^1^30^1^3
"KRN",8994,3085,2,3,1,0)
^^1^1^3180206^
"KRN",8994,3085,2,3,1,1,0)
COHORT - WARD, UNIT, or HOSPITAL
"KRN",8994,3085,2,"B","COHORT",3)

"KRN",8994,3085,2,"B","FORIEN",2)

"KRN",8994,3085,2,"B","RIEN",1)

"KRN",8994,3085,2,"PARAMSEQ",1,1)

"KRN",8994,3085,2,"PARAMSEQ",2,2)

"KRN",8994,3085,2,"PARAMSEQ",3,3)

"KRN",8994,3086,-1)
0^1
"KRN",8994,3086,0)
C9C MODULE GET NOTES DUE^RPCND^C9CMODND^2^P
"KRN",8994,3086,1,0)
^^1^1^3180214^
"KRN",8994,3086,1,1,0)
Get notes due for Dashboard Module Note Due
"KRN",8994,3086,2,0)
^8994.02A^1^1
"KRN",8994,3086,2,1,0)
WARD^1^80^1^1
"KRN",8994,3086,2,"B","WARD",1)

"KRN",8994,3086,2,"PARAMSEQ",1,1)

"KRN",8994,3087,-1)
0^2
"KRN",8994,3087,0)
C9C MODULE DEFINITIONS^RPCGM^C9CGDBM^2^P
"KRN",8994,3088,-1)
0^3
"KRN",8994,3088,0)
C9C DATAGRID COLUMN HEADERS^RPCGC^C9CGDBM^2^P
"KRN",8994,3088,2,0)
^8994.02A^1^1
"KRN",8994,3088,2,1,0)
MIEN^1^30^1^1
"KRN",8994,3088,2,1,1,0)
^^1^1^3180214^
"KRN",8994,3088,2,1,1,1,0)
Dashboard Module IEN from file 300894
"KRN",8994,3088,2,"B","MIEN",1)

"KRN",8994,3088,2,"PARAMSEQ",1,1)

"KRN",8994,3089,-1)
0^4
"KRN",8994,3089,0)
C9C BUTTON IMAGE BYTE STRING^RPCGBA^C9CGDBM^2^P
"KRN",8994,3089,2,0)
^8994.02A^1^1
"KRN",8994,3089,2,1,0)
MIEN^1^30^1^1
"KRN",8994,3089,2,1,1,0)
^^1^1^3180214^
"KRN",8994,3089,2,1,1,1,0)
Dashboard Module IEN from file 300894
"KRN",8994,3089,2,"B","MIEN",1)

"KRN",8994,3089,2,"PARAMSEQ",1,1)

"KRN",8994,3090,-1)
0^5
"KRN",8994,3090,0)
C9C NOTES DUE ALL FILTERS^RPCAF^C9CMODND^2^P
"KRN",8994,3090,1,0)
^8994.01^2^2^3180220^
"KRN",8994,3090,1,1,0)
Returns IEN^Note Title for all note titles that have rules in the rules 
"KRN",8994,3090,1,2,0)
engine
"KRN",8994,3091,-1)
0^6
"KRN",8994,3091,0)
C9C DASHBOARD GET USER FILTERS^RPCGUFI^C9CGDBM^2^P
"KRN",8994,3091,2,0)
^8994.02A^1^1
"KRN",8994,3091,2,1,0)
MIEN^1^30^1^1
"KRN",8994,3091,2,1,1,0)
^^1^1^3180221^
"KRN",8994,3091,2,1,1,1,0)
IEN of Module in C9C DASHBOARD MODULES
"KRN",8994,3091,2,"B","MIEN",1)

"KRN",8994,3091,2,"PARAMSEQ",1,1)

"KRN",8994,3091,3,0)
^^1^1^3180221^
"KRN",8994,3091,3,1,0)
IEN^NAME for each filterable
"KRN",8994,3092,-1)
0^7
"KRN",8994,3092,0)
C9C DASHBOARD PUT USER FILTERS^RPCPUFI^C9CGDBM^1^P
"KRN",8994,3092,2,0)
^8994.02A^2^2
"KRN",8994,3092,2,1,0)
MIEN^1^30^1^1
"KRN",8994,3092,2,1,1,0)
^^1^1^3180221^
"KRN",8994,3092,2,1,1,1,0)
Module IEN
"KRN",8994,3092,2,2,0)
FILTERS^2^1000^1^2
"KRN",8994,3092,2,"B","FILTERS",2)

"KRN",8994,3092,2,"B","MIEN",1)

"KRN",8994,3092,2,"PARAMSEQ",1,1)

"KRN",8994,3092,2,"PARAMSEQ",2,2)

"KRN",8994,3093,-1)
0^8
"KRN",8994,3093,0)
C9C DB MODULE NOTE TEXT^RPCGNOTE^C9CMODND^2^P
"KRN",8994,3093,1,0)
^8994.01^1^1^3180305^^^
"KRN",8994,3093,1,1,0)
Get note text for Dashboard click
"KRN",8994,3093,2,0)
^8994.02A^1^1
"KRN",8994,3093,2,1,0)
NOTEIEN^1^30^1^1
"KRN",8994,3093,2,"B","NOTEIEN",1)

"KRN",8994,3093,2,"PARAMSEQ",1,1)

"KRN",8994,3094,-1)
0^9
"KRN",8994,3094,0)
C9C SAVE DASHBOARD PREFERENCES^RPCSA^C9CGDBM^1^P
"KRN",8994,3094,2,0)
^8994.02A^9^9
"KRN",8994,3094,2,1,0)
FONT^1^2^0^1
"KRN",8994,3094,2,1,1,0)
^^1^1^3180320^
"KRN",8994,3094,2,1,1,1,0)
8,9,10,11,or 12
"KRN",8994,3094,2,2,0)
WWIDTH^1^7^0^2
"KRN",8994,3094,2,2,1,0)
^^1^1^3180320^
"KRN",8994,3094,2,2,1,1,0)
window width in pixels
"KRN",8994,3094,2,3,0)
WHEIGHT^1^7^0^3
"KRN",8994,3094,2,3,1,0)
^^1^1^3180320^
"KRN",8994,3094,2,3,1,1,0)
window height in pixels
"KRN",8994,3094,2,4,0)
SLHORIZ^1^9^0^4
"KRN",8994,3094,2,4,1,0)
^^1^1^3180320^
"KRN",8994,3094,2,4,1,1,0)
left horizontal splitter position
"KRN",8994,3094,2,5,0)
SRHORIZ^1^9^0^5
"KRN",8994,3094,2,5,1,0)
^^1^1^3180320^
"KRN",8994,3094,2,5,1,1,0)
right horizontal splitter position
"KRN",8994,3094,2,6,0)
MODLIST^2^250^0^9
"KRN",8994,3094,2,6,1,0)
^8994.021^2^2^3180323^^^
"KRN",8994,3094,2,6,1,1,0)
MODLIST - list of modules: (1)MODULE IEN^(2)MODULE INSTANCE^(3)ORDER 
"KRN",8994,3094,2,6,1,2,0)
SHOWN^(4)SORT COLUMN^(5)SORT DIRECTION^(6)LOCATION SELECTION IEN
"KRN",8994,3094,2,7,0)
SVERT^1^9^0^6
"KRN",8994,3094,2,7,1,0)
^^1^1^3180320^
"KRN",8994,3094,2,7,1,1,0)
vertical splitter position
"KRN",8994,3094,2,8,0)
WINLEFT^1^30^0^7
"KRN",8994,3094,2,9,0)
WINTOP^1^30^0^8
"KRN",8994,3094,2,"B","FONT",1)

"KRN",8994,3094,2,"B","MODLIST",6)

"KRN",8994,3094,2,"B","SLHORIZ",4)

"KRN",8994,3094,2,"B","SRHORIZ",5)

"KRN",8994,3094,2,"B","SVERT",7)

"KRN",8994,3094,2,"B","WHEIGHT",3)

"KRN",8994,3094,2,"B","WINLEFT",8)

"KRN",8994,3094,2,"B","WINTOP",9)

"KRN",8994,3094,2,"B","WWIDTH",2)

"KRN",8994,3094,2,"PARAMSEQ",1,1)

"KRN",8994,3094,2,"PARAMSEQ",2,2)

"KRN",8994,3094,2,"PARAMSEQ",3,3)

"KRN",8994,3094,2,"PARAMSEQ",4,4)

"KRN",8994,3094,2,"PARAMSEQ",5,5)

"KRN",8994,3094,2,"PARAMSEQ",6,7)

"KRN",8994,3094,2,"PARAMSEQ",7,8)

"KRN",8994,3094,2,"PARAMSEQ",8,9)

"KRN",8994,3094,2,"PARAMSEQ",9,6)

"KRN",8994,3094,3,0)
^8994.03^1^1^3180323^^^
"KRN",8994,3094,3,1,0)
C9CRET - returns 1 for success, 0 for failure
"KRN",8994,3095,-1)
0^10
"KRN",8994,3095,0)
C9C GET DASHBOARD PREFERENCES^RPCGA^C9CGDBM^2^P
"KRN",8994,3095,1,0)
^8994.01^1^1^3180323^^^
"KRN",8994,3095,1,1,0)
get all saved settings except filters 
"KRN",8994,3095,3,0)
^^6^6^3180323^
"KRN",8994,3095,3,1,0)
;C9CRET(1) - WWIDTH^WHEIGHT^FONT^SPLITTER LEFT HORIZONTAL 
"KRN",8994,3095,3,2,0)
POSITION^SPLITTER RIGHT HORIZONTAL POSITION^SPLITTER VERTICAL POSITION
"KRN",8994,3095,3,3,0)
^WINDOW LEFT^WINDOW RIGHT 
"KRN",8994,3095,3,4,0)
 
"KRN",8994,3095,3,5,0)
;C9CRET(2...) - (1)MODULE IEN^(2)MODULE INSTANCE^(3)ORDER SHOWN^(4)SORT 
"KRN",8994,3095,3,6,0)
COLUMN^(5)SORT DIRECTION^(6)LOCATION SELECTION IEN
"KRN",8994,3096,-1)
0^36
"KRN",8994,3096,0)
C9C GET FORMULAS^GETF^C9CGSR^2^P
"KRN",8994,3096,2,0)
^8994.02A^1^1
"KRN",8994,3096,2,1,0)
VPTR^1^30^1^1
"KRN",8994,3096,2,1,1,0)
^8994.021^1^1^3180130^^^
"KRN",8994,3096,2,1,1,1,0)
Variable pointer to object
"KRN",8994,3096,2,"B","VPTR",1)

"KRN",8994,3096,2,"PARAMSEQ",1,1)

"KRN",8994,3098,-1)
0^13
"KRN",8994,3098,0)
C9C GET CRITICAL LAB RESULTS^RPC^C9CGPV^2^P
"KRN",8994,3103,-1)
0^14
"KRN",8994,3103,0)
C9C DASHBOARD STICKY NOTES^RPC^C9CMODSN^2^P
"KRN",8994,3103,2,0)
^8994.02A^1^1
"KRN",8994,3103,2,1,0)
WARD^1^80^1^1
"KRN",8994,3103,2,"B","WARD",1)

"KRN",8994,3103,2,"PARAMSEQ",1,1)

"KRN",8994,3108,-1)
0^15
"KRN",8994,3108,0)
C9C GET PENDING LABS^RPC^C9CGPL^2^P
"KRN",8994,3108,2,0)
^8994.02A^1^1
"KRN",8994,3108,2,1,0)
WARD^1^80^1^1
"KRN",8994,3108,2,"B","WARD",1)

"KRN",8994,3108,2,"PARAMSEQ",1,1)

"KRN",8994,3110,-1)
0^17
"KRN",8994,3110,0)
C9C FILTER STICKY NOTES^RPCFILT^C9CMODSN^2^P
"KRN",8994,3111,-1)
0^18
"KRN",8994,3111,0)
C9C NOTES DUE BY TEAM^RPCND^C9CMODNT^2^P
"KRN",8994,3111,2,0)
^8994.02A^1^1
"KRN",8994,3111,2,1,0)
TEAM^1^200^1^1
"KRN",8994,3111,2,1,1,0)
^^1^1^3180926^
"KRN",8994,3111,2,1,1,1,0)
IEN: TEAM
"KRN",8994,3111,2,"B","TEAM",1)

"KRN",8994,3111,2,"PARAMSEQ",1,1)

"KRN",8994,3112,-1)
0^19
"KRN",8994,3112,0)
C9C ND GET TEAMS^RPCGT^C9CMODNT^2^P
"KRN",8994,3127,-1)
0^20
"KRN",8994,3127,0)
C9C LAB DRAWS OTHER THAN SIX^RPC^C9CDBLB^2^P
"KRN",8994,3127,1,0)
^^1^1^3190605^
"KRN",8994,3127,1,1,0)
Returns lab draws due today, but not at 6:00am
"KRN",8994,3127,2,0)
^8994.02A^1^1
"KRN",8994,3127,2,1,0)
C9CWARD^1^80^1^1
"KRN",8994,3127,2,1,1,0)
^^1^1^3190605^
"KRN",8994,3127,2,1,1,1,0)
Name of the ward
"KRN",8994,3127,2,"B","C9CWARD",1)

"KRN",8994,3127,2,"PARAMSEQ",1,1)

"KRN",8994,3128,-1)
0^21
"KRN",8994,3128,0)
C9C UNVERIFIED FOR DASHBOARD^RPC^C9CDBUV^2^P
"KRN",8994,3128,1,0)
^^1^1^3190605^
"KRN",8994,3128,1,1,0)
Returns unverified orders to a defined past date for Dashboard
"KRN",8994,3128,2,0)
^8994.02A^1^1
"KRN",8994,3128,2,1,0)
C9CWARD^1^80^1^1
"KRN",8994,3128,2,1,1,0)
^^1^1^3190605^
"KRN",8994,3128,2,1,1,1,0)
Ward Name
"KRN",8994,3128,2,"B","C9CWARD",1)

"KRN",8994,3128,2,"PARAMSEQ",1,1)

"KRN",8994,3129,-1)
0^22
"KRN",8994,3129,0)
C9C EXPIRING FOR DASHBOARD^RPC^C9CEXOR^2^P
"KRN",8994,3129,1,0)
^^1^1^3190607^
"KRN",8994,3129,1,1,0)
Expiring orders by team for Dashboard
"KRN",8994,3129,2,0)
^8994.02A^1^1
"KRN",8994,3129,2,1,0)
TEAM^1^80^1^1
"KRN",8994,3129,2,1,1,0)
^^1^1^3190607^
"KRN",8994,3129,2,1,1,1,0)
TeamIEN^TeamName
"KRN",8994,3129,2,"B","TEAM",1)

"KRN",8994,3129,2,"PARAMSEQ",1,1)

"KRN",8994,3129,3,0)
^^2^2^3190607^
"KRN",8994,3129,3,1,0)
PATDFN_"^"_PATNAME_"^"_MRN_"^"_WARD_"^"_$$FMTE^XLFDT(STOPDATE)_"^"_ORNO_"^
"KRN",8994,3129,3,2,0)
"_STAT_"^"_DGROUP_"^"_$$FMTE^XLFDT(STARTDATE)
"KRN",8994,3130,-1)
0^23
"KRN",8994,3130,0)
C9C FORECAST NOTES DUE^RPCND^C9CFCAST^2^P
"KRN",8994,3130,2,0)
^8994.02A^1^1
"KRN",8994,3130,2,1,0)
TEAM^1^200^1^1
"KRN",8994,3130,2,"B","TEAM",1)

"KRN",8994,3130,2,"PARAMSEQ",1,1)

"KRN",8994,3136,-1)
0^45
"KRN",8994,3136,0)
C9C GET DASHBOARD REMINDERS^GETRMDRS^C9CWBS^2^P
"KRN",8994,3136,1,0)
^^3^3^3190802^
"KRN",8994,3136,1,1,0)
 
"KRN",8994,3136,1,2,0)
 
"KRN",8994,3136,1,3,0)
Returns all reminders from file 811.9 that begin with the word "DASHBOARD"
"KRN",8994,3136,3,0)
^^1^1^3190802^
"KRN",8994,3136,3,1,0)
NAME^IEN
"KRN",8994,3137,-1)
0^46
"KRN",8994,3137,0)
C9C GET COHORT FOR TITLE^GETCFT^C9CWBS^1^P
"KRN",8994,3137,2,0)
^8994.02A^1^1
"KRN",8994,3137,2,1,0)
VPTR^1^50^1^1
"KRN",8994,3137,2,1,1,0)
^^1^1^3190802^
"KRN",8994,3137,2,1,1,1,0)
variable pointer into file 300890
"KRN",8994,3137,2,"B","VPTR",1)

"KRN",8994,3137,2,"PARAMSEQ",1,1)

"KRN",8994,3137,3,0)
^^1^1^3190802^
"KRN",8994,3137,3,1,0)
ien^name
"KRN",8994,3138,-1)
0^47
"KRN",8994,3138,0)
C9C SET COHORT FOR TITLE^SETCFT^C9CWBS^1^P
"KRN",8994,3138,2,0)
^8994.02A^3^3
"KRN",8994,3138,2,1,0)
VPTR^1^50^1^1
"KRN",8994,3138,2,2,0)
COHIEN^1^30^1^2
"KRN",8994,3138,2,3,0)
PTONLY^1^1^1^3
"KRN",8994,3138,2,"B","COHIEN",2)

"KRN",8994,3138,2,"B","PTONLY",3)

"KRN",8994,3138,2,"B","VPTR",1)

"KRN",8994,3138,2,"PARAMSEQ",1,1)

"KRN",8994,3138,2,"PARAMSEQ",2,2)

"KRN",8994,3138,2,"PARAMSEQ",3,3)

"KRN",8994,3139,-1)
0^25
"KRN",8994,3139,0)
C9C MISSING DSCG SUMMARIES^RPC^C9CDIS^2^P
"KRN",8994,3139,3,0)
^^1^1^3190806^
"KRN",8994,3139,3,1,0)
DFN^NAME^DISCHARGE DATE
"KRN",8994,3141,-1)
0^48
"KRN",8994,3141,0)
C9C GET PASS-THROUGH REMINDERS^GETPTRM^C9CWBS^2^P
"KRN",8994,3141,1,0)
^^2^2^3190818^
"KRN",8994,3141,1,1,0)
Returns all reminders from file 811.9 that begin with the word
"KRN",8994,3141,1,2,0)
"PTDASHBOARD"
"KRN",8994,3141,3,0)
^^1^1^3190818^
"KRN",8994,3141,3,1,0)
NAME^IEN
"KRN",8994,3145,-1)
0^26
"KRN",8994,3145,0)
C9C DASHBOARD REMINDER MODULE^WARDPATS^C9CMODRM^2^P
"KRN",8994,3145,1,0)
^^1^1^3190909^
"KRN",8994,3145,1,1,0)
Applies logic for all DASHBOARD-C and DASHBOARD-R active reminders
"KRN",8994,3145,2,0)
^8994.02A^1^1
"KRN",8994,3145,2,1,0)
WARD^1^80^1^1
"KRN",8994,3145,2,1,1,0)
^^1^1^3190909^
"KRN",8994,3145,2,1,1,1,0)
Ward Name
"KRN",8994,3145,2,"B","WARD",1)

"KRN",8994,3145,2,"PARAMSEQ",1,1)

"KRN",8994,3145,3,0)
^^1^1^3190909^
"KRN",8994,3145,3,1,0)
DFN^PATNAME^REMINDERNAME^Duedate^Color
"KRN",8994,3146,-1)
0^27
"KRN",8994,3146,0)
C9C C AND R FILTERS^RPCFILT^C9CMODRM^2^P
"KRN",8994,3149,-1)
0^28
"KRN",8994,3149,0)
C9C COVERING PROVIDERS MODULE^RPC^C9CMODCP^2^P
"KRN",8994,3149,1,0)
^^1^1^3190920^
"KRN",8994,3149,1,1,0)
Covering Providers for Dashboard
"KRN",8994,3149,3,0)
^^2^2^3190920^
"KRN",8994,3149,3,1,0)
PATIEN_"^"_PATNAME_"^"_PATWARD_"^"_ATTNAME_"^"_COVNAME_"^"_$$FMTE^XLFDT(BD
"KRN",8994,3149,3,2,0)
 ATE)_"^"_$$FMTE^XLFDT(EDATE)_"^"_COLOR
"KRN",8994,3153,-1)
0^29
"KRN",8994,3153,0)
C9C GET ALL APPROPRIATE TEAMS^RPCGAT^C9CMODNT^2^P
"KRN",8994,3153,1,0)
^^1^1^3191231^
"KRN",8994,3153,1,1,0)
get psychiatrist auto teams and subscribed teams
"KRN",8994,3154,-1)
0^30
"KRN",8994,3154,0)
C9C ALL PATIENTS REMINDERS^ALLINPTS^C9CMODRM^2^P
"KRN",8994,3154,1,0)
^8994.01^2^2^3191230^^^^
"KRN",8994,3154,1,1,0)
Applies logic for all DASHBOARD-C and DASHBOARD-R active reminders - all 
"KRN",8994,3154,1,2,0)
inpatients
"KRN",8994,3154,2,0)
^8994.02A^^0
"KRN",8994,3154,3,0)
^8994.03^1^1^3191230^^^^
"KRN",8994,3154,3,1,0)
DFN^PATNAME^WARD^REMINDERNAME^DUEDATE^COLOR^WEBSITE
"KRN",8994,3164,-1)
0^31
"KRN",8994,3164,0)
C9C COVERING PSYCHOL MODULE^RPC^C9CMODPG^2^P
"KRN",8994,3164,1,0)
^^1^1^3200214^
"KRN",8994,3164,1,1,0)
Covering Psychologists for Dashboard
"KRN",8994,3164,3,0)
^^2^2^3200214^
"KRN",8994,3164,3,1,0)
PATIEN_"^"_PATNAME_"^"_PATWARD_"^"_SWNAME_"^"_COVNAME_"^"_$$FMTE^XLFDT(BDA
"KRN",8994,3164,3,2,0)
TE)_"^"_$$FMTE^XLFDT(EDATE)_"^"_COLOR
"KRN",8994,3165,-1)
0^32
"KRN",8994,3165,0)
C9C COVERING SW MODULE^RPC^C9CMODCS^2^P
"KRN",8994,3165,1,0)
^^1^1^3200214^
"KRN",8994,3165,1,1,0)
Covering Social Workers for Dashboard
"KRN",8994,3165,3,0)
^^2^2^3200214^
"KRN",8994,3165,3,1,0)
PATIEN_"^"_PATNAME_"^"_PATWARD_"^"_PSYNAME_"^"_COVNAME_"^"_$$FMTE^XLFDT(BD
"KRN",8994,3165,3,2,0)
ATE)_"^"_$$FMTE^XLFDT(EDATE)_"^"_COLOR
"KRN",8994,3166,-1)
0^33
"KRN",8994,3166,0)
C9C SHOW OVERRIDES^GETOR^C9CORIDE^2^P
"KRN",8994,3166,2,0)
^8994.02A^2^2
"KRN",8994,3166,2,1,0)
RPOINT^1^30^1^1
"KRN",8994,3166,2,2,0)
TITLIEN^1^30^1^2
"KRN",8994,3166,2,"B","RPOINT",1)

"KRN",8994,3166,2,"B","TITLIEN",2)

"KRN",8994,3166,2,"PARAMSEQ",1,1)

"KRN",8994,3166,2,"PARAMSEQ",2,2)

"KRN",8994,3174,-1)
0^34
"KRN",8994,3174,0)
C9C GERD DRUG FILTER^RPCFILT^C9CMODCD^2^P
"KRN",8994,3174,3,0)
^^1^1^3200407^
"KRN",8994,3174,3,1,0)
IEN^DRUGNAME
"KRN",8994,3175,-1)
0^35
"KRN",8994,3175,0)
C9C ON GERD DRUGS^RPC^C9CMODCD^2^P
"KRN",8994,3175,1,0)
^^2^2^3200407^
"KRN",8994,3175,1,1,0)
Returns Dashboard data for patients on GERD drugs specified in same 
"KRN",8994,3175,1,2,0)
routine
"KRN",8994,3175,2,0)
^8994.02A^2^2
"KRN",8994,3175,2,1,0)
WARD^1^50^1^1
"KRN",8994,3175,2,1,1,0)
^^1^1^3200407^
"KRN",8994,3175,2,1,1,1,0)
Ward Name
"KRN",8994,3175,2,2,0)
FILTER^1^50^0^2
"KRN",8994,3175,2,2,1,0)
^^1^1^3200407^
"KRN",8994,3175,2,2,1,1,0)
Array of IEN^DRUGNAME
"KRN",8994,3175,2,"B","FILTER",2)

"KRN",8994,3175,2,"B","WARD",1)

"KRN",8994,3175,2,"PARAMSEQ",1,1)

"KRN",8994,3175,2,"PARAMSEQ",2,2)

"KRN",8994,3175,3,0)
^^2^2^3200407^
"KRN",8994,3175,3,1,0)
PATDFN_"^"_PATNAME_"^"_WARD_"^"_DRUGNAME_"^"_EDATE_"^"_ORNO_"^"_STAT(STATU
"KRN",8994,3175,3,2,0)
S)_"^"_ROWCOLOR
"MBREQ")
0
"ORD",3,19.1)
19.1;3;;;KEY^XPDTA1;KEYF1^XPDIA1;KEYE1^XPDIA1;KEYF2^XPDIA1;;KEYDEL^XPDIA1
"ORD",3,19.1,0)
SECURITY KEY
"ORD",16,8994)
8994;16;1;;;;;;;RPCDEL^XPDIA1
"ORD",16,8994,0)
REMOTE PROCEDURE
"ORD",18,19)
19;18;;;OPT^XPDTA;OPTF1^XPDIA;OPTE1^XPDIA;OPTF2^XPDIA;;OPTDEL^XPDIA
"ORD",18,19,0)
OPTION
"ORD",20,8989.51)
8989.51;20;;;PAR1E1^XPDTA2;PAR1F1^XPDIA3;PAR1E1^XPDIA3;PAR1F2^XPDIA3;;PAR1DEL^XPDIA3(%)
"ORD",20,8989.51,0)
PARAMETER DEFINITION
"QUES","XPF1",0)
Y
"QUES","XPF1","??")
^D REP^XPDH
"QUES","XPF1","A")
Shall I write over your |FLAG| File
"QUES","XPF1","B")
YES
"QUES","XPF1","M")
D XPF1^XPDIQ
"QUES","XPF2",0)
Y
"QUES","XPF2","??")
^D DTA^XPDH
"QUES","XPF2","A")
Want my data |FLAG| yours
"QUES","XPF2","B")
YES
"QUES","XPF2","M")
D XPF2^XPDIQ
"QUES","XPI1",0)
YO
"QUES","XPI1","??")
^D INHIBIT^XPDH
"QUES","XPI1","A")
Want KIDS to INHIBIT LOGONs during the install
"QUES","XPI1","B")
NO
"QUES","XPI1","M")
D XPI1^XPDIQ
"QUES","XPM1",0)
PO^VA(200,:EM
"QUES","XPM1","??")
^D MG^XPDH
"QUES","XPM1","A")
Enter the Coordinator for Mail Group '|FLAG|'
"QUES","XPM1","B")

"QUES","XPM1","M")
D XPM1^XPDIQ
"QUES","XPO1",0)
Y
"QUES","XPO1","??")
^D MENU^XPDH
"QUES","XPO1","A")
Want KIDS to Rebuild Menu Trees Upon Completion of Install
"QUES","XPO1","B")
NO
"QUES","XPO1","M")
D XPO1^XPDIQ
"QUES","XPZ1",0)
Y
"QUES","XPZ1","??")
^D OPT^XPDH
"QUES","XPZ1","A")
Want to DISABLE Scheduled Options, Menu Options, and Protocols
"QUES","XPZ1","B")
NO
"QUES","XPZ1","M")
D XPZ1^XPDIQ
"QUES","XPZ2",0)
Y
"QUES","XPZ2","??")
^D RTN^XPDH
"QUES","XPZ2","A")
Want to MOVE routines to other CPUs
"QUES","XPZ2","B")
NO
"QUES","XPZ2","M")
D XPZ2^XPDIQ
"RTN")
23
"RTN","C9CDBLB")
0^1^B593859
"RTN","C9CDBLB",1,0)
C9CDBLB  ;CRH JHT 2019 dashboard modue for requisitions for labs to be drawn today on a ward not due at 6:00am 
"RTN","C9CDBLB",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CDBLB",3,0)
 ;
"RTN","C9CDBLB",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CDBLB",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CDBLB",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CDBLB",7,0)
 ;
"RTN","C9CDBLB",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CDBLB",9,0)
 ;
"RTN","C9CDBLB",10,0)
 ;Unless required by applicable law or agreed to in writing, software 
"RTN","C9CDBLB",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS, 
"RTN","C9CDBLB",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.  
"RTN","C9CDBLB",13,0)
 ;See the License for the specific language governing permissions and 
"RTN","C9CDBLB",14,0)
 ;limitations under the License.
"RTN","C9CDBLB",15,0)
 Q ;no entry from top
"RTN","C9CDBLB",16,0)
RPC(C9CRET,WARD)
"RTN","C9CDBLB",17,0)
 ;C9CRET - return array
"RTN","C9CDBLB",18,0)
 ;WARD - name of the ward
"RTN","C9CDBLB",19,0)
 Q:$G(WARD)=""
"RTN","C9CDBLB",20,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CDBLB",21,0)
 N CX
"RTN","C9CDBLB",22,0)
 S CX=0
"RTN","C9CDBLB",23,0)
 N WARDIEN
"RTN","C9CDBLB",24,0)
 S WARDIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CDBLB",25,0)
 Q:WARDIEN'>0
"RTN","C9CDBLB",26,0)
 N PENDING
"RTN","C9CDBLB",27,0)
 S PENDING=$O(^ORD(100.01,"B","PENDING",0))
"RTN","C9CDBLB",28,0)
 Q:PENDING'>0
"RTN","C9CDBLB",29,0)
 N LDG ;lab display groups
"RTN","C9CDBLB",30,0)
 S LDG(5)="LAB"
"RTN","C9CDBLB",31,0)
 S LDG(6)="CHEMISTRY"
"RTN","C9CDBLB",32,0)
 S LDG(7)="HEMATOLOGY"
"RTN","C9CDBLB",33,0)
 S LDG(8)="MICROBIOLOGY"
"RTN","C9CDBLB",34,0)
 S LDG(23)="BLOOD BANK"
"RTN","C9CDBLB",35,0)
 S LDG(24)="ANATOMIC PATHOLOGY"
"RTN","C9CDBLB",36,0)
 S LDG(25)="ELECTRON MICROSCOPY"
"RTN","C9CDBLB",37,0)
 S LDG(26)="SURGICAL PATHOLOGY"
"RTN","C9CDBLB",38,0)
 S LDG(27)="AUTOPSY"
"RTN","C9CDBLB",39,0)
 S LDG(28)="CYTOLOGY"
"RTN","C9CDBLB",40,0)
 N DNOW
"RTN","C9CDBLB",41,0)
 S DNOW=$$NOW^XLFDT
"RTN","C9CDBLB",42,0)
 N DTODAY,DTIME,DTOM
"RTN","C9CDBLB",43,0)
 S DTODAY=DNOW\1
"RTN","C9CDBLB",44,0)
 S DTOM=$$FMADD^XLFDT(DTODAY,1)
"RTN","C9CDBLB",45,0)
 S DTIME=DNOW#1
"RTN","C9CDBLB",46,0)
 N PAT
"RTN","C9CDBLB",47,0)
 S PAT=0 F  S PAT=$O(^DPT("ACN",WARD,PAT)) Q:PAT'>0  D ;go through patients on the ward
"RTN","C9CDBLB",48,0)
 .N DGRP
"RTN","C9CDBLB",49,0)
 .S DGRP=0 F  S DGRP=$O(^OR(100,"AW",PAT_";DPT(",DGRP)) Q:DGRP'>0  D
"RTN","C9CDBLB",50,0)
 ..I $D(LDG(DGRP)) D
"RTN","C9CDBLB",51,0)
 ...N ORSTART
"RTN","C9CDBLB",52,0)
 ...S ORSTART=DTOM F  S ORSTART=$O(^OR(100,"AW",PAT_";DPT(",DGRP,ORSTART),-1) Q:((ORSTART'>0)!(ORSTART<DTODAY))  D
"RTN","C9CDBLB",53,0)
 ....Q:(ORSTART#1=.06) ;do not show labs due at 0600 for this module
"RTN","C9CDBLB",54,0)
 ....N ORIEN
"RTN","C9CDBLB",55,0)
 ....S ORIEN=0 F  S ORIEN=$O(^OR(100,"AW",PAT_";DPT(",DGRP,ORSTART,ORIEN)) Q:ORIEN'>0  D
"RTN","C9CDBLB",56,0)
 .....Q:$D(^OR(100,ORIEN,2)) ;has child orders
"RTN","C9CDBLB",57,0)
 .....N STATIEN
"RTN","C9CDBLB",58,0)
 .....S STATIEN=$P($G(^OR(100,ORIEN,3)),"^",3)
"RTN","C9CDBLB",59,0)
 .....I STATIEN=PENDING D
"RTN","C9CDBLB",60,0)
 ......N PATNAME
"RTN","C9CDBLB",61,0)
 ......S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CDBLB",62,0)
 ......N MRN
"RTN","C9CDBLB",63,0)
 ......S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CDBLB",64,0)
 ......N ORDABLE
"RTN","C9CDBLB",65,0)
 ......S ORDABLE=""
"RTN","C9CDBLB",66,0)
 ......N AX
"RTN","C9CDBLB",67,0)
 ......S AX=0 F  S AX=$O(^OR(100,ORIEN,.1,AX)) Q:AX'>0  D
"RTN","C9CDBLB",68,0)
 .......N ORDAIEN
"RTN","C9CDBLB",69,0)
 .......S ORDAIEN=$P($G(^OR(100,ORIEN,.1,AX,0)),"^",1)
"RTN","C9CDBLB",70,0)
 .......I ORDABLE="" S ORDABLE=$P($G(^ORD(101.43,ORDAIEN,0)),"^",1)
"RTN","C9CDBLB",71,0)
 .......E  S ORDABLE=ORDABLE_", "_$P($G(^ORD(101.43,ORDAIEN,0)),"^",1)
"RTN","C9CDBLB",72,0)
 ......N ACTION
"RTN","C9CDBLB",73,0)
 ......S ACTION=$P($G(^OR(100,ORIEN,3)),"^",7)
"RTN","C9CDBLB",74,0)
 ......S CX=CX+1
"RTN","C9CDBLB",75,0)
 ......S C9CRET(CX)=PATNAME_"^"_MRN_"^"_ORIEN_";"_ACTION_"^"_$$FMTE^XLFDT(ORSTART)_"^"_ORDABLE_"^"_"Pending"
"RTN","C9CDBLB",76,0)
 ......N COLOR
"RTN","C9CDBLB",77,0)
 ......I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)>43200 S COLOR="" ;more than 12 hours
"RTN","C9CDBLB",78,0)
 ......E  I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)>10800 S COLOR="Yellow" ;more than 3 hours
"RTN","C9CDBLB",79,0)
 ......E  I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)>0 S COLOR="Orange" ;less then 3 hours
"RTN","C9CDBLB",80,0)
 ......E  I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)<0 S COLOR="LightCoral" ;overdue
"RTN","C9CDBLB",81,0)
 ......E  S COLOR=""
"RTN","C9CDBLB",82,0)
 ......S C9CRET(CX)=C9CRET(CX)_"^"_COLOR_"^"_PAT
"RTN","C9CDBLB",83,0)
 Q
"RTN","C9CDBLB",84,0)
 
"RTN","C9CDBLB",85,0)
 
"RTN","C9CDBLB",86,0)
 
"RTN","C9CDBUV")
0^2^B12399205
"RTN","C9CDBUV",1,0)
C9CDBUV  ;CRH JHT 2019 -unverified orders for dashboard
"RTN","C9CDBUV",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CDBUV",3,0)
 ;
"RTN","C9CDBUV",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CDBUV",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CDBUV",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CDBUV",7,0)
 ;
"RTN","C9CDBUV",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CDBUV",9,0)
 ;
"RTN","C9CDBUV",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CDBUV",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CDBUV",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CDBUV",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CDBUV",14,0)
 ;limitations under the License.
"RTN","C9CDBUV",15,0)
 Q ;No entry from the top
"RTN","C9CDBUV",16,0)
RPC(C9CRET,RPCWARD) ;RPC=C9C UNVERIFIED FOR DASHBOARD
"RTN","C9CDBUV",17,0)
 N NVGROUP ;display group parent for display groups requiring nurse verification
"RTN","C9CDBUV",18,0)
 S NVGROUP=$O(^ORD(100.98,"B","REQUIRE NURSE VERIFICATION",0))
"RTN","C9CDBUV",19,0)
 Q:NVGROUP'>0
"RTN","C9CDBUV",20,0)
 Q:$G(RPCWARD)=""
"RTN","C9CDBUV",21,0)
 N C9CPOCU ;lab point of care user
"RTN","C9CDBUV",22,0)
 S C9CPOCU=$O(^VA(200,"B","LRLAB,POC",0))
"RTN","C9CDBUV",23,0)
 I C9CPOCU="" S C9CPOCU=0
"RTN","C9CDBUV",24,0)
 N DAYSPAST ;how far back do we want to go
"RTN","C9CDBUV",25,0)
 S DAYSPAST=-30 
"RTN","C9CDBUV",26,0)
 N REVLAST ;reverse fileman date to go back to
"RTN","C9CDBUV",27,0)
 S REVLAST=9999999-($$FMADD^XLFDT($$NOW^XLFDT,DAYSPAST))
"RTN","C9CDBUV",28,0)
 ;enumerate order statuses that we are interested in
"RTN","C9CDBUV",29,0)
 N SIEN
"RTN","C9CDBUV",30,0)
 N OSTATS
"RTN","C9CDBUV",31,0)
 S SIEN=$O(^ORD(100.01,"B","ACTIVE",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",32,0)
 S SIEN=$O(^ORD(100.01,"B","DISCONTINUED",0)) I SIEN>0 S OSTATS(SIEN)="" 
"RTN","C9CDBUV",33,0)
 S SIEN=$O(^ORD(100.01,"B","HOLD",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",34,0)
 S SIEN=$O(^ORD(100.01,"B","FLAGGED",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",35,0)
 S SIEN=$O(^ORD(100.01,"B","PENDING",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",36,0)
 S SIEN=$O(^ORD(100.01,"B","SCHEDULED",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",37,0)
 S SIEN=$O(^ORD(100.01,"B","PARTIAL RESULTS",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",38,0)
 S SIEN=$O(^ORD(100.01,"B","RENEWED",0)) I SIEN>0 S OSTATS(SIEN)=""
"RTN","C9CDBUV",39,0)
 N CNT
"RTN","C9CDBUV",40,0)
 S CNT=0
"RTN","C9CDBUV",41,0)
 N PAT
"RTN","C9CDBUV",42,0)
 S PAT=0 F  S PAT=$O(^DPT("ACN",RPCWARD,PAT)) Q:PAT'>0  D ;go through patients on ward
"RTN","C9CDBUV",43,0)
 .N AX ;order date reverse fileman
"RTN","C9CDBUV",44,0)
 .S AX=0 F  S AX=$O(^OR(100,"ACT",PAT_";DPT(",AX)) Q:((AX'>0)!(AX>REVLAST))  D
"RTN","C9CDBUV",45,0)
 ..N DIEN ;display group ien
"RTN","C9CDBUV",46,0)
 ..S DIEN=0 F  S DIEN=$O(^OR(100,"ACT",PAT_";DPT(",AX,DIEN)) Q:DIEN'>0  D
"RTN","C9CDBUV",47,0)
 ...I $O(^ORD(100.98,NVGROUP,1,"B",DIEN,0))>0 D ;if member of the nurse verification group parent D
"RTN","C9CDBUV",48,0)
 ....N BX ;order number
"RTN","C9CDBUV",49,0)
 ....S BX=0 F  S BX=$O(^OR(100,"ACT",PAT_";DPT(",AX,DIEN,BX)) Q:BX'>0  D
"RTN","C9CDBUV",50,0)
 .....Q:$P($G(^OR(100,BX,0)),"^",6)=C9CPOCU ;this is a lab point of care order
"RTN","C9CDBUV",51,0)
 .....N STATIEN 
"RTN","C9CDBUV",52,0)
 .....S STATIEN=$P($G(^OR(100,BX,3)),"^",3) 
"RTN","C9CDBUV",53,0)
 .....I $D(OSTATS(STATIEN)) D ;one of the statuses we want to show
"RTN","C9CDBUV",54,0)
 ......N VERIFIED
"RTN","C9CDBUV",55,0)
 ......S VERIFIED=0
"RTN","C9CDBUV",56,0)
 ......N OACT
"RTN","C9CDBUV",57,0)
 ......S OACT=0
"RTN","C9CDBUV",58,0)
 ......I $D(^OR(100,BX,8)) D
"RTN","C9CDBUV",59,0)
 .......S OACT=$O(^OR(100,BX,8,99999999),-1) ;last order action
"RTN","C9CDBUV",60,0)
 .......I OACT>0 D
"RTN","C9CDBUV",61,0)
 ........I $P($G(^OR(100,BX,8,OACT,0)),"^",9)>0 D
"RTN","C9CDBUV",62,0)
 .........S VERIFIED=1
"RTN","C9CDBUV",63,0)
 ......Q:VERIFIED>0 ;this order had been nurse verified
"RTN","C9CDBUV",64,0)
 ......N STAT 
"RTN","C9CDBUV",65,0)
 ......S STAT=$P($G(^ORD(100.01,STATIEN,0)),"^",1) 
"RTN","C9CDBUV",66,0)
 ......N DGROUP 
"RTN","C9CDBUV",67,0)
 ......S DGROUP=$P($G(^ORD(100.98,DIEN,0)),"^",1) 
"RTN","C9CDBUV",68,0)
 ......N PATNAME
"RTN","C9CDBUV",69,0)
 ......S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CDBUV",70,0)
 ......N MRN
"RTN","C9CDBUV",71,0)
 ......S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CDBUV",72,0)
 ......N EXTDATE ;order date in external format
"RTN","C9CDBUV",73,0)
 ......S EXTDATE=$$FMTE^XLFDT(9999999-AX)
"RTN","C9CDBUV",74,0)
 ......S C9CRET($I(CNT))=PAT_"^"_PATNAME_"^"_MRN_"^"_EXTDATE_"^"_BX_"^"_STAT_"^"_DGROUP
"RTN","C9CDBUV",75,0)
 Q
"RTN","C9CDIS")
0^3^B29649805
"RTN","C9CDIS",1,0)
C9CDIS ;CRH JHT 2019 - check for missing discharge summaries
"RTN","C9CDIS",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CDIS",3,0)
 ;
"RTN","C9CDIS",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CDIS",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CDIS",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CDIS",7,0)
 ;
"RTN","C9CDIS",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CDIS",9,0)
 ;
"RTN","C9CDIS",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CDIS",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CDIS",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CDIS",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CDIS",14,0)
 ;limitations under the License.
"RTN","C9CDIS",15,0)
 Q ;no entry from top
"RTN","C9CDIS",16,0)
RPC(C9CRET) ;RPC=C9C MISSING DSCG SUMMARIES
"RTN","C9CDIS",17,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CDIS",18,0)
 N NUMDAYS
"RTN","C9CDIS",19,0)
 S NUMDAYS=60 ;number of days in the past to look for discharges
"RTN","C9CDIS",20,0)
 ;find correct title IEN
"RTN","C9CDIS",21,0)
 ;note: can't just use "B" since there is also a class called discharge summary
"RTN","C9CDIS",22,0)
 N TIEN ;for DISCHARGE SUMMARY
"RTN","C9CDIS",23,0)
 S TIEN=0
"RTN","C9CDIS",24,0)
 N TX
"RTN","C9CDIS",25,0)
 S TX=0 F  S TX=$O(^TIU(8925.1,"B","DISCHARGE SUMMARY",TX)) Q:((TX'>0)!(TIEN>0))  D
"RTN","C9CDIS",26,0)
 .I $P($G(^TIU(8925.1,TX,0)),"^",4)="DOC" D
"RTN","C9CDIS",27,0)
 ..S TIEN=TX
"RTN","C9CDIS",28,0)
 N TIEN2 ;for CRH DISCHARGE SUMMARY
"RTN","C9CDIS",29,0)
 S TIEN2=0
"RTN","C9CDIS",30,0)
 S TX=0 F  S TX=$O(^TIU(8925.1,"B","CRH DISCHARGE SUMMARY",TX)) Q:((TX'>0)!(TIEN2>0))  D
"RTN","C9CDIS",31,0)
 .I $P($G(^TIU(8925.1,TX,0)),"^",4)="DOC" D
"RTN","C9CDIS",32,0)
 ..S TIEN2=TX
"RTN","C9CDIS",33,0)
 Q:((TIEN'>0)&(TIEN2'>0))
"RTN","C9CDIS",34,0)
 N CIEN ;need to be sure note is in completed status so will need pointer value
"RTN","C9CDIS",35,0)
 S CIEN=$O(^TIU(8925.6,"B","COMPLETED",0)) ;note status
"RTN","C9CDIS",36,0)
 Q:CIEN'>0 
"RTN","C9CDIS",37,0)
 N CNT
"RTN","C9CDIS",38,0)
 S CNT=0
"RTN","C9CDIS",39,0)
 N DDATE
"RTN","C9CDIS",40,0)
 S DDATE=$$FMADD^XLFDT($$NOW^XLFDT,-NUMDAYS)
"RTN","C9CDIS",41,0)
 F  S DDATE=$O(^DGPM("AMV3",DDATE)) Q:DDATE'>0  D
"RTN","C9CDIS",42,0)
 .N PAT
"RTN","C9CDIS",43,0)
 .S PAT=0 F  S PAT=$O(^DGPM("AMV3",DDATE,PAT)) Q:PAT'>0  D
"RTN","C9CDIS",44,0)
 ..N REC
"RTN","C9CDIS",45,0)
 ..S REC=0 F  S REC=$O(^DGPM("AMV3",DDATE,PAT,REC)) Q:REC'>0  D
"RTN","C9CDIS",46,0)
 ...N ADMPTR ;associated admission movement pointer
"RTN","C9CDIS",47,0)
 ...S ADMPTR=$P($G(^DGPM(REC,0)),"^",14)
"RTN","C9CDIS",48,0)
 ...Q:ADMPTR'>0
"RTN","C9CDIS",49,0)
 ...;check the ward to be sure the admission was to DUZ(2) facility
"RTN","C9CDIS",50,0)
 ...N WARDPTR
"RTN","C9CDIS",51,0)
 ...S WARDPTR=$P($G(^DGPM(ADMPTR,0)),"^",6)
"RTN","C9CDIS",52,0)
 ...Q:WARDPTR'>0
"RTN","C9CDIS",53,0)
 ...N DIVPTR ;pointer to file 40.8
"RTN","C9CDIS",54,0)
 ...S DIVPTR=$P($G(^DIC(42,WARDPTR,0)),"^",11)
"RTN","C9CDIS",55,0)
 ...Q:DIVPTR'>0
"RTN","C9CDIS",56,0)
 ...N INSTPTR
"RTN","C9CDIS",57,0)
 ...S INSTPTR=$P($G(^DG(40.8,DIVPTR,0)),"^",7)
"RTN","C9CDIS",58,0)
 ...Q:INSTPTR'>0
"RTN","C9CDIS",59,0)
 ...Q:INSTPTR'=DUZ(2) ;this admission movement not to this facility
"RTN","C9CDIS",60,0)
 ...N MOVEVPTR ;admission movement visit pointer
"RTN","C9CDIS",61,0)
 ...N NOTEOK ;will be set if the note is for the correct visit
"RTN","C9CDIS",62,0)
 ...S NOTEOK=0
"RTN","C9CDIS",63,0)
 ...N NDATE ;inverse note date for note ien being checked
"RTN","C9CDIS",64,0)
 ...;check title CRH DISCHARGE SUMMARY
"RTN","C9CDIS",65,0)
 ...N VRET D VST(.VRET,PAT,$P($G(^DGPM(ADMPTR,0)),"^",1)) ;W !,PAT_"^"_$G(VRET)
"RTN","C9CDIS",66,0)
 ...S MOVEVPTR=+$G(VRET)
"RTN","C9CDIS",67,0)
 ...Q:MOVEVPTR'>0 ;no visit pointer
"RTN","C9CDIS",68,0)
 ...S NDATE=0 F  S NDATE=$O(^TIU(8925,"APT",PAT,TIEN2,CIEN,NDATE)) Q:((NDATE'>0)!(NOTEOK>0))  D
"RTN","C9CDIS",69,0)
 ....N NIEN
"RTN","C9CDIS",70,0)
 ....S NIEN=0 F  S NIEN=$O(^TIU(8925,"APT",PAT,TIEN2,CIEN,NDATE,NIEN)) Q:((NIEN'>0)!(NOTEOK>0))  D
"RTN","C9CDIS",71,0)
 .....N NOTEVPTR ;note visit pointer
"RTN","C9CDIS",72,0)
 .....S NOTEVPTR=$P($G(^TIU(8925,NIEN,0)),"^",3)
"RTN","C9CDIS",73,0)
 .....Q:NOTEVPTR="" ;no visit pointer
"RTN","C9CDIS",74,0)
 .....I (MOVEVPTR=NOTEVPTR) D
"RTN","C9CDIS",75,0)
 ......S NOTEOK=1
"RTN","C9CDIS",76,0)
 .....E  D
"RTN","C9CDIS",77,0)
 ......N MOVD,NOTD
"RTN","C9CDIS",78,0)
 ......S MOVD=$P($G(^AUPNVSIT(MOVEVPTR,0)),"^",1)
"RTN","C9CDIS",79,0)
 ......S NOTD=$P($G(^AUPNVSIT(NOTEVPTR,0)),"^",1)
"RTN","C9CDIS",80,0)
 ......N FDF
"RTN","C9CDIS",81,0)
 ......S FDF=$$FMDIFF^XLFDT(MOVD,NOTD)
"RTN","C9CDIS",82,0)
 ......I ((FDF>-2)&(FDF<2)) D
"RTN","C9CDIS",83,0)
 .......S NOTEOK=1
"RTN","C9CDIS",84,0)
 ...I NOTEOK'>0 D ;check title DISCHARGE SUMMARY
"RTN","C9CDIS",85,0)
 ....S NDATE=0 F  S NDATE=$O(^TIU(8925,"APT",PAT,TIEN,CIEN,NDATE)) Q:((NDATE'>0)!(NOTEOK>0))  D
"RTN","C9CDIS",86,0)
 .....N NIEN
"RTN","C9CDIS",87,0)
 .....S NIEN=0 F  S NIEN=$O(^TIU(8925,"APT",PAT,TIEN,CIEN,NDATE,NIEN)) Q:((NIEN'>0)!(NOTEOK>0))  D
"RTN","C9CDIS",88,0)
 ......N NOTEVPTR ;note visit pointer
"RTN","C9CDIS",89,0)
 ......S NOTEVPTR=$P($G(^TIU(8925,NIEN,0)),"^",3)
"RTN","C9CDIS",90,0)
 ......Q:NOTEVPTR="" ;no visit pointer
"RTN","C9CDIS",91,0)
 ......I MOVEVPTR=NOTEVPTR D
"RTN","C9CDIS",92,0)
 .......S NOTEOK=1
"RTN","C9CDIS",93,0)
  .....E  D
"RTN","C9CDIS",94,0)
 ......N MOVD,NOTD
"RTN","C9CDIS",95,0)
 ......S MOVD=$P($G(^AUPNVSIT(MOVEVPTR,0)),"^",1)
"RTN","C9CDIS",96,0)
 ......S NOTD=$P($G(^AUPNVSIT(NOTEVPTR,0)),"^",1)
"RTN","C9CDIS",97,0)
 ......N FDF
"RTN","C9CDIS",98,0)
 ......S FDF=$$FMDIFF^XLFDT(MOVD,NOTD)
"RTN","C9CDIS",99,0)
 ......I ((FDF>-2)&(FDF<2)) D
"RTN","C9CDIS",100,0)
 .......S NOTEOK=1
"RTN","C9CDIS",101,0)
 ...I NOTEOK'>0 D
"RTN","C9CDIS",102,0)
 ....N PATNAME
"RTN","C9CDIS",103,0)
 ....S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CDIS",104,0)
 ....N MRN
"RTN","C9CDIS",105,0)
 ....S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CDIS",106,0)
 ....N COLOR
"RTN","C9CDIS",107,0)
 ....S COLOR="White"
"RTN","C9CDIS",108,0)
 ....I $$FMDIFF^XLFDT($$NOW^XLFDT,DDATE)>15 D
"RTN","C9CDIS",109,0)
 .....S COLOR="LightCoral"
"RTN","C9CDIS",110,0)
 ....E  I $$FMDIFF^XLFDT($$NOW^XLFDT,DDATE)>14 D
"RTN","C9CDIS",111,0)
 .....S COLOR="Yellow"
"RTN","C9CDIS",112,0)
 ....I $F(PATNAME,"ZZ")'=3 D ;no ZZ (test) patients
"RTN","C9CDIS",113,0)
 .....S C9CRET($I(CNT))=PAT_"^"_PATNAME_"^"_MRN_"^"_$$FMTE^XLFDT(DDATE)_"^"_COLOR
"RTN","C9CDIS",114,0)
 Q
"RTN","C9CDIS",115,0)
GETADMS(RET,PATDFN) ;get patient admissions
"RTN","C9CDIS",116,0)
 N CNT
"RTN","C9CDIS",117,0)
 S CNT=0
"RTN","C9CDIS",118,0)
 N TIM,MOV,X0,MTIM,XTYP,XLOC,HLOC,EARLY,DONE
"RTN","C9CDIS",119,0)
 S DONE=0
"RTN","C9CDIS",120,0)
 S EARLY="2580302.0001" 
"RTN","C9CDIS",121,0)
 S TIM="" F  S TIM=$O(^DGPM("ATID1",PATDFN,TIM)) Q:TIM'>0  D  Q:DONE
"RTN","C9CDIS",122,0)
 .S MOV=0  F  S MOV=$O(^DGPM("ATID1",PATDFN,TIM,MOV)) Q:MOV'>0  D  Q:DONE
"RTN","C9CDIS",123,0)
 ..S X0=^DGPM(MOV,0),MTIM=$P(X0,U)
"RTN","C9CDIS",124,0)
 ..I MTIM<EARLY S DONE=1 Q
"RTN","C9CDIS",125,0)
 ..S XTYP=$P($G(^DG(405.1,+$P(X0,U,4),0)),U,1)
"RTN","C9CDIS",126,0)
 ..S XLOC=$P($G(^DIC(42,+$P(X0,U,6),0)),U,1),HLOC=+$G(^(44))
"RTN","C9CDIS",127,0)
 ..S RET($I(CNT))="I;"_MTIM_";"_HLOC_U_MTIM_U_"Inpatient Stay"_U_XLOC_U_XTYP
"RTN","C9CDIS",128,0)
 Q
"RTN","C9CDIS",129,0)
GETENC(PAT,ADATE,LOCPTR) ;get visit
"RTN","C9CDIS",130,0)
 Q:$G(PAT)'>0 -1
"RTN","C9CDIS",131,0)
 Q:$G(ADATE)'>0 -1
"RTN","C9CDIS",132,0)
 Q:$G(LOCPTR)'>0 -1
"RTN","C9CDIS",133,0)
 Q $$GETENC^PXAPI(PAT,ADATE,LOCPTR)
"RTN","C9CDIS",134,0)
VST(RET,PATDFN,ADATE) ;return visit pointer(s) for admission date
"RTN","C9CDIS",135,0)
 Q:$G(PATDFN)'>0 -1
"RTN","C9CDIS",136,0)
 N ARET
"RTN","C9CDIS",137,0)
 D GETADMS(.ARET,PATDFN)
"RTN","C9CDIS",138,0)
 N FOUND
"RTN","C9CDIS",139,0)
 S FOUND=0
"RTN","C9CDIS",140,0)
 N AX
"RTN","C9CDIS",141,0)
 S AX=0 F  S AX=$O(ARET(AX)) Q:((AX'>0)!(FOUND>0))  D
"RTN","C9CDIS",142,0)
 .N THISDATE
"RTN","C9CDIS",143,0)
 .S THISDATE=$P(ARET(AX),";",2)
"RTN","C9CDIS",144,0)
 .I THISDATE=ADATE D
"RTN","C9CDIS",145,0)
 ..N LOC
"RTN","C9CDIS",146,0)
 ..S LOC=+$P(ARET(AX),";",3)
"RTN","C9CDIS",147,0)
 ..Q:LOC'>0
"RTN","C9CDIS",148,0)
 ..S FOUND=1
"RTN","C9CDIS",149,0)
 ..S RET=$$GETENC(PATDFN,THISDATE,LOC)
"RTN","C9CDIS",150,0)
 Q
"RTN","C9CDIS",151,0)
 
"RTN","C9CEXOR")
0^4^B7315294
"RTN","C9CEXOR",1,0)
C9CEXOR  ;CRH JHT 2019 -expiring orders for dashboard
"RTN","C9CEXOR",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CEXOR",3,0)
 ;
"RTN","C9CEXOR",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CEXOR",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CEXOR",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CEXOR",7,0)
 ;
"RTN","C9CEXOR",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CEXOR",9,0)
 ;
"RTN","C9CEXOR",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CEXOR",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CEXOR",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CEXOR",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CEXOR",14,0)
 ;limitations under the License.
"RTN","C9CEXOR",15,0)
 Q ;No entry from the top
"RTN","C9CEXOR",16,0)
RPC(C9CRET,TEAM) ;RPC=C9C EXPIRING FOR DASHBOARD
"RTN","C9CEXOR",17,0)
 Q:$G(TEAM)=""
"RTN","C9CEXOR",18,0)
 Q:$G(DUZ(2))=""
"RTN","C9CEXOR",19,0)
 ;get patients on the team DFN^PATIENT NAME
"RTN","C9CEXOR",20,0)
 N TEAMIEN
"RTN","C9CEXOR",21,0)
 S TEAMIEN=$P($G(TEAM),":",1)
"RTN","C9CEXOR",22,0)
 Q:TEAMIEN'>0
"RTN","C9CEXOR",23,0)
 N TPATS
"RTN","C9CEXOR",24,0)
 D TEAMPTS^ORQPTQ1(.TPATS,TEAMIEN)
"RTN","C9CEXOR",25,0)
 Q:'$D(TPATS(1))
"RTN","C9CEXOR",26,0)
 Q:TPATS(1)="^No patients found."
"RTN","C9CEXOR",27,0)
 ;only need the DFNs
"RTN","C9CEXOR",28,0)
 N TEAMPATS
"RTN","C9CEXOR",29,0)
 N TD
"RTN","C9CEXOR",30,0)
 S TD=0 F  S TD=$O(TPATS(TD)) Q:TD'>0  D
"RTN","C9CEXOR",31,0)
 .I +TPATS(TD)>0 D
"RTN","C9CEXOR",32,0)
 ..S TEAMPATS(+TPATS(TD))=""
"RTN","C9CEXOR",33,0)
 N DLAST ;last date to show
"RTN","C9CEXOR",34,0)
 N DELTA ;number of days into the future
"RTN","C9CEXOR",35,0)
 S DELTA=10 ;5 CRH JHT 2019 changed from five days to 10
"RTN","C9CEXOR",36,0)
 S DLAST=$$FMADD^XLFDT($$NOW^XLFDT,DELTA)
"RTN","C9CEXOR",37,0)
 N DSTART ;orders must have been placed no later than this date
"RTN","C9CEXOR",38,0)
 S DSTART=$$FMADD^XLFDT($$NOW^XLFDT,-30)
"RTN","C9CEXOR",39,0)
 N CNT
"RTN","C9CEXOR",40,0)
 S CNT=0
"RTN","C9CEXOR",41,0)
 N AX 
"RTN","C9CEXOR",42,0)
 S AX=0 F  S AX=$O(^OR(100,"AE",AX)) Q:((AX'>0)!(AX>DLAST))  D
"RTN","C9CEXOR",43,0)
 .N ORNO 
"RTN","C9CEXOR",44,0)
 .S ORNO=0 F  S ORNO=$O(^OR(100,"AE",AX,ORNO)) Q:ORNO'>0  D
"RTN","C9CEXOR",45,0)
 ..N START
"RTN","C9CEXOR",46,0)
 ..S START=$P($G(^OR(100,ORNO,0)),"^",8)
"RTN","C9CEXOR",47,0)
 ..Q:(START>DSTART) ;uncomment if we want only long term orders
"RTN","C9CEXOR",48,0)
 ..N PATDFN
"RTN","C9CEXOR",49,0)
 ..S PATDFN=+$P($G(^OR(100,ORNO,0)),"^",2)
"RTN","C9CEXOR",50,0)
 ..Q:'$D(TEAMPATS(PATDFN)) ;not on user's chosen team
"RTN","C9CEXOR",51,0)
 ..N WARD
"RTN","C9CEXOR",52,0)
 ..S WARD=$P($G(^DPT(PATDFN,.1)),"^",1)
"RTN","C9CEXOR",53,0)
 ..N STATIEN
"RTN","C9CEXOR",54,0)
 ..S STATIEN=$P($G(^OR(100,ORNO,3)),"^",3)
"RTN","C9CEXOR",55,0)
 ..N STAT
"RTN","C9CEXOR",56,0)
 ..S STAT=""
"RTN","C9CEXOR",57,0)
 ..I STATIEN>0 D
"RTN","C9CEXOR",58,0)
 ...S STAT=$P($G(^ORD(100.01,STATIEN,0)),"^",1)
"RTN","C9CEXOR",59,0)
 ..N DIEN
"RTN","C9CEXOR",60,0)
 ..S DIEN=$P($G(^OR(100,ORNO,0)),"^",11)
"RTN","C9CEXOR",61,0)
 ..N DGROUP
"RTN","C9CEXOR",62,0)
 ..S DGROUP=""
"RTN","C9CEXOR",63,0)
 ..I DIEN>0 D
"RTN","C9CEXOR",64,0)
 ...S DGROUP=$P($G(^ORD(100.98,DIEN,0)),"^",1)
"RTN","C9CEXOR",65,0)
 ..N PATNAME
"RTN","C9CEXOR",66,0)
 ..S PATNAME=""
"RTN","C9CEXOR",67,0)
 ..N MRN
"RTN","C9CEXOR",68,0)
 ..S MRN=""
"RTN","C9CEXOR",69,0)
 ..I PATDFN>0 D
"RTN","C9CEXOR",70,0)
 ...S PATNAME=$P($G(^DPT(PATDFN,0)),"^",1)
"RTN","C9CEXOR",71,0)
 ...S MRN=$P($G(^DPT(PATDFN,"MSCD")),"^",1)
"RTN","C9CEXOR",72,0)
 ..S C9CRET($I(CNT))=PATDFN_"^"_PATNAME_"^"_MRN_"^"_WARD_"^"_$$FMTE^XLFDT(START)_"^"_$$FMTE^XLFDT(AX)_"^"_ORNO_"^"_STAT_"^"_DGROUP
"RTN","C9CEXOR",73,0)
 Q
"RTN","C9CFCAST")
0^5^B2407679
"RTN","C9CFCAST",1,0)
C9CFCAST ;module RPCs for C9C DASHBOARD MODULE Notes Due Forecast By Team
"RTN","C9CFCAST",2,0)
 ; Date fix, 6 places, by RMS for CRH 20191015;;;;;Build 2
"RTN","C9CFCAST",3,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina]
"RTN","C9CFCAST",4,0)
 ;
"RTN","C9CFCAST",5,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CFCAST",6,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CFCAST",7,0)
 ;You may obtain a copy of the License at
"RTN","C9CFCAST",8,0)
 ;
"RTN","C9CFCAST",9,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CFCAST",10,0)
 ;
"RTN","C9CFCAST",11,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CFCAST",12,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CFCAST",13,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CFCAST",14,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CFCAST",15,0)
 ;limitations under the License.
"RTN","C9CFCAST",16,0)
 Q ;no entry from top
"RTN","C9CFCAST",17,0)
RPCND(C9CRET,TEAM,FILTERS) ;get notes due data
"RTN","C9CFCAST",18,0)
 ;C9CRET - return array
"RTN","C9CFCAST",19,0)
 ;TEAM - team ien: team name
"RTN","C9CFCAST",20,0)
 ;FILTERS - zero-based list of TIU DOCUMENT DEFINITION ien^Name to include in results
"RTN","C9CFCAST",21,0)
 ;Patient^Note Title^Due^Ward
"RTN","C9CFCAST",22,0)
 Q:$G(TEAM)=""
"RTN","C9CFCAST",23,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CFCAST",24,0)
 N C9CI
"RTN","C9CFCAST",25,0)
 S C9CI=0
"RTN","C9CFCAST",26,0)
 I $G(FILTERS(0))="" D ;no filters so use all titles that have rules
"RTN","C9CFCAST",27,0)
 .;First get all titles with rules engine rules defined
"RTN","C9CFCAST",28,0)
 .N TITLES
"RTN","C9CFCAST",29,0)
 .D RPCAF^C9CMODNT(.TITLES)
"RTN","C9CFCAST",30,0)
 .;remove trailing spaces since some titles seem to have them
"RTN","C9CFCAST",31,0)
 .N TX
"RTN","C9CFCAST",32,0)
 .S TX=0 F  S TX=$O(TITLES(TX)) Q:TX'>0  D
"RTN","C9CFCAST",33,0)
 ..N TL
"RTN","C9CFCAST",34,0)
 ..S TL=$L(TITLES(TX))
"RTN","C9CFCAST",35,0)
 ..I $E(TITLES(TX),TL)=" " S TITLES(TX)=$E(TITLES(TX),1,TL-1)
"RTN","C9CFCAST",36,0)
 .N RP
"RTN","C9CFCAST",37,0)
 .S RP=0 F  S RP=$O(TITLES(RP)) Q:RP'>0  D
"RTN","C9CFCAST",38,0)
 ..S FILTERS(RP-1)=TITLES(RP)
"RTN","C9CFCAST",39,0)
 Q:($G(FILTERS(0)))=""
"RTN","C9CFCAST",40,0)
 ;For each of these titles compare ward patients against cohort rules, then ward, then unit, then hospital
"RTN","C9CFCAST",41,0)
 N CIEN
"RTN","C9CFCAST",42,0)
 S CIEN=$O(^TIU(8925.6,"B","COMPLETED",0)) ;note status
"RTN","C9CFCAST",43,0)
 Q:CIEN'>0        
"RTN","C9CFCAST",44,0)
 ;get patients on the team DFN^PATIENT NAME
"RTN","C9CFCAST",45,0)
CHKTEAM
"RTN","C9CFCAST",46,0)
 N TEAMIEN
"RTN","C9CFCAST",47,0)
 S TEAMIEN=$P($G(TEAM),":",1)
"RTN","C9CFCAST",48,0)
 Q:TEAMIEN'>0
"RTN","C9CFCAST",49,0)
 N TPATS
"RTN","C9CFCAST",50,0)
 D TEAMPTS^ORQPTQ1(.TPATS,TEAMIEN)
"RTN","C9CFCAST",51,0)
 Q:'$D(TPATS(1))
"RTN","C9CFCAST",52,0)
 Q:TPATS(1)="^No patients found."
"RTN","C9CFCAST",53,0)
 ;only need the DFNs
"RTN","C9CFCAST",54,0)
 N TD
"RTN","C9CFCAST",55,0)
 S TD=0 F  S TD=$O(TPATS(TD)) Q:TD'>0  D
"RTN","C9CFCAST",56,0)
 .S TPATS(TD)=+TPATS(TD)
"RTN","C9CFCAST",57,0)
 N DTNOW ;datetime now
"RTN","C9CFCAST",58,0)
 S DTNOW=$$NOW^XLFDT
"RTN","C9CFCAST",59,0)
 N ENDDATE
"RTN","C9CFCAST",60,0)
 N FOREDAYS ;how many days in the future to forecast
"RTN","C9CFCAST",61,0)
 S FOREDAYS=30 ;we're forecasting 30 days
"RTN","C9CFCAST",62,0)
 S ENDDATE=$$FMADD^XLFDT(DTNOW,FOREDAYS) ;this module forecast FOREDAYS out
"RTN","C9CFCAST",63,0)
 N YEAR ;year
"RTN","C9CFCAST",64,0)
 S YEAR=$E(DTNOW,2,3)
"RTN","C9CFCAST",65,0)
 N CENTURY
"RTN","C9CFCAST",66,0)
 S CENTURY=$E(DTNOW,1,1)
"RTN","C9CFCAST",67,0)
 N DHMS; month day hour minutes seconds
"RTN","C9CFCAST",68,0)
 S DHMS=$E(DTNOW,4,99)
"RTN","C9CFCAST",69,0)
 ;Now loop through the patients on the selected team
"RTN","C9CFCAST",70,0)
 N PX
"RTN","C9CFCAST",71,0)
 S PX=0 F  S PX=$O(TPATS(PX)) Q:PX'>0  D        
"RTN","C9CFCAST",72,0)
 .N PAT
"RTN","C9CFCAST",73,0)
 .S PAT=TPATS(PX)
"RTN","C9CFCAST",74,0)
 .Q:PAT'>0
"RTN","C9CFCAST",75,0)
 .;get the patient's ward and unit
"RTN","C9CFCAST",76,0)
 .N WARD
"RTN","C9CFCAST",77,0)
 .N WARDIEN
"RTN","C9CFCAST",78,0)
 .S WARDIEN=-1
"RTN","C9CFCAST",79,0)
 .S WARD=$P($G(^DPT(PAT,.1)),"^",1)
"RTN","C9CFCAST",80,0)
 .I WARD'="" D ;must be an inpatient 
"RTN","C9CFCAST",81,0)
 ..S WARDIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CFCAST",82,0)
 .I WARDIEN=-1 S WARD="Outpatient"
"RTN","C9CFCAST",83,0)
 .N FX	
"RTN","C9CFCAST",84,0)
 .N UNIT ;bedsection in file 42
"RTN","C9CFCAST",85,0)
 .S UNIT="Undefined"
"RTN","C9CFCAST",86,0)
 .I WARDIEN>0 D
"RTN","C9CFCAST",87,0)
 ..S UNIT=$P($G(^DIC(42,WARDIEN,0)),"^",2)
"RTN","C9CFCAST",88,0)
 .N DIV
"RTN","C9CFCAST",89,0)
 .S DIV=DUZ(2)
"RTN","C9CFCAST",90,0)
 .Q:DIV'>0
"RTN","C9CFCAST",91,0)
 .S FX="" F  S FX=$O(FILTERS(FX)) Q:FX=""  D ;if included in filters (this is a zero-based array)
"RTN","C9CFCAST",92,0)
 ..;go through each formula
"RTN","C9CFCAST",93,0)
 ..;find this title in C9C RULES ENGINE FILE
"RTN","C9CFCAST",94,0)
 ..N OFFSET ;CRH JHT 2019 - for override logic
"RTN","C9CFCAST",95,0)
 ..S OFFSET=0 ;CRH JHT 2019 - for override logic
"RTN","C9CFCAST",96,0)
 ..N TITLIEN,TITLNAME
"RTN","C9CFCAST",97,0)
 ..S TITLIEN=$P(FILTERS(FX),"^",1)
"RTN","C9CFCAST",98,0)
 ..S TITLNAME=$P(FILTERS(FX),"^",2)
"RTN","C9CFCAST",99,0)
 ..N REIEN S REIEN=$O(^C9C(300890,"B",TITLIEN_";TIU(8925.1,",0))
"RTN","C9CFCAST",100,0)
 ..I (REIEN>0) I ($P($G(^C9C(300890,REIEN,4)),"^",1)'>0) D ;not inactive
"RTN","C9CFCAST",101,0)
 ...;check for required health factor
"RTN","C9CFCAST",102,0)
 ...N HFACTIEN ;health factor check
"RTN","C9CFCAST",103,0)
 ...S HFACTIEN=$P($G(^C9C(300890,REIEN,5)),"^",1) ;health factor check
"RTN","C9CFCAST",104,0)
 ...;check for reminder cohort
"RTN","C9CFCAST",105,0)
 ...N REMIEN
"RTN","C9CFCAST",106,0)
 ...S REMIEN=$P($G(^C9C(300890,REIEN,6)),"^",1) ;reminder cohort to check
"RTN","C9CFCAST",107,0)
 ...N DEFARR
"RTN","C9CFCAST",108,0)
 ...N RESOLU
"RTN","C9CFCAST",109,0)
 ...S RESOLU=1 ;assume in cohort unless proven otherwise below
"RTN","C9CFCAST",110,0)
 ...N CLEVEL ;cohort level, 0=no cohort, 1=in cohort, 2=not in cohort ;mar 3,2020
"RTN","C9CFCAST",111,0)
 ...S CLEVEL=0 ;start by assuming no cohort ;mar 3,2020
"RTN","C9CFCAST",112,0)
 ...I REMIEN>0 D
"RTN","C9CFCAST",113,0)
 ....S CLEVEL=1 ;start by assuming in cohort ;mar 3,2020
"RTN","C9CFCAST",114,0)
 ....N DATE ;must be newed but not populated to return current value
"RTN","C9CFCAST",115,0)
 ....N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CFCAST",116,0)
 ....S PXRMDEBG=1
"RTN","C9CFCAST",117,0)
 ....D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CFCAST",118,0)
 ....N FIEVAL
"RTN","C9CFCAST",119,0)
 ....D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CFCAST",120,0)
 ....I $G(PXRMID)'="" D
"RTN","C9CFCAST",121,0)
 .....N RESULT
"RTN","C9CFCAST",122,0)
 .....S RESULT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CFCAST",123,0)
 .....I RESULT=0 D
"RTN","C9CFCAST",124,0)
 ......S RESOLU=0
"RTN","C9CFCAST",125,0)
 ......S CLEVEL=2 ;not in cohort ;mar 3,2020
"RTN","C9CFCAST",126,0)
 ......;check to see if we need to process pass-through reminders anyway
"RTN","C9CFCAST",127,0)
 ......I $P($G(^C9C(300890,REIEN,7)),"^",1)>0 D
"RTN","C9CFCAST",128,0)
 .......S RESOLU=2 ;yes, process pass-thru rules only
"RTN","C9CFCAST",129,0)
 .....K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CFCAST",130,0)
 ...Q:RESOLU=0 ;patient not in reminder cohort for this title
"RTN","C9CFCAST",131,0)
 ...N PTONLY
"RTN","C9CFCAST",132,0)
 ...S PTONLY=0
"RTN","C9CFCAST",133,0)
 ...I RESOLU=2 S PTONLY=1 ;pass-throughs only
"RTN","C9CFCAST",134,0)
 ...;see if any of the rules involve special orderable item cohorts as this is the most granular case
"RTN","C9CFCAST",135,0)
 ...N OCOHORT ;FORMULA IEN^RULE IEN^ORDERABLE ITEM IEN
"RTN","C9CFCAST",136,0)
 ...N OCNT ;OCOHORT counter
"RTN","C9CFCAST",137,0)
 ...S OCNT=0
"RTN","C9CFCAST",138,0)
 ...I WARDIEN>0 D
"RTN","C9CFCAST",139,0)
 ....N WF ;ward formula
"RTN","C9CFCAST",140,0)
 ....S WF=0 F  S WF=$O(^C9C(300890,REIEN,1,WF)) Q:WF'>0  D
"RTN","C9CFCAST",141,0)
 .....;check formula wards to see if applicable
"RTN","C9CFCAST",142,0)
 .....I $O(^C9C(300890,REIEN,1,WF,2,"B",WARDIEN,0))>0 D ;ward included in this formula
"RTN","C9CFCAST",143,0)
 ......N FR ;formula rule
"RTN","C9CFCAST",144,0)
 ......S FR=0 F  S FR=$O(^C9C(300890,REIEN,1,WF,1,FR)) Q:FR'>0  D
"RTN","C9CFCAST",145,0)
 .......N RP ;rule pointer value
"RTN","C9CFCAST",146,0)
 .......S RP=$P($G(^C9C(300890,REIEN,1,WF,1,FR,0)),"^",1)
"RTN","C9CFCAST",147,0)
 .......I RP>0 D
"RTN","C9CFCAST",148,0)
 ........N ORIEN ;orderable item ien
"RTN","C9CFCAST",149,0)
 ........S ORIEN=$P($G(^C9C(300890,REIEN,1,WF,1,FR,7)),"^",1)
"RTN","C9CFCAST",150,0)
 ........I ORIEN>0 D ;orderable item cohort found
"RTN","C9CFCAST",151,0)
 .........S OCNT=OCNT+1
"RTN","C9CFCAST",152,0)
 .........S OCOHORT("WARD",OCNT)=WF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CFCAST",153,0)
 ...I UNIT'="Undefined" D
"RTN","C9CFCAST",154,0)
 ....N UF ;unit formula
"RTN","C9CFCAST",155,0)
 ....S UF=0 F  S UF=$O(^C9C(300890,REIEN,2,UF)) Q:UF'>0  D
"RTN","C9CFCAST",156,0)
 .....;check formula units to see if applicable
"RTN","C9CFCAST",157,0)
 .....I $O(^C9C(300890,REIEN,2,UF,2,"B",UNIT,0))>0 D ;unit included in this formula
"RTN","C9CFCAST",158,0)
 ......N FR ;formula rule
"RTN","C9CFCAST",159,0)
 ......S FR=0 F  S FR=$O(^C9C(300890,REIEN,2,UF,1,FR)) Q:FR'>0  D
"RTN","C9CFCAST",160,0)
 .......N RP ;rule pointer value
"RTN","C9CFCAST",161,0)
 .......S RP=$P($G(^C9C(300890,REIEN,2,UF,1,FR,0)),"^",1)
"RTN","C9CFCAST",162,0)
 .......I RP>0 D
"RTN","C9CFCAST",163,0)
 ........N ORIEN ;orderable item ien
"RTN","C9CFCAST",164,0)
 ........S ORIEN=$P($G(^C9C(300890,REIEN,2,UF,1,FR,7)),"^",1)
"RTN","C9CFCAST",165,0)
 ........I ORIEN>0 D ;orderable item cohort found
"RTN","C9CFCAST",166,0)
 .........S OCNT=OCNT+1
"RTN","C9CFCAST",167,0)
 .........S OCOHORT("UNIT",OCNT)=UF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CFCAST",168,0)
 ...N HF ;hospital formula
"RTN","C9CFCAST",169,0)
 ...S HF=0 F  S HF=$O(^C9C(300890,REIEN,3,HF)) Q:HF'>0  D
"RTN","C9CFCAST",170,0)
 ....;check formula hospital to see if applicable using DUZ(2)
"RTN","C9CFCAST",171,0)
 ....I $O(^C9C(300890,REIEN,3,HF,2,"B",DIV,0))>0 D ;hospital included in this formula
"RTN","C9CFCAST",172,0)
 .....N FR ;formula rule
"RTN","C9CFCAST",173,0)
 .....S FR=0 F  S FR=$O(^C9C(300890,REIEN,3,HF,1,FR)) Q:FR'>0  D
"RTN","C9CFCAST",174,0)
 ......N RP ;rule pointer value
"RTN","C9CFCAST",175,0)
 ......S RP=$P($G(^C9C(300890,REIEN,3,HF,1,FR,0)),"^",1)
"RTN","C9CFCAST",176,0)
 ......I RP>0 D
"RTN","C9CFCAST",177,0)
 .......N ORIEN ;orderable item ien
"RTN","C9CFCAST",178,0)
 .......S ORIEN=$P($G(^C9C(300890,REIEN,3,HF,1,FR,7)),"^",1)
"RTN","C9CFCAST",179,0)
 .......I ORIEN>0 D ;orderable item cohort found
"RTN","C9CFCAST",180,0)
 ........S OCNT=OCNT+1
"RTN","C9CFCAST",181,0)
 ........S OCOHORT("HOSPITAL",OCNT)=HF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CFCAST",182,0)
 ...;use the APT cross-reference ^TIU(8925,"APT",PAT,TITLIEN,DOCSTATUS(zero node, piece 5 P:8925.6),INVERSE DATE(node 13, piece 1)
"RTN","C9CFCAST",183,0)
 ...N DUEDATE ;next note due date
"RTN","C9CFCAST",184,0)
 ...S DUEDATE=0
"RTN","C9CFCAST",185,0)
 ...N FNOTEIEN ;found note ien
"RTN","C9CFCAST",186,0)
 ...S FNOTEIEN=""
"RTN","C9CFCAST",187,0)
 ...N ROWCOLOR
"RTN","C9CFCAST",188,0)
 ...S ROWCOLOR=""
"RTN","C9CFCAST",189,0)
 ...N ADATE ;latest patient admit date
"RTN","C9CFCAST",190,0)
 ...S ADATE=0
"RTN","C9CFCAST",191,0)
 ...N ADIEN ;movement ien
"RTN","C9CFCAST",192,0)
 ...S ADIEN=$G(^DPT(PAT,.105))
"RTN","C9CFCAST",193,0)
 ...I ADIEN>0 D
"RTN","C9CFCAST",194,0)
 ....S ADATE=$P($G(^DGPM(ADIEN,0)),"^",1)
"RTN","C9CFCAST",195,0)
 ...N NONOTE ;set to one if this note has not been completed during this visit or within two days before
"RTN","C9CFCAST",196,0)
 ...S NONOTE=1 ;set to one for now, will check for completed note below
"RTN","C9CFCAST",197,0)
 ...;get the latest note (will also need to check to be sure it is during this visit)
"RTN","C9CFCAST",198,0)
 ...N NOTEOK ;has the health factor if required
"RTN","C9CFCAST",199,0)
 ...S NOTEOK=0
"RTN","C9CFCAST",200,0)
 ...N INVDATE
"RTN","C9CFCAST",201,0)
 ...S INVDATE=0
"RTN","C9CFCAST",202,0)
 ...N NDATE ;inverse note date for note ien being checked
"RTN","C9CFCAST",203,0)
 ...S NDATE=0 F  S NDATE=$O(^TIU(8925,"APT",PAT,TITLIEN,CIEN,NDATE)) Q:((NDATE'>0)!(NOTEOK>0))  D ;if found, there has been a note with this title, check health factor if required
"RTN","C9CFCAST",204,0)
 ....N NIEN
"RTN","C9CFCAST",205,0)
 ....S NIEN=0 F  S NIEN=$O(^TIU(8925,"APT",PAT,TITLIEN,CIEN,NDATE,NIEN)) Q:NIEN'>0  D
"RTN","C9CFCAST",206,0)
 .....;we now have the latest note ien, now check visit and rules
"RTN","C9CFCAST",207,0)
 .....;note - what if event based, but event happened last visit?
"RTN","C9CFCAST",208,0)
 .....S FNOTEIEN=NIEN
"RTN","C9CFCAST",209,0)
 .....I (((9999999-NDATE)'<$$FMADD^XLFDT(ADATE,-2))&($P($G(^TIU(8925,FNOTEIEN,15)),"^",2)>0)) D ;this means that the note was during this visit or within two days before - should cover notes written in SAU and it is a signed note
"RTN","C9CFCAST",210,0)
 ......I (HFACTIEN'>0) D
"RTN","C9CFCAST",211,0)
 .......S NONOTE=0 ;has a completed note this admission for this title
"RTN","C9CFCAST",212,0)
 .......S INVDATE=NDATE
"RTN","C9CFCAST",213,0)
 .......S NOTEOK=1 ;july 2
"RTN","C9CFCAST",214,0)
 ......E  D ;need to check the health factor required
"RTN","C9CFCAST",215,0)
 .......N HFDATE
"RTN","C9CFCAST",216,0)
 .......S HFDATE=9999999-NDATE
"RTN","C9CFCAST",217,0)
 .......S HFDATE=HFDATE\1
"RTN","C9CFCAST",218,0)
 .......S HFDATE=9999999-HFDATE
"RTN","C9CFCAST",219,0)
 .......N ENTRYD S ENTRYD=$P($G(^TIU(8925,FNOTEIEN,12)),"^",1)
"RTN","C9CFCAST",220,0)
 .......S ENTRYD=ENTRYD\1
"RTN","C9CFCAST",221,0)
 .......S ENTRYD=9999999-ENTRYD
"RTN","C9CFCAST",222,0)
 .......I (($D(^AUPNVHF("AA",PAT,HFACTIEN,HFDATE)))!($D(^AUPNVHF("AA",PAT,HFACTIEN,NDATE)))!($D(^AUPNVHF("AA",PAT,HFACTIEN,ENTRYD)))) D ;health factor exists for this note
"RTN","C9CFCAST",223,0)
 ........S NONOTE=0
"RTN","C9CFCAST",224,0)
 ........S INVDATE=NDATE
"RTN","C9CFCAST",225,0)
 ........S NOTEOK=1 ;july 2
"RTN","C9CFCAST",226,0)
 .......E  D
"RTN","C9CFCAST",227,0)
 ........N VPTR
"RTN","C9CFCAST",228,0)
 ........S VPTR=$P($G(^TIU(8925,FNOTEIEN,0)),"^",3)
"RTN","C9CFCAST",229,0)
 ........I VPTR>0 D
"RTN","C9CFCAST",230,0)
 .........N VDATE
"RTN","C9CFCAST",231,0)
 .........S VDATE=$P($G(^AUPNVSIT(VPTR,0)),"^",1)
"RTN","C9CFCAST",232,0)
 .........I VDATE>0 D
"RTN","C9CFCAST",233,0)
 ..........S VDATE=VDATE\1
"RTN","C9CFCAST",234,0)
 ..........S VDATE=9999999-VDATE
"RTN","C9CFCAST",235,0)
 ..........I $D(^AUPNVHF("AA",PAT,HFACTIEN,VDATE)) D
"RTN","C9CFCAST",236,0)
 ...........S NONOTE=0
"RTN","C9CFCAST",237,0)
 ...........S INVDATE=NDATE
"RTN","C9CFCAST",238,0)
 ...........S NOTEOK=1
"RTN","C9CFCAST",239,0)
 ...I INVDATE'>0 D
"RTN","C9CFCAST",240,0)
 ....S INVDATE=9999999
"RTN","C9CFCAST",241,0)
 ...;check all the rules and find the next one due
"RTN","C9CFCAST",242,0)
 ...;first check the cohort rules
"RTN","C9CFCAST",243,0)
 ...N ACR ;applicable cohort rules
"RTN","C9CFCAST",244,0)
 ...N EVNTDATE
"RTN","C9CFCAST",245,0)
 ...I PTONLY'>0 ;but not if we're just checking pass-through reminders
"RTN","C9CFCAST",246,0)
 ....N CH
"RTN","C9CFCAST",247,0)
 ....I WARDIEN>0 D
"RTN","C9CFCAST",248,0)
 .....S CH=0 F  S CH=$O(OCOHORT("WARD",CH)) Q:CH'>0  D
"RTN","C9CFCAST",249,0)
 ......N ACNT ;applicable cohort rules counter
"RTN","C9CFCAST",250,0)
 ......S ACNT=0
"RTN","C9CFCAST",251,0)
 ......N OIEN
"RTN","C9CFCAST",252,0)
 ......S OIEN=$P(OCOHORT("WARD",CH),"^",3)
"RTN","C9CFCAST",253,0)
 ......I OIEN>0 D
"RTN","C9CFCAST",254,0)
 .......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CFCAST",255,0)
 .......;allowing it for now
"RTN","C9CFCAST",256,0)
 .......N HASIT ;set to one if active order found
"RTN","C9CFCAST",257,0)
 .......S HASIT=0
"RTN","C9CFCAST",258,0)
 .......S EVNTDATE=0
"RTN","C9CFCAST",259,0)
 .......N RPNTR
"RTN","C9CFCAST",260,0)
 .......S RPNTR=$P(OCOHORT("WARD",CH),"^",2)
"RTN","C9CFCAST",261,0)
 .......N ID ;inverse date
"RTN","C9CFCAST",262,0)
 .......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CFCAST",263,0)
 ........N TN ;order ien
"RTN","C9CFCAST",264,0)
 ........S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CFCAST",265,0)
 .........N IN ;instance
"RTN","C9CFCAST",266,0)
 .........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CFCAST",267,0)
 ..........N OIF
"RTN","C9CFCAST",268,0)
 ..........S OIF=0 ;orderable item not found
"RTN","C9CFCAST",269,0)
 ..........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CFCAST",270,0)
 ...........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CFCAST",271,0)
 ............S OIF=1
"RTN","C9CFCAST",272,0)
 ..........I OIF=1 D
"RTN","C9CFCAST",273,0)
 ...........N STOPD ;stopdate
"RTN","C9CFCAST",274,0)
 ...........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CFCAST",275,0)
 ...........N STRTD
"RTN","C9CFCAST",276,0)
 ...........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CFCAST",277,0)
 ...........I ((STRTD<DTNOW)&((STOPD="")!(STOPD'<DTNOW))) D ;forecast 30 days
"RTN","C9CFCAST",278,0)
 ............S HASIT=1 ;has active orderable item
"RTN","C9CFCAST",279,0)
 ............S EVNTDATE=STRTD
"RTN","C9CFCAST",280,0)
 ............S ACNT=ACNT+1
"RTN","C9CFCAST",281,0)
 ............S ACR("WARD",ACNT)=OCOHORT("WARD",CH)_"^"_TN_"^"_EVNTDATE ;Now OCOHORT("WARD",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CFCAST",282,0)
 ....I UNIT'="Undefined" D
"RTN","C9CFCAST",283,0)
 .....S CH=0 F  S CH=$O(OCOHORT("UNIT",CH)) Q:CH'>0  D
"RTN","C9CFCAST",284,0)
 ......N ACNT ;applicable cohort rules counter
"RTN","C9CFCAST",285,0)
 ......S ACNT=0
"RTN","C9CFCAST",286,0)
 ......N OIEN
"RTN","C9CFCAST",287,0)
 ......S OIEN=$P(OCOHORT("UNIT",CH),"^",3)
"RTN","C9CFCAST",288,0)
 ......I OIEN>0 D
"RTN","C9CFCAST",289,0)
 .......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CFCAST",290,0)
 .......;allowing it for now
"RTN","C9CFCAST",291,0)
 .......N HASIT ;set to one if active order found
"RTN","C9CFCAST",292,0)
 .......S HASIT=0
"RTN","C9CFCAST",293,0)
 .......S EVNTDATE=0
"RTN","C9CFCAST",294,0)
 .......N RPNTR
"RTN","C9CFCAST",295,0)
 .......S RPNTR=$P(OCOHORT("UNIT",CH),"^",2)
"RTN","C9CFCAST",296,0)
 .......N ID ;inverse date
"RTN","C9CFCAST",297,0)
 .......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CFCAST",298,0)
 ........N TN ;order ien
"RTN","C9CFCAST",299,0)
 ........S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CFCAST",300,0)
 .........N IN ;instance
"RTN","C9CFCAST",301,0)
 .........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CFCAST",302,0)
 ..........N OIF
"RTN","C9CFCAST",303,0)
 ..........S OIF=0 ;orderable item not found
"RTN","C9CFCAST",304,0)
 ..........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CFCAST",305,0)
 ...........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CFCAST",306,0)
 ............S OIF=1
"RTN","C9CFCAST",307,0)
 ..........I OIF=1 D
"RTN","C9CFCAST",308,0)
 ...........N STOPD ;stopdate
"RTN","C9CFCAST",309,0)
 ...........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CFCAST",310,0)
 ...........N STRTD
"RTN","C9CFCAST",311,0)
 ...........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CFCAST",312,0)
 ...........I ((STRTD<DTNOW)&((STOPD="")!(STOPD'<DTNOW))) D ;forecast 30 days
"RTN","C9CFCAST",313,0)
 ............S HASIT=1 ;has active orderable item
"RTN","C9CFCAST",314,0)
 ............S EVNTDATE=STRTD
"RTN","C9CFCAST",315,0)
 ............S ACNT=ACNT+1
"RTN","C9CFCAST",316,0)
 ............S ACR("UNIT",ACNT)=OCOHORT("UNIT",CH)_"^"_TN_"^"_EVNTDATE ;;Now OCOHORT("UNIT",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CFCAST",317,0)
 ....S CH=0 F  S CH=$O(OCOHORT("HOSPITAL",CH)) Q:CH'>0  D
"RTN","C9CFCAST",318,0)
 .....N ACNT ;applicable cohort rules counter
"RTN","C9CFCAST",319,0)
 .....S ACNT=0
"RTN","C9CFCAST",320,0)
 .....N OIEN
"RTN","C9CFCAST",321,0)
 .....S OIEN=$P(OCOHORT("HOSPITAL",CH),"^",3)
"RTN","C9CFCAST",322,0)
 .....I OIEN>0 D
"RTN","C9CFCAST",323,0)
 ......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CFCAST",324,0)
 ......;allowing it for now
"RTN","C9CFCAST",325,0)
 ......N HASIT ;set to one if active order found
"RTN","C9CFCAST",326,0)
 ......S HASIT=0
"RTN","C9CFCAST",327,0)
 ......S EVNTDATE=0
"RTN","C9CFCAST",328,0)
 ......N RPNTR
"RTN","C9CFCAST",329,0)
 ......S RPNTR=$P(OCOHORT("HOSPITAL",CH),"^",2)
"RTN","C9CFCAST",330,0)
 ......N ID ;inverse date
"RTN","C9CFCAST",331,0)
 ......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CFCAST",332,0)
 .......N TN ;order ien
"RTN","C9CFCAST",333,0)
 .......S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CFCAST",334,0)
 ........N IN ;instance
"RTN","C9CFCAST",335,0)
 ........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CFCAST",336,0)
 .........N OIF
"RTN","C9CFCAST",337,0)
 .........S OIF=0 ;orderable item not found
"RTN","C9CFCAST",338,0)
 .........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CFCAST",339,0)
 ..........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CFCAST",340,0)
 ...........S OIF=1
"RTN","C9CFCAST",341,0)
 .........I OIF=1 D
"RTN","C9CFCAST",342,0)
 ..........N STOPD ;stopdate
"RTN","C9CFCAST",343,0)
 ..........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CFCAST",344,0)
 ..........N STRTD
"RTN","C9CFCAST",345,0)
 ..........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CFCAST",346,0)
 ..........I ((STRTD<DTNOW)&((STOPD="")!(STOPD'<DTNOW))) D ;forecast 30 days
"RTN","C9CFCAST",347,0)
 ...........S HASIT=1 ;has active orderable item
"RTN","C9CFCAST",348,0)
 ...........S EVNTDATE=STRTD
"RTN","C9CFCAST",349,0)
 ...........S ACNT=ACNT+1
"RTN","C9CFCAST",350,0)
 ...........S ACR("HOSPITAL",ACNT)=OCOHORT("HOSPITAL",CH)_"^"_TN_"^"_EVNTDATE ;;Now OCOHORT("HOSPITAL",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CFCAST",351,0)
 ...;ACR() now contains cohort rules applicable to this patient
"RTN","C9CFCAST",352,0)
 ...;cohort rules trump everything - no other rules are considered if these are present!
"RTN","C9CFCAST",353,0)
 ...;like the other rules, ward cohort trumps unit cohort trumps hospital cohort
"RTN","C9CFCAST",354,0)
 ...;all three levels are contained in ACR, but they may be for varying orderable item iens
"RTN","C9CFCAST",355,0)
 ...;so for each orderable item ien, use only the most granular, i.e. ward,unit,hospital
"RTN","C9CFCAST",356,0)
 ...N APRULE ;applicable rule definition pointer
"RTN","C9CFCAST",357,0)
 ...S APRULE=0
"RTN","C9CFCAST",358,0)
 ...N RULELEVELFOUND ;use to track whether an applicable granular rule was found
"RTN","C9CFCAST",359,0)
 ...S RULELEVELFOUND="" ;WARD, UNIT, or HOSPITAL
"RTN","C9CFCAST",360,0)
 ...I $D(ACR) D
"RTN","C9CFCAST",361,0)
 ....;use only these cohort rules - ward, unit, or hospital in that order
"RTN","C9CFCAST",362,0)
 ....N BASEDATE
"RTN","C9CFCAST",363,0)
 ....S BASEDATE=0
"RTN","C9CFCAST",364,0)
 ....S APRULE=0
"RTN","C9CFCAST",365,0)
 ....S DUEDATE=0
"RTN","C9CFCAST",366,0)
 ....I WARDIEN>0 D ACRWUH(1,WARDIEN,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes
"RTN","C9CFCAST",367,0)
 ....I RULELEVELFOUND="" D
"RTN","C9CFCAST",368,0)
 .....S APRULE=0
"RTN","C9CFCAST",369,0)
 .....S DUEDATE=0
"RTN","C9CFCAST",370,0)
 .....S BASEDATE=0
"RTN","C9CFCAST",371,0)
 .....I UNIT'="Undefined" D ACRWUH(2,UNIT,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes
"RTN","C9CFCAST",372,0)
 .....I RULELEVELFOUND="" D
"RTN","C9CFCAST",373,0)
 ......S APRULE=0
"RTN","C9CFCAST",374,0)
 ......S DUEDATE=0
"RTN","C9CFCAST",375,0)
 ......S BASEDATE=0
"RTN","C9CFCAST",376,0)
 ......D ACRWUH(3,DIV,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes
"RTN","C9CFCAST",377,0)
 ...I '$D(ACR) D 
"RTN","C9CFCAST",378,0)
 ....;use ward, unit, or hospital rules in that order
"RTN","C9CFCAST",379,0)
 ....S APRULE=0
"RTN","C9CFCAST",380,0)
 ....S DUEDATE=0
"RTN","C9CFCAST",381,0)
 ....S BASEDATE=0
"RTN","C9CFCAST",382,0)
 ....I WARDIEN>0 D NAFWUH(1,WARDIEN,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,INVDATE,REIEN,.OFFSET,PTONLY,CLEVEL) ;ward rules CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CFCAST",383,0)
 ....I RULELEVELFOUND="" D
"RTN","C9CFCAST",384,0)
 .....S APRULE=0
"RTN","C9CFCAST",385,0)
 .....S DUEDATE=0
"RTN","C9CFCAST",386,0)
 .....S BASEDATE=0
"RTN","C9CFCAST",387,0)
 .....I UNIT'="Undefined" D NAFWUH(2,UNIT,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,INVDATE,REIEN,.OFFSET,PTONLY,CLEVEL) ;unit rules CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CFCAST",388,0)
 .....I RULELEVELFOUND="" D
"RTN","C9CFCAST",389,0)
 ......S APRULE=0
"RTN","C9CFCAST",390,0)
 ......S DUEDATE=0
"RTN","C9CFCAST",391,0)
 ......S BASEDATE=0
"RTN","C9CFCAST",392,0)
 ......D NAFWUH(3,DIV,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,INVDATE,REIEN,.OFFSET,PTONLY,CLEVEL) ;hospital rules CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CFCAST",393,0)
 ...I ((DUEDATE>0)&(+APRULE>0)) D
"RTN","C9CFCAST",394,0)
 ....;show this entry
"RTN","C9CFCAST",395,0)
 ....;find out what color to display the row
"RTN","C9CFCAST",396,0)
 ....;begin CRH JHT 2019 - for override logic
"RTN","C9CFCAST",397,0)
 ....N RPOINT
"RTN","C9CFCAST",398,0)
 ....S RPOINT=+APRULE
"RTN","C9CFCAST",399,0)
 ....;end CRH JHT 2019 - for override logic
"RTN","C9CFCAST",400,0)
 ....S BASEDATE=DUEDATE
"RTN","C9CFCAST",401,0)
 ....N AHEAD
"RTN","C9CFCAST",402,0)
 ....S AHEAD=$P(APRULE,"^",2)
"RTN","C9CFCAST",403,0)
 ....I AHEAD'="" D
"RTN","C9CFCAST",404,0)
 .....S C9CCHECK=$$ALMOST^C9CPTR(AHEAD,BASEDATE)
"RTN","C9CFCAST",405,0)
 ....E  D
"RTN","C9CFCAST",406,0)
 .....S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,+APRULE,4)) I CKCODE'="" X CKCODE
"RTN","C9CFCAST",407,0)
 ....I C9CCHECK>0 S ROWCOLOR="Yellow"
"RTN","C9CFCAST",408,0)
 ....I C9CCHECK=0 D
"RTN","C9CFCAST",409,0)
 .....S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,+APRULE,6)) I CKCODE'="" X CKCODE
"RTN","C9CFCAST",410,0)
 .....I C9CCHECK>0 S ROWCOLOR="LightCoral"
"RTN","C9CFCAST",411,0)
 ....N PATNAME
"RTN","C9CFCAST",412,0)
 ....S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CFCAST",413,0)
 ....N MRN
"RTN","C9CFCAST",414,0)
 ....S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CFCAST",415,0)
 ....N NOTEDATE
"RTN","C9CFCAST",416,0)
 ....S NOTEDATE=(9999999-INVDATE)
"RTN","C9CFCAST",417,0)
 ....I $P(NOTEDATE,".",1)>0 I $P(NOTEDATE,".",2)="" S NOTEDATE=NOTEDATE_".2359"
"RTN","C9CFCAST",418,0)
 ....S NOTEDATE=$$FMTE^XLFDT(NOTEDATE)
"RTN","C9CFCAST",419,0)
 ....I NOTEDATE=0 S NOTEDATE=""
"RTN","C9CFCAST",420,0)
 ....I $P(DUEDATE,".",1)>0 I $P(DUEDATE,".",2)="" S DUEDATE=DUEDATE_".2359"
"RTN","C9CFCAST",421,0)
 ....I ((DUEDATE<2800101)!(DUEDATE>4990101)) S DUEDATE="" ;avoid invalid due date
"RTN","C9CFCAST",422,0)
 ....S DUEDATE=$$FMTE^XLFDT(DUEDATE)
"RTN","C9CFCAST",423,0)
 ....I DUEDATE=0 S DUEDATE=""
"RTN","C9CFCAST",424,0)
 ....N NOTEIEN
"RTN","C9CFCAST",425,0)
 ....S NOTEIEN=$G(FNOTEIEN)
"RTN","C9CFCAST",426,0)
 ....N OUTADMIT
"RTN","C9CFCAST",427,0)
 ....S OUTADMIT=$$FMTE^XLFDT(ADATE)
"RTN","C9CFCAST",428,0)
 ....N ATTEND
"RTN","C9CFCAST",429,0)
 ....S ATTEND=$G(^DPT(PAT,.1041)) I ATTEND S ATTEND=$P($G(^VA(200,ATTEND,0)),U)
"RTN","C9CFCAST",430,0)
 ....I WARDIEN=-1 S WARD="Outpatient"
"RTN","C9CFCAST",431,0)
 ....I DUEDATE'="" D
"RTN","C9CFCAST",432,0)
 ....N ABBREV
"RTN","C9CFCAST",433,0)
 ....S ABBREV=""
"RTN","C9CFCAST",434,0)
 ....I $G(RPOINT)>0 D
"RTN","C9CFCAST",435,0)
 .....S ABBREV=$P($G(^C9C(300892,RPOINT,0)),"^",3)
"RTN","C9CFCAST",436,0)
 .....N OPOS
"RTN","C9CFCAST",437,0)
 .....I $G(OFFSET)'=0 D
"RTN","C9CFCAST",438,0)
 ......I $F(ABBREV,"X DAYS")>1 D
"RTN","C9CFCAST",439,0)
 .......S OPOS=$F(ABBREV,"X DAYS")
"RTN","C9CFCAST",440,0)
 .......I OPOS>7 D
"RTN","C9CFCAST",441,0)
 ........S ABBREV=$E(ABBREV,1,(OPOS-7))_OFFSET_$E(ABBREV,(OPOS-5),50)
"RTN","C9CFCAST",442,0)
 ......I $F(ABBREV,"X HOURS")>1 D
"RTN","C9CFCAST",443,0)
 .......S OPOS=$F(ABBREV,"X HOURS")
"RTN","C9CFCAST",444,0)
 .......I OPOS>8 D
"RTN","C9CFCAST",445,0)
 ........S ABBREV=$E(ABBREV,1,(OPOS-8))_OFFSET_$E(ABBREV,(OPOS-6),50)
"RTN","C9CFCAST",446,0)
 .....S C9CI=C9CI+1
"RTN","C9CFCAST",447,0)
 .....S C9CRET(C9CI)=PAT_"^"_PATNAME_"^"_MRN_"^"_OUTADMIT_"^"_ATTEND_"^"_TITLIEN_"^"_TITLNAME_"^"_NOTEDATE_"^"_WARD_"^"_NOTEIEN_"^"_DUEDATE_"^"_ROWCOLOR_"^"_ABBREV_"^"_RPOINT
"RTN","C9CFCAST",448,0)
 Q
"RTN","C9CFCAST",449,0)
ACRWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ARRACR,NONOTE,INVDATE,BASEDATE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,REIEN,OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override purposes
"RTN","C9CFCAST",450,0)
 ;SEPAR - 1 for ward, 2 for unit, 3 for hospital
"RTN","C9CFCAST",451,0)
 ;LEVPTR - ward ien, bedsection, or DUZ(2)
"RTN","C9CFCAST",452,0)
 Q:SEPAR'>0
"RTN","C9CFCAST",453,0)
 N LEVEL
"RTN","C9CFCAST",454,0)
 S LEVEL=""
"RTN","C9CFCAST",455,0)
 I SEPAR=1 S LEVEL="WARD"
"RTN","C9CFCAST",456,0)
 I SEPAR=2 S LEVEL="UNIT"
"RTN","C9CFCAST",457,0)
 I SEPAR=3 S LEVEL="HOSPITAL"
"RTN","C9CFCAST",458,0)
 N WL
"RTN","C9CFCAST",459,0)
 S WL=0 F  S WL=$O(ARRACR(LEVEL,WL)) Q:WL'>0  D 
"RTN","C9CFCAST",460,0)
 .S BASEDATE=+$P(ARRACR(LEVEL,WL),"^",6)
"RTN","C9CFCAST",461,0)
 .N EDATE ;event date
"RTN","C9CFCAST",462,0)
 .S EDATE=BASEDATE
"RTN","C9CFCAST",463,0)
 .I BASEDATE>0 D
"RTN","C9CFCAST",464,0)
 ..N RULETEXT
"RTN","C9CFCAST",465,0)
 ..S RULETEXT=""
"RTN","C9CFCAST",466,0)
 ..N RPOINT ;changed RPTR to RPOINT this subroutine for override coding
"RTN","C9CFCAST",467,0)
 ..S RPOINT=$P(ARRACR(LEVEL,WL),"^",4)
"RTN","C9CFCAST",468,0)
 ..I RPOINT>0 D
"RTN","C9CFCAST",469,0)
 ...N RUACT ;rule active?
"RTN","C9CFCAST",470,0)
 ...S RUACT=$P($G(^C9C(300892,RPOINT,0)),"^",2)
"RTN","C9CFCAST",471,0)
 ...I RUACT>0 D
"RTN","C9CFCAST",472,0)
 ....S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CFCAST",473,0)
 ....;begin CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CFCAST",474,0)
 ....;N OFFSET ;offset in days or hours - do not new this here as it is passed in by reference
"RTN","C9CFCAST",475,0)
 ....S OFFSET=0
"RTN","C9CFCAST",476,0)
 ....N FIEN
"RTN","C9CFCAST",477,0)
 ....S FIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CFCAST",478,0)
 ....I FIEN>0 D
"RTN","C9CFCAST",479,0)
 .....N RFIEN
"RTN","C9CFCAST",480,0)
 .....S RFIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CFCAST",481,0)
 .....I RFIEN>0 D
"RTN","C9CFCAST",482,0)
 ......I $F(RULETEXT,"X DAYS")>0 D
"RTN","C9CFCAST",483,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FIEN,1,RFIEN,8)),"^",1)
"RTN","C9CFCAST",484,0)
 ......I $F(RULETEXT,"X HOURS")>0 D
"RTN","C9CFCAST",485,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FIEN,1,RFIEN,9)),"^",1)
"RTN","C9CFCAST",486,0)
 ....N ABD ;ACCEPTABLE BASEDATE DELTA formatted as DAYS.HOURS
"RTN","C9CFCAST",487,0)
 ....N MABD ;mumps code
"RTN","C9CFCAST",488,0)
 ....S MABD=$G(^C9C(300892,RPOINT,7))
"RTN","C9CFCAST",489,0)
 ....;was S ABD=$P($G(^C9C(300892,RPOINT,7)),"^",1)
"RTN","C9CFCAST",490,0)
 ....I MABD'="" X MABD
"RTN","C9CFCAST",491,0)
 ....I ABD'>0 S ABD="2.2" ;default if code does not return proper value
"RTN","C9CFCAST",492,0)
 ....;end CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CFCAST",493,0)
 ....N ABDAYS S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",494,0)
 ....N ABHOURS S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",495,0)
 ....;start X DAYS
"RTN","C9CFCAST",496,0)
 ....I $F(RULETEXT,"EVERY X DAYS FROM EVENT DATE")>0 D
"RTN","C9CFCAST",497,0)
 .....N FORMIEN
"RTN","C9CFCAST",498,0)
 .....S FORMIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CFCAST",499,0)
 .....I FORMIEN>0 D
"RTN","C9CFCAST",500,0)
 ......N RUIEN
"RTN","C9CFCAST",501,0)
 ......S RUIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CFCAST",502,0)
 ......I RUIEN>0 D
"RTN","C9CFCAST",503,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FORMIEN,1,RUIEN,8)),"^",1)
"RTN","C9CFCAST",504,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CFCAST",505,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CFCAST",506,0)
 ........I BASEDATE>0 D
"RTN","C9CFCAST",507,0)
 .........I OFFSET>0 D
"RTN","C9CFCAST",508,0)
 ..........N NUMDAYS
"RTN","C9CFCAST",509,0)
 ..........S NUMDAYS=OFFSET
"RTN","C9CFCAST",510,0)
 ..........N DSAD ;days since event date
"RTN","C9CFCAST",511,0)
 ..........S DSAD=$$FMDIFF^XLFDT(DTNOW,BASEDATE,1) ;difference in days
"RTN","C9CFCAST",512,0)
 ..........N MDSAD
"RTN","C9CFCAST",513,0)
 ..........S MDSAD=DSAD#NUMDAYS
"RTN","C9CFCAST",514,0)
 ..........S BASEDATE=$$FMADD^XLFDT(DTNOW\1,MDSAD)_.2359
"RTN","C9CFCAST",515,0)
 ..........I BASEDATE'=0 D
"RTN","C9CFCAST",516,0)
 ...........S RULELEVELFOUND=LEVEL
"RTN","C9CFCAST",517,0)
 ...........N C9CCHECK
"RTN","C9CFCAST",518,0)
 ...........S C9CCHECK=0
"RTN","C9CFCAST",519,0)
 ...........I ((ENDDATE>BASEDATE)&(BASEDATE>$$FMADD^XLFDT(DTNOW,-350))) S C9CCHECK=1
"RTN","C9CFCAST",520,0)
 ...........I C9CCHECK>0 D
"RTN","C9CFCAST",521,0)
 ............;check to see if there is a completed note in this range or after
"RTN","C9CFCAST",522,0)
 ............I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CFCAST",523,0)
 .............I DUEDATE<BASEDATE D
"RTN","C9CFCAST",524,0)
 ..............S DUEDATE=BASEDATE
"RTN","C9CFCAST",525,0)
 ..............S APRULE=RUIEN ;applicable rule
"RTN","C9CFCAST",526,0)
 ............I NONOTE=0 D
"RTN","C9CFCAST",527,0)
 .............;check to see if there is a completed note of this title within or after this time period
"RTN","C9CFCAST",528,0)
 .............;first check within the time period
"RTN","C9CFCAST",529,0)
 .............N LASTDATE
"RTN","C9CFCAST",530,0)
 .............S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CFCAST",531,0)
 .............I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CFCAST",532,0)
 ..............I DUEDATE<BASEDATE D
"RTN","C9CFCAST",533,0)
 ...............S APRULE=RUIEN
"RTN","C9CFCAST",534,0)
 ...............S DUEDATE=BASEDATE
"RTN","C9CFCAST",535,0)
 ....;end X DAYS
"RTN","C9CFCAST",536,0)
 ....;start X HOURS
"RTN","C9CFCAST",537,0)
 ....I $F(RULETEXT,"EVERY X HOURS FROM EVENT DATE")>0 D
"RTN","C9CFCAST",538,0)
 .....N FORMIEN
"RTN","C9CFCAST",539,0)
 .....S FORMIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CFCAST",540,0)
 .....I FORMIEN>0 D
"RTN","C9CFCAST",541,0)
 ......N RUIEN
"RTN","C9CFCAST",542,0)
 ......S RUIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CFCAST",543,0)
 ......I RUIEN>0 D
"RTN","C9CFCAST",544,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FORMIEN,1,RUIEN,9)),"^",1)
"RTN","C9CFCAST",545,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CFCAST",546,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,,OFFSET)
"RTN","C9CFCAST",547,0)
 ........I BASEDATE>0 D
"RTN","C9CFCAST",548,0)
 .........I OFFSET>0 D
"RTN","C9CFCAST",549,0)
 ..........N NUMHOURS
"RTN","C9CFCAST",550,0)
 ..........S NUMHOURS=OFFSET
"RTN","C9CFCAST",551,0)
 ..........N SSAD ;seconds since event date
"RTN","C9CFCAST",552,0)
 ..........S SSAD=$$FMDIFF^XLFDT(DTNOW,EDATE,2) ;difference in seconds
"RTN","C9CFCAST",553,0)
 ..........I SSAD>0 D
"RTN","C9CFCAST",554,0)
 ...........N HSAD ;hours since event date
"RTN","C9CFCAST",555,0)
 ...........S HSAD=SSAD\3600
"RTN","C9CFCAST",556,0)
 ...........N MHSAD
"RTN","C9CFCAST",557,0)
 ...........S MHSAD=HSAD#NUMHOURS ;how many whole hours till next due time
"RTN","C9CFCAST",558,0)
 ...........S BASEDATE=$$FMADD^XLFDT(EDATE,,HSAD+MHSAD) ;next due time
"RTN","C9CFCAST",559,0)
 ...........I BASEDATE'=0 D
"RTN","C9CFCAST",560,0)
 ............S RULELEVELFOUND=LEVEL
"RTN","C9CFCAST",561,0)
 ............N C9CCHECK
"RTN","C9CFCAST",562,0)
 ............S C9CCHECK=0
"RTN","C9CFCAST",563,0)
 ............I ((ENDDATE>BASEDATE)&(BASEDATE>$$FMADD^XLFDT(DTNOW,-350))) S C9CCHECK=1
"RTN","C9CFCAST",564,0)
 ............I C9CCHECK>0 D
"RTN","C9CFCAST",565,0)
 .............;check to see if there is a completed note in this range or after
"RTN","C9CFCAST",566,0)
 .............I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CFCAST",567,0)
 ..............I DUEDATE<BASEDATE D
"RTN","C9CFCAST",568,0)
 ...............S DUEDATE=BASEDATE
"RTN","C9CFCAST",569,0)
 ...............S APRULE=RUIEN ;applicable rule
"RTN","C9CFCAST",570,0)
 .............I NONOTE=0 D
"RTN","C9CFCAST",571,0)
 ..............;check to see if there is a completed note of this title within or after this time period
"RTN","C9CFCAST",572,0)
 ..............;first check within the time period
"RTN","C9CFCAST",573,0)
 ..............N LASTDATE
"RTN","C9CFCAST",574,0)
 ..............S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CFCAST",575,0)
 ..............I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CFCAST",576,0)
 ...............I DUEDATE<BASEDATE D
"RTN","C9CFCAST",577,0)
 ................S APRULE=RUIEN
"RTN","C9CFCAST",578,0)
 ................S DUEDATE=BASEDATE
"RTN","C9CFCAST",579,0)
 ....;end X HOURS 
"RTN","C9CFCAST",580,0)
 Q
"RTN","C9CFCAST",581,0)
NAFWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ADATE,NONOTE,DTNOW,ENDDATE,FOREDAYS,TITLIEN,INVDATE,REIEN,OFST,PTONLY,CLEVEL) ;CRH JHT 2019 - added REIEN and OFST for override logic ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CFCAST",582,0)
 ;SEPAR - 1 for ward, 2 for unit, 3 for hospital
"RTN","C9CFCAST",583,0)
 ;LEVPTR - ward ien, bedsection, or DUZ(2)
"RTN","C9CFCAST",584,0)
 Q:SEPAR'>0
"RTN","C9CFCAST",585,0)
 N LEVEL
"RTN","C9CFCAST",586,0)
 S LEVEL=""
"RTN","C9CFCAST",587,0)
 I SEPAR=1 S LEVEL="WARD"
"RTN","C9CFCAST",588,0)
 I SEPAR=2 S LEVEL="UNIT"
"RTN","C9CFCAST",589,0)
 I SEPAR=3 S LEVEL="HOSPITAL"
"RTN","C9CFCAST",590,0)
 ;----------------------
"RTN","C9CFCAST",591,0)
 N WF 
"RTN","C9CFCAST",592,0)
 S WF=0 F  S WF=$O(^C9C(300890,REIEN,SEPAR,WF)) Q:WF'>0  D
"RTN","C9CFCAST",593,0)
 .;check each formula included to see if LEVPTR included
"RTN","C9CFCAST",594,0)
 .I $O(^C9C(300890,REIEN,SEPAR,WF,2,"B",LEVPTR,0))>0 D ;LEVPTR included in this formula
"RTN","C9CFCAST",595,0)
 ..N C9CCHECK ;this will be set as 0 or 1 from the mumps code fields in C9C RULES file
"RTN","C9CFCAST",596,0)
 ..S C9CCHECK=0
"RTN","C9CFCAST",597,0)
 ..N BASEDATE
"RTN","C9CFCAST",598,0)
 ..S BASEDATE=0
"RTN","C9CFCAST",599,0)
 ..N PREVADAYS
"RTN","C9CFCAST",600,0)
 ..S PREVADAYS=0
"RTN","C9CFCAST",601,0)
 ..N PREVAHOURS
"RTN","C9CFCAST",602,0)
 ..S PREVAHOURS=0
"RTN","C9CFCAST",603,0)
 ..N RTRACK ;track whether to keep processing rules in this formula ;mar 3,2020
"RTN","C9CFCAST",604,0)
 ..S RTRACK=0 ;mar 3,2020
"RTN","C9CFCAST",605,0)
 ..I CLEVEL=0 S RTRACK=1 ;there is no cohort defined, process all ;mar 3,2020
"RTN","C9CFCAST",606,0)
 ..I CLEVEL=1 S RTRACK=2 ;in cohort, process up to, but not including first pass-through ;mar 3,2020
"RTN","C9CFCAST",607,0)
 ..I CLEVEL=2 I PTONLY=1 S RTRACK=3 ;not in cohort, PTONLY checked, start processing pass-throughs ;mar 3,2020
"RTN","C9CFCAST",608,0)
 ..I CLEVEL=2 I PTONLY=0 S RTRACK=0 ;not in cohort, PTONLY not checked, process nothing ;mar 3,2020
"RTN","C9CFCAST",609,0)
 ..;RTRACK: 0=stop no matter what, 1=process no matter what, 2=process up to but not including first pass-through, 3=stop until next pass-through, 4=process all rules until next pass-through ;mar 3,2020
"RTN","C9CFCAST",610,0)
 ..N FR ;formula rule
"RTN","C9CFCAST",611,0)
 ..;S FR=0 F  S FR=$O(^C9C(300890,REIEN,SEPAR,WF,1,FR)) Q:(FR'>0)  D ;for each rule in the formula
"RTN","C9CFCAST",612,0)
 ..;S FR=0 F  S FR=$O(^C9C(300890,REIEN,SEPAR,WF,1,FR)) Q:((FR'>0)!(C9CCHECK>0)!(RTRACK=0))  D ;for each rule in the formula ;added RTRACK mar 3,2020
"RTN","C9CFCAST",613,0)
 ..S FR=0 F  S FR=$O(^C9C(300890,REIEN,SEPAR,WF,1,FR)) Q:((FR'>0)!(RTRACK=0))  D ;for each rule in the formula ;CRH JHT April 15,2020 - removed C9CCHECK
"RTN","C9CFCAST",614,0)
 ...N RPOINT ;rule pointer
"RTN","C9CFCAST",615,0)
 ...S RPOINT=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,0)),"^",1)
"RTN","C9CFCAST",616,0)
 ...I RPOINT>0 D
"RTN","C9CFCAST",617,0)
 ....N RTEXT
"RTN","C9CFCAST",618,0)
 ....S RTEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CFCAST",619,0)
 ....I RTEXT'="" I $F(RTEXT,"PASS-THROUGH REMINDER")>0 I RTRACK=2 S RTRACK=0 ;found the first pass-through, so stop processing all rules ;mar 3,2020
"RTN","C9CFCAST",620,0)
 ....I RTEXT'="" I $F(RTEXT,"PASS-THROUGH REMINDER")>0 I RTRACK=4 S RTRACK=0 ;finished processing rules after resolved pass-through ;mar 3,2020
"RTN","C9CFCAST",621,0)
 ....I RTEXT'="" I (RTRACK=1)!(RTRACK=2)!(RTRACK=4)!((RTRACK=3)&($F(RTEXT,"PASS-THROUGH REMINDER")>0)) D ;mar 3,2020 more complex reminder processing
"RTN","C9CFCAST",622,0)
 .....;begin CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CFCAST",623,0)
 .....N OFFSET ;offset in days or hours
"RTN","C9CFCAST",624,0)
 .....S OFFSET=0
"RTN","C9CFCAST",625,0)
 .....I $F(RTEXT,"X DAYS")>0 D
"RTN","C9CFCAST",626,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CFCAST",627,0)
 .....I $F(RTEXT,"X HOURS")>0 D
"RTN","C9CFCAST",628,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CFCAST",629,0)
 .....N ABD ;ACCEPTABLE BASEDATE DELTA formatted as DAYS.HOURS
"RTN","C9CFCAST",630,0)
 .....N MABD ;mumps code
"RTN","C9CFCAST",631,0)
 .....S MABD=$G(^C9C(300892,RPOINT,7))
"RTN","C9CFCAST",632,0)
 .....;was S ABD=$P($G(^C9C(300892,RPOINT,7)),"^",1)
"RTN","C9CFCAST",633,0)
 .....I MABD'="" X MABD
"RTN","C9CFCAST",634,0)
 .....I ABD'>0 S ABD="2.2" ;default if code does not return proper value
"RTN","C9CFCAST",635,0)
 .....;end CRH JHT 2019 - change delta to mumps code
"RTN","C9CFCAST",636,0)
 .....N ABDAYS S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",637,0)
 .....N ABHOURS S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",638,0)
 .....N ABMINS
"RTN","C9CFCAST",639,0)
 .....S ABMINS=0
"RTN","C9CFCAST",640,0)
 .....S BASEDATE=0
"RTN","C9CFCAST",641,0)
 .....;N OFFSET ;CRH JHT 2019 commented during override coding
"RTN","C9CFCAST",642,0)
 .....;S OFFSET=0 ;CRH JHT 2019 commented during override coding
"RTN","C9CFCAST",643,0)
 .....;begin reminder pass-through logic
"RTN","C9CFCAST",644,0)
 .....I $F(RTEXT,"PASS-THROUGH REMINDER")>0 D
"RTN","C9CFCAST",645,0)
 ......S BASEDATE=0
"RTN","C9CFCAST",646,0)
 ......I $G(TITLIEN)>0 D
"RTN","C9CFCAST",647,0)
 .......N REMIEN
"RTN","C9CFCAST",648,0)
 .......S REMIEN=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,10)),"^",1)
"RTN","C9CFCAST",649,0)
 .......N DEFARR
"RTN","C9CFCAST",650,0)
 .......I REMIEN'>0 I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CFCAST",651,0)
 .......I REMIEN>0 D
"RTN","C9CFCAST",652,0)
 ........N DEFNAME
"RTN","C9CFCAST",653,0)
 ........S DEFNAME=$P($G(^PXD(811.9,REMIEN,0)),"^",3) ;has to be print name, not name
"RTN","C9CFCAST",654,0)
 ........I DEFNAME="" I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CFCAST",655,0)
 ........I DEFNAME'="" D
"RTN","C9CFCAST",656,0)
 .........N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CFCAST",657,0)
 .........S PXRMDEBG=1
"RTN","C9CFCAST",658,0)
 .........N DATE ;must be newed but not populated to return current value
"RTN","C9CFCAST",659,0)
 .........D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CFCAST",660,0)
 .........N FIEVAL
"RTN","C9CFCAST",661,0)
 .........D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CFCAST",662,0)
 .........I $G(PXRMID)="" I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CFCAST",663,0)
 .........I $G(PXRMID)'="" D
"RTN","C9CFCAST",664,0)
 ..........N RESOLU,COHORT
"RTN","C9CFCAST",665,0)
 ..........S RESOLU=+$P($G(^TMP(PXRMID,$J,REMIEN,"RESOLUTION LOGIC")),"^",1)
"RTN","C9CFCAST",666,0)
 ..........S COHORT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CFCAST",667,0)
 ..........K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CFCAST",668,0)
 ..........I (COHORT=0) I (RTRACK=4) S RTRACK=3 ;skip to next pass-through ;mar 3,2020
"RTN","C9CFCAST",669,0)
 ..........I (COHORT=1) D
"RTN","C9CFCAST",670,0)
 ...........I RESOLU=1 I ((RTRACK=3)!(RTRACK=4)) S RTRACK=0 ;process no more rules ;mar 3,2020
"RTN","C9CFCAST",671,0)
 ...........I RESOLU=0 I ((RTRACK=3)!(RTRACK=4)) S RTRACK=2 ;process until next pass-through ;mar 3,2020
"RTN","C9CFCAST",672,0)
 ...........I CLEVEL=0 D ;only allow this to set a date if no reminder cohort is set ;mar 9,2020
"RTN","C9CFCAST",673,0)
 ............N RSTATUS
"RTN","C9CFCAST",674,0)
 ............S RSTATUS=$P($G(^TMP("PXRHM",$J,REMIEN,DEFNAME)),"^",1)
"RTN","C9CFCAST",675,0)
 ............N RDATEDUE
"RTN","C9CFCAST",676,0)
 ............S RDATEDUE=$P($G(^TMP("PXRHM",$J,REMIEN,DEFNAME)),"^",2)
"RTN","C9CFCAST",677,0)
 ............I RSTATUS="N/A" S BASEDATE=0
"RTN","C9CFCAST",678,0)
 ............E  I (((RSTATUS="DUE SOON")!(RESOLU=0))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CFCAST",679,0)
 ............E  I (((RSTATUS="DUE SOON")!(RESOLU=0))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CFCAST",680,0)
 ............E  I (((RSTATUS="DUE SOON")&(RESOLU=1))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CFCAST",681,0)
 ............E  I (((RSTATUS="DUE SOON")&(RESOLU=1))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CFCAST",682,0)
 ............E  I (((RSTATUS="DUE NOW")&(RESOLU=1))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CFCAST",683,0)
 ............E  I (((RSTATUS="DUE NOW")&(RESOLU=1))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CFCAST",684,0)
 ...........K ^TMP("PXRHM",$J,REMIEN)
"RTN","C9CFCAST",685,0)
 ...........K FIEVAL ;needs to be new each time
"RTN","C9CFCAST",686,0)
 .....;end reminder pass-through logic
"RTN","C9CFCAST",687,0)
 .....;start due now logic
"RTN","C9CFCAST",688,0)
 .....I RTEXT="DUE NOW" D
"RTN","C9CFCAST",689,0)
 ......S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CFCAST",690,0)
 .....;end due now logic
"RTN","C9CFCAST",691,0)
 .....;start annually based on admission day
"RTN","C9CFCAST",692,0)
 .....I $F(RTEXT,"ANNUALLY BASED ON ADMISSION DAY")>0 D
"RTN","C9CFCAST",693,0)
 ......S BASEDATE=ADATE
"RTN","C9CFCAST",694,0)
 ......I ($F(RTEXT,"X DAYS")>0) D
"RTN","C9CFCAST",695,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CFCAST",696,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CFCAST",697,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CFCAST",698,0)
 ........I OFFSET>(ABDAYS+2) D
"RTN","C9CFCAST",699,0)
 .........I PREVADAYS=0 D ;if this is the first X DAYS rule for this title/patient
"RTN","C9CFCAST",700,0)
 ..........S PREVADAYS=OFFSET
"RTN","C9CFCAST",701,0)
 ..........S ABDAYS=OFFSET+2 ;we need to cover two days prior to admission as well
"RTN","C9CFCAST",702,0)
 ......I ABD="" S ABD="14.0"
"RTN","C9CFCAST",703,0)
 ......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",704,0)
 ......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",705,0)
 ......N YY S YY=YEAR ;$E(BASEDATE,2,3)
"RTN","C9CFCAST",706,0)
 ......N CC S CC=CENTURY ;$E(BASEDATE,1,1)
"RTN","C9CFCAST",707,0)
 ......N MONT S MONT=$E(BASEDATE,4,5)
"RTN","C9CFCAST",708,0)
 ......N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CFCAST",709,0)
 ......N THEREST S THEREST=".1200" ;noon for this rule
"RTN","C9CFCAST",710,0)
 ......I ((($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))>(CENTURY_YEAR_DHMS))&(($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))<(CENTURY_YEAR_DHMS))) D ;are we currently in this years cycle ;mar 11,2020
"RTN","C9CFCAST",711,0)
 .......S BASEDATE=CENTURY_YEAR_THEREST ;mar 11,2020
"RTN","C9CFCAST",712,0)
 ......I (($$FMADD^XLFDT(CENTURY_YEAR_MONT_DD_THEREST,ABDAYS,ABHOURS))<(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds
"RTN","C9CFCAST",713,0)
 .......S BASEDATE=CENTURY_YEAR_MONT_DD_THEREST ;try this year
"RTN","C9CFCAST",714,0)
 .......S YY=YY+1
"RTN","C9CFCAST",715,0)
 .......I YY=100 S YY="00" S CC=CC+1
"RTN","C9CFCAST",716,0)
 .......I (($$FMADD^XLFDT(CC_YY_MONT_DD_THEREST,-ABDAYS,-ABHOURS)))<DTNOW D ;are we in next years cycle yet ;JHT 7/1/2019
"RTN","C9CFCAST",717,0)
 ........S BASEDATE=CC_YY_MONT_DD_THEREST ;set to next years cycle
"RTN","C9CFCAST",718,0)
 ......I (($$FMADD^XLFDT(CENTURY_YEAR_MONT_DD_THEREST,-ABDAYS,-ABHOURS))>(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we in this year's cycle? ;mar 6,2020
"RTN","C9CFCAST",719,0)
 .......;if not, try last year ;mar 6,2020
"RTN","C9CFCAST",720,0)
 .......S YY=YY-1 ;mar 6,2020
"RTN","C9CFCAST",721,0)
 .......I YY=-1 S YY=99 S CC=CC-1 ;mar 6,2020
"RTN","C9CFCAST",722,0)
 .......S BASEDATE=CC_YY_MONT_DD_THEREST ;set to last year's cycle ;mar 6,2020
"RTN","C9CFCAST",723,0)
 ......I (BASEDATE\1)'>(ADATE\1) S BASEDATE=0 ;not due same day as admission in this case
"RTN","C9CFCAST",724,0)
 .....;end annually based on admission day
"RTN","C9CFCAST",725,0)
 .....I $F(RTEXT,"ADMIT DATE")>0 D
"RTN","C9CFCAST",726,0)
 ......S BASEDATE=ADATE
"RTN","C9CFCAST",727,0)
 ......I (($F(RTEXT,"X DAYS")>0)&($F(RTEXT,"EVERY")'>0)) D
"RTN","C9CFCAST",728,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CFCAST",729,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CFCAST",730,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CFCAST",731,0)
 ........I OFFSET>(ABDAYS+2) D
"RTN","C9CFCAST",732,0)
 ........I PREVADAYS=0 D ;july 12, 2019
"RTN","C9CFCAST",733,0)
 .........S PREVADAYS=OFFSET ;july 12, 2019
"RTN","C9CFCAST",734,0)
 .........S ABDAYS=OFFSET+2 ;we need to cover two days prior to admission as well ;july 12, 2019
"RTN","C9CFCAST",735,0)
 ......;start annually
"RTN","C9CFCAST",736,0)
 ......I $F(RTEXT,"ANNUALLY")>0 D
"RTN","C9CFCAST",737,0)
 .......I ABD="" S ABD="14.0"
"RTN","C9CFCAST",738,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",739,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",740,0)
 .......N YY S YY=YEAR ;$E(BASEDATE,2,3) ;JHT 7/1/2019
"RTN","C9CFCAST",741,0)
 .......N CC S CC=CENTURY ;$E(BASEDATE,1,1) ;JHT 7/1/2019
"RTN","C9CFCAST",742,0)
 .......N THEREST S THEREST=$E(BASEDATE,4,99)
"RTN","C9CFCAST",743,0)
 .......I ((($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))>(CENTURY_YEAR_DHMS))&(($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))<(CENTURY_YEAR_DHMS))) D ;are we currently in this years cycle ;mar 11,2020
"RTN","C9CFCAST",744,0)
 ........S BASEDATE=CENTURY_YEAR_THEREST ;mar 11,2020
"RTN","C9CFCAST",745,0)
 .......I (($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))<(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we past this year's cycle? 
"RTN","C9CFCAST",746,0)
 ........S BASEDATE=CENTURY_YEAR_THEREST ;try this year
"RTN","C9CFCAST",747,0)
 ........S YY=YY+1
"RTN","C9CFCAST",748,0)
 ........I YY=100 S YY="00" S CC=CC+1
"RTN","C9CFCAST",749,0)
 ........I (($$FMADD^XLFDT(CC_YY_THEREST,-ABDAYS,-ABHOURS)))<DTNOW D ;are we in next years cycle yet ;JHT 7/1/2019
"RTN","C9CFCAST",750,0)
 .........S BASEDATE=CC_YY_THEREST ;set to next years cycle
"RTN","C9CFCAST",751,0)
 .......I (($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))>(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we in this year's cycle? ;mar 6,2020
"RTN","C9CFCAST",752,0)
 ........;if not, try last year ;mar 6,2020
"RTN","C9CFCAST",753,0)
 ........S YY=YY-1 ;mar 6,2020
"RTN","C9CFCAST",754,0)
 ........I YY=-1 S YY=99 S CC=CC-1 ;mar 6,2020
"RTN","C9CFCAST",755,0)
 ........S BASEDATE=CC_YY_THEREST ;set to last year's cycle ;mar 6,2020
"RTN","C9CFCAST",756,0)
 .......I BASEDATE'>ADATE S BASEDATE=0 ;not due same day as admission in this case
"RTN","C9CFCAST",757,0)
 ......;end annually
"RTN","C9CFCAST",758,0)
 ......;start each month based on admit date starting month 3 skip each month 12
"RTN","C9CFCAST",759,0)
 ......I $F(RTEXT,"EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12") D
"RTN","C9CFCAST",760,0)
 .......I $$FMADD^XLFDT(ADATE,82)<DTNOW D ;start on the third month but leave some room prior to due
"RTN","C9CFCAST",761,0)
 ........I ABD="" S ABD="2.0"
"RTN","C9CFCAST",762,0)
 ........S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",763,0)
 ........S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",764,0)
 ........N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CFCAST",765,0)
 ........N HMS S HMS=$P(DTNOW,".",2)
"RTN","C9CFCAST",766,0)
 ........N THEREST S THEREST=$P(BASEDATE,".",2)
"RTN","C9CFCAST",767,0)
 ........S THEREST="1200" ;changed during override coding - noon for this rule
"RTN","C9CFCAST",768,0)
 ........N MONT S MONT=$E(DTNOW,4,5)
"RTN","C9CFCAST",769,0)
 ........N MOA ;month of admission
"RTN","C9CFCAST",770,0)
 ........S MOA=$E(ADATE,4,5)
"RTN","C9CFCAST",771,0)
 ........;start by checking the current month
"RTN","C9CFCAST",772,0)
 ........N YEA S YEA=YEAR
"RTN","C9CFCAST",773,0)
 ........N CEN S CEN=CENTURY
"RTN","C9CFCAST",774,0)
 ........;I ((MONT="02")&(DD>28)) S DD=28 ;not taking leap years into account here
"RTN","C9CFCAST",775,0)
 ........;I ((DD>30)&((MONT="04")!(MONT="06")!(MONT="09")!(MONT="11"))) S DD=30
"RTN","C9CFCAST",776,0)
 ........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CFCAST",777,0)
 ........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",778,0)
 ........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",779,0)
 ........;begin CRH JHT 2019 - bug fix during override coding
"RTN","C9CFCAST",780,0)
 ........I ((MONT=MOA)!($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>DTNOW)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<DTNOW)) D
"RTN","C9CFCAST",781,0)
 .........I ((MONT=MOA)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<DTNOW)) D
"RTN","C9CFCAST",782,0)
 ..........;try next month first
"RTN","C9CFCAST",783,0)
 ..........S MONT=MONT+1
"RTN","C9CFCAST",784,0)
 ..........I MONT=13 S MONT=1 S YEA=YEA+1 I YEA=100 S YEA=0 S CEN=CEN+1
"RTN","C9CFCAST",785,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CFCAST",786,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CFCAST",787,0)
 ..........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",788,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",789,0)
 .........I ($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>DTNOW) D
"RTN","C9CFCAST",790,0)
 ..........;not in this or next month's cycle yet, so try last month
"RTN","C9CFCAST",791,0)
 ..........S MONT=MONT-1
"RTN","C9CFCAST",792,0)
 ..........I MONT=0 D
"RTN","C9CFCAST",793,0)
 ...........S MONT=12
"RTN","C9CFCAST",794,0)
 ...........S YEA=YEA-1 I YEA=-1 D
"RTN","C9CFCAST",795,0)
 ............S YEA=99 S CEN=CEN-1
"RTN","C9CFCAST",796,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CFCAST",797,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CFCAST",798,0)
 ..........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CFCAST",799,0)
 ..........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",800,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",801,0)
 ..........I (MONT=MOA) D
"RTN","C9CFCAST",802,0)
 ...........;go to the previous month
"RTN","C9CFCAST",803,0)
 ...........S MONT=MONT-1
"RTN","C9CFCAST",804,0)
 ...........I MONT=0 D
"RTN","C9CFCAST",805,0)
 ............S MONT=12
"RTN","C9CFCAST",806,0)
 ............S YEA=YEA-1 I YEA=-1 D
"RTN","C9CFCAST",807,0)
 .............S YEA=99 S CEN=CEN-1
"RTN","C9CFCAST",808,0)
 ...........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CFCAST",809,0)
 ...........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CFCAST",810,0)
 ...........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CFCAST",811,0)
 ...........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",812,0)
 ...........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",813,0)
 .........;end CRH JHT 2019 - bug fix during override coding
"RTN","C9CFCAST",814,0)
 ......;end each month based on admit date starting month 3 skip each month 12
"RTN","C9CFCAST",815,0)
 ......;start monthly
"RTN","C9CFCAST",816,0)
 ......I $F(RTEXT,"MONTHLY")>0 D
"RTN","C9CFCAST",817,0)
 .......I ABD="" S ABD="2.0"
"RTN","C9CFCAST",818,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",819,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",820,0)
 .......N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CFCAST",821,0)
 .......N HMS S HMS=$P(DTNOW,".",2)
"RTN","C9CFCAST",822,0)
 .......N THEREST S THEREST=$P(BASEDATE,".",2)
"RTN","C9CFCAST",823,0)
 .......N MONT S MONT=$E(DTNOW,4,5)
"RTN","C9CFCAST",824,0)
 .......N MOA ;month of admission
"RTN","C9CFCAST",825,0)
 .......S MOA=$E(ADATE,4,5)
"RTN","C9CFCAST",826,0)
 .......;start by checking the forecast month
"RTN","C9CFCAST",827,0)
 .......N YEA S YEA=YEAR
"RTN","C9CFCAST",828,0)
 .......N CEN S CEN=CENTURY
"RTN","C9CFCAST",829,0)
 .......;I ((MONT="02")&(DD>28)) S DD=28 ;not taking leap years into account here
"RTN","C9CFCAST",830,0)
 .......;I ((DD>30)&((MONT="04")!(MONT="06")!(MONT="09")!(MONT="11"))) S DD=30
"RTN","C9CFCAST",831,0)
 .......; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CFCAST",832,0)
 .......I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",833,0)
 .......S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",834,0)
 .......;begin CRH JHT 2019 - bug fix during override coding
"RTN","C9CFCAST",835,0)
 .......I ((($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA))!($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>DTNOW)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<DTNOW)) D
"RTN","C9CFCAST",836,0)
 ........I ((($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA))!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<DTNOW)) D
"RTN","C9CFCAST",837,0)
 .........;try next month first
"RTN","C9CFCAST",838,0)
 .........S MONT=MONT+1
"RTN","C9CFCAST",839,0)
 .........I MONT=13 S MONT=1 S YEA=YEA+1 I YEA=100 S YEA=0 S CEN=CEN+1
"RTN","C9CFCAST",840,0)
 .........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CFCAST",841,0)
 .........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CFCAST",842,0)
 .........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",843,0)
 .........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",844,0)
 .........I ($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>DTNOW) D
"RTN","C9CFCAST",845,0)
 ..........;not in this or next month's cycle yet, so try last month
"RTN","C9CFCAST",846,0)
 ..........S MONT=MONT-1
"RTN","C9CFCAST",847,0)
 ..........I MONT=0 D
"RTN","C9CFCAST",848,0)
 ...........S MONT=12
"RTN","C9CFCAST",849,0)
 ...........S YEA=YEA-1 I YEA=-1 D
"RTN","C9CFCAST",850,0)
 ............S YEA=99 S CEN=CEN-1
"RTN","C9CFCAST",851,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CFCAST",852,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CFCAST",853,0)
 ..........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CFCAST",854,0)
 ..........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",855,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",856,0)
 ..........I (($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA)) D
"RTN","C9CFCAST",857,0)
 ...........;go to the previous month
"RTN","C9CFCAST",858,0)
 ...........S MONT=MONT-1
"RTN","C9CFCAST",859,0)
 ...........I MONT=0 D
"RTN","C9CFCAST",860,0)
 ............S MONT=12
"RTN","C9CFCAST",861,0)
 ............S YEA=YEA-1 I YEA=-1 D
"RTN","C9CFCAST",862,0)
 .............S YEA=99 S CEN=CEN-1
"RTN","C9CFCAST",863,0)
 ...........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CFCAST",864,0)
 ...........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CFCAST",865,0)
 ...........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CFCAST",866,0)
 ...........I DD>28 S DD=$$FIXDAY^C9CMODND(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CFCAST",867,0)
 ...........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CFCAST",868,0)
 ...........;end CRH JHT 2019 - bug fix during override coding
"RTN","C9CFCAST",869,0)
 ......;end monthly
"RTN","C9CFCAST",870,0)
 ......;start weekly
"RTN","C9CFCAST",871,0)
 ......I $F(RTEXT,"WEEKLY")>0 D
"RTN","C9CFCAST",872,0)
 .......I ABD="" S ABD="2.0"
"RTN","C9CFCAST",873,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",874,0)
 .......S ABHOURS=23 ;in this case we allow the full two days before ;august 1
"RTN","C9CFCAST",875,0)
 .......S ABMINS=59 ;august 1
"RTN","C9CFCAST",876,0)
 .......I BASEDATE>0 D
"RTN","C9CFCAST",877,0)
 ........N NUMDAYS
"RTN","C9CFCAST",878,0)
 ........S NUMDAYS=7
"RTN","C9CFCAST",879,0)
 ........N DSAD
"RTN","C9CFCAST",880,0)
 ........S DSAD=$$FMDIFF^XLFDT(DTNOW,BASEDATE,1) ;difference in days
"RTN","C9CFCAST",881,0)
 ........I DSAD>0 D
"RTN","C9CFCAST",882,0)
 .........N MDSAD
"RTN","C9CFCAST",883,0)
 .........S MDSAD=DSAD#NUMDAYS
"RTN","C9CFCAST",884,0)
 .........S BASEDATE=$$FMADD^XLFDT(DTNOW\1,7-MDSAD)_.2359
"RTN","C9CFCAST",885,0)
 .........I ((DSAD>7)&((MDSAD=0)!(MDSAD>ABD))) D ;still within last week's cycle
"RTN","C9CFCAST",886,0)
 ..........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-7)
"RTN","C9CFCAST",887,0)
 .........I $F(RTEXT,"SKIP ADMISSION ANNIVERSAY WEEK")>0 D
"RTN","C9CFCAST",888,0)
 ..........N YY S YY=YEAR
"RTN","C9CFCAST",889,0)
 ..........N CC S CC=CENTURY
"RTN","C9CFCAST",890,0)
 ..........N THEREST S THEREST=$E(BASEDATE,4,99)
"RTN","C9CFCAST",891,0)
 ..........N ANNDATE
"RTN","C9CFCAST",892,0)
 ..........S ANNDATE=CENTURY_YEAR_THEREST ;admission anniversary date
"RTN","C9CFCAST",893,0)
 ..........I ((ANNDATE>$$FMADD^XLFDT(BASEDATE,-ABDAYS))&(ANNDATE<$$FMADD^XLFDT(BASEDATE,ABDAYS))) D
"RTN","C9CFCAST",894,0)
 ...........;skip this week since it is the anniversary week
"RTN","C9CFCAST",895,0)
 ...........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-7) ;go to the previous week if this is anniversary week
"RTN","C9CFCAST",896,0)
 ......;end weekly
"RTN","C9CFCAST",897,0)
 ......I (RULELEVELFOUND="")&(($F(RTEXT,"X HOURS")>0)&($F(RTEXT,"EVERY")'>0)) D
"RTN","C9CFCAST",898,0)
 .......I ABD="" S ABD="0.8"
"RTN","C9CFCAST",899,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CFCAST",900,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CFCAST",901,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CFCAST",902,0)
 .......I OFFSET>(ABHOURS+48) D
"RTN","C9CFCAST",903,0)
 ........I PREVAHOURS=0 D ;july 12, 2019
"RTN","C9CFCAST",904,0)
 .........S PREVAHOURS=OFFSET ;july 12, 2019
"RTN","C9CFCAST",905,0)
 .........S ABHOURS=OFFSET+48 ;we need to cover two days prior to admission as well ;july 12, 2019
"RTN","C9CFCAST",906,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CFCAST",907,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,,OFFSET)
"RTN","C9CFCAST",908,0)
 .....;start every X hours based on admit date
"RTN","C9CFCAST",909,0)
 .....I RTEXT="EVERY X HOURS BASED ON ADMIT DATE" D
"RTN","C9CFCAST",910,0)
 ......S BASEDATE=$G(ADATE)
"RTN","C9CFCAST",911,0)
 ......I BASEDATE>0 D
"RTN","C9CFCAST",912,0)
 .......N NUMHOURS
"RTN","C9CFCAST",913,0)
 .......S NUMHOURS=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CFCAST",914,0)
 .......I NUMHOURS>0 D
"RTN","C9CFCAST",915,0)
 ........N SSAD ;seconds since admit date
"RTN","C9CFCAST",916,0)
 ........S SSAD=$$FMDIFF^XLFDT(DTNOW,ADATE,2) ;difference in seconds
"RTN","C9CFCAST",917,0)
 ........I SSAD>0 D
"RTN","C9CFCAST",918,0)
 .........N HSAD ;hours since admit date
"RTN","C9CFCAST",919,0)
 .........S HSAD=SSAD\3600
"RTN","C9CFCAST",920,0)
 .........N MHSAD
"RTN","C9CFCAST",921,0)
 .........S MHSAD=HSAD#NUMHOURS ;how many whole hours till next due time
"RTN","C9CFCAST",922,0)
 .........S BASEDATE=$$FMADD^XLFDT(ADATE,,HSAD+MHSAD) ;next due time
"RTN","C9CFCAST",923,0)
 .....;end every X hours based on admit date
"RTN","C9CFCAST",924,0)
 .....;start CRH JHT 2019 new rules during override logic coding
"RTN","C9CFCAST",925,0)
 .....;start ONE TIME - ADMISSION DAY PLUS X DAYS
"RTN","C9CFCAST",926,0)
 .....I RTEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CFCAST",927,0)
 ......S BASEDATE=ADATE
"RTN","C9CFCAST",928,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CFCAST",929,0)
 ......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CFCAST",930,0)
 .......S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CFCAST",931,0)
 .......I BASEDATE>0 S BASEDATE=(BASEDATE\1)_".1200" ;set due time to noon
"RTN","C9CFCAST",932,0)
 .......;will have to set overdue logic to offset plus 12 hours to give the whole day
"RTN","C9CFCAST",933,0)
 .....;end ONE TIME - ADMISSION DAY PLUS X DAYS
"RTN","C9CFCAST",934,0)
 .....;end CRH JHT 2019 new rules during override logic coding
"RTN","C9CFCAST",935,0)
 .....;start every X days based on admit date
"RTN","C9CFCAST",936,0)
 .....I RTEXT="EVERY X DAYS BASED ON ADMIT DATE" D
"RTN","C9CFCAST",937,0)
 ......S BASEDATE=$G(ADATE)
"RTN","C9CFCAST",938,0)
 ......I BASEDATE>0 D
"RTN","C9CFCAST",939,0)
 .......N NUMDAYS
"RTN","C9CFCAST",940,0)
 .......S NUMDAYS=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CFCAST",941,0)
 .......I NUMDAYS>0 D
"RTN","C9CFCAST",942,0)
 ........N DSAD ;days since admit date
"RTN","C9CFCAST",943,0)
 ........S DSAD=$$FMDIFF^XLFDT(DTNOW,BASEDATE,1) ;difference in days
"RTN","C9CFCAST",944,0)
 ........I DSAD>0 D
"RTN","C9CFCAST",945,0)
 .........N MDSAD
"RTN","C9CFCAST",946,0)
 .........S MDSAD=DSAD#NUMDAYS
"RTN","C9CFCAST",947,0)
 .........S BASEDATE=$$FMADD^XLFDT(DTNOW\1,MDSAD)_.2359
"RTN","C9CFCAST",948,0)
 .........S ABHOURS=23 ;august 1
"RTN","C9CFCAST",949,0)
 .........S ABMINS=59 ;august 1
"RTN","C9CFCAST",950,0)
 .....;end every X days based on admit date
"RTN","C9CFCAST",951,0)
 .....I (RTEXT="DATE OF YEAR") D
"RTN","C9CFCAST",952,0)
 ......;use CENTURY and YEAR from above
"RTN","C9CFCAST",953,0)
 ......S BASEDATE=CENTURY_YEAR_$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,3)),"^",1)
"RTN","C9CFCAST",954,0)
 .....;start DAILY AT 0830
"RTN","C9CFCAST",955,0)
 .....I (RTEXT="DAILY AT 0830") D
"RTN","C9CFCAST",956,0)
 ......S BASEDATE=$P(DTNOW,".",1)_".0830"
"RTN","C9CFCAST",957,0)
 .....;end DAILY AT 0830
"RTN","C9CFCAST",958,0)
 .....;start DAY OF WEEK
"RTN","C9CFCAST",959,0)
 .....I (RTEXT="DAY OF WEEK") D
"RTN","C9CFCAST",960,0)
 ......N NDOW S NDOW=$$DOW^XLFDT(DTNOW)
"RTN","C9CFCAST",961,0)
 ......I NDOW'="" D
"RTN","C9CFCAST",962,0)
 .......N DOW S DOW=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,5)),"^",1)
"RTN","C9CFCAST",963,0)
 .......I DOW'="" D
"RTN","C9CFCAST",964,0)
 ........;first find the most recent day that matches DOW
"RTN","C9CFCAST",965,0)
 ........S BASEDATE=DTNOW
"RTN","C9CFCAST",966,0)
 ........I NDOW'=DOW  D ;today doesn't match - check most recent to see if within range
"RTN","C9CFCAST",967,0)
 .........N DFOUND
"RTN","C9CFCAST",968,0)
 .........S DFOUND=0
"RTN","C9CFCAST",969,0)
 .........N DTX
"RTN","C9CFCAST",970,0)
 .........N SAVEDATE
"RTN","C9CFCAST",971,0)
 .........S SAVEDATE=BASEDATE
"RTN","C9CFCAST",972,0)
 .........F DTX=1:1:7 Q:(DFOUND=1)  D
"RTN","C9CFCAST",973,0)
 ..........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-1)
"RTN","C9CFCAST",974,0)
 ..........I $$DOW^XLFDT(BASEDATE)=DOW D
"RTN","C9CFCAST",975,0)
 ...........S DFOUND=1
"RTN","C9CFCAST",976,0)
 .........I DFOUND=1 D
"RTN","C9CFCAST",977,0)
 ..........;check to see if within range
"RTN","C9CFCAST",978,0)
 ..........I $$FMADD^XLFDT(BASEDATE,ABDAYS)<DTNOW D ;most recent no good, find next ;changed ABD to ABDAYS during override coding
"RTN","C9CFCAST",979,0)
 ...........S BASEDATE=SAVEDATE
"RTN","C9CFCAST",980,0)
 ...........S DFOUND=0
"RTN","C9CFCAST",981,0)
 ...........F DTX=1:1:7 Q:(DFOUND=1)  D
"RTN","C9CFCAST",982,0)
 ............S BASEDATE=$$FMADD^XLFDT(BASEDATE,1)
"RTN","C9CFCAST",983,0)
 ............I $$DOW^XLFDT(BASEDATE)=DOW D
"RTN","C9CFCAST",984,0)
 .............S DFOUND=1
"RTN","C9CFCAST",985,0)
 .........S SAVEDATE=""
"RTN","C9CFCAST",986,0)
 ........S BASEDATE=$P(BASEDATE,".",1)_".2359"
"RTN","C9CFCAST",987,0)
 ........S ABHOURS=23 ;august 1
"RTN","C9CFCAST",988,0)
 ........S ABMINS=59 ;august 1
"RTN","C9CFCAST",989,0)
 .....;end DAY OF WEEK
"RTN","C9CFCAST",990,0)
 .....I (RTEXT="DATE OF MONTH") D
"RTN","C9CFCAST",991,0)
 ......N DOM S DOM=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,4)),"^",1)
"RTN","C9CFCAST",992,0)
 ......I DOM'="" D
"RTN","C9CFCAST",993,0)
 .......I $L(DOM)=1 S DOM="0"_DOM
"RTN","C9CFCAST",994,0)
 .......I $L(DOM)=2 D
"RTN","C9CFCAST",995,0)
 ........N DNOW S DNOW=$E(DHMS,3,4) ;day now
"RTN","C9CFCAST",996,0)
 ........N MNOW S MNOW=$E(DHMS,1,2) ;month now
"RTN","C9CFCAST",997,0)
 ........N REMA S REMA=$P(DHMS,".",2) ;hours, minutes, and seconds
"RTN","C9CFCAST",998,0)
 ........;adjust for days in month
"RTN","C9CFCAST",999,0)
 ........I (DOM>28) D
"RTN","C9CFCAST",1000,0)
 .........I (MNOW="02") D ;february
"RTN","C9CFCAST",1001,0)
 ..........S DOM="28"
"RTN","C9CFCAST",1002,0)
 .........I (DOM>30) D
"RTN","C9CFCAST",1003,0)
 ..........I ((MNOW="04")!(MNOW="06")!(MNOW="09")!(MNOW="11")) D
"RTN","C9CFCAST",1004,0)
 ...........S DOM="30"
"RTN","C9CFCAST",1005,0)
 ........;check the acceptable range
"RTN","C9CFCAST",1006,0)
 ........N ADAYS S ADAYS=$P(ABD,".",1)
"RTN","C9CFCAST",1007,0)
 ........N CKD S CKD=CENTURY_YEAR_MNOW_DOM_"."_REMA
"RTN","C9CFCAST",1008,0)
 ........I ((DTNOW>$$FMADD^XLFDT(CKD,(-1*ADAYS)))&(DTNOW<$$FMADD^XLFDT(CKD,ADAYS))) D
"RTN","C9CFCAST",1009,0)
 .........S BASEDATE=CKD
"RTN","C9CFCAST",1010,0)
 ........E  D
"RTN","C9CFCAST",1011,0)
 .........I MNOW<12 S MNOW=MNOW+1
"RTN","C9CFCAST",1012,0)
 .........I MNOW=12 S MNOW="01" S YEAR=YEAR+1
"RTN","C9CFCAST",1013,0)
 .........I $L(YEAR)=1 S YEAR="0"_YEAR
"RTN","C9CFCAST",1014,0)
 .........I $L(MNOW)=1 S MNOW="0"_MNOW
"RTN","C9CFCAST",1015,0)
 .........I YEAR=100 S YEAR="00" S CENTURY=CENTURY+1
"RTN","C9CFCAST",1016,0)
 .........S BASEDATE=CENTURY_YEAR_MNOW_DOM_"."_2359
"RTN","C9CFCAST",1017,0)
 .........S ABHOURS=23 ;august 1
"RTN","C9CFCAST",1018,0)
 .........S ABMINS=59 ;august 1
"RTN","C9CFCAST",1019,0)
 .....I (RTEXT="ONE TIME - CALENDAR DATE") D
"RTN","C9CFCAST",1020,0)
 ......S BASEDATE=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,2)),"^",1)
"RTN","C9CFCAST",1021,0)
 .....I ((BASEDATE'=ADATE)&(BASEDATE'=0)&($F(RTEXT,"PASS-THROUGH REMINDER")'>0)) D ;not a pass through reminder ;added basedate'=adate during override coding - never due exactly at admit time and shows that no rules were applicable
"RTN","C9CFCAST",1022,0)
 ......S RULELEVELFOUND=LEVEL
"RTN","C9CFCAST",1023,0)
 ......S C9CCHECK=0
"RTN","C9CFCAST",1024,0)
 ......I ((ENDDATE>BASEDATE)&(BASEDATE>$$FMADD^XLFDT(DTNOW,-350))) S C9CCHECK=1
"RTN","C9CFCAST",1025,0)
 ......I C9CCHECK>0 D
"RTN","C9CFCAST",1026,0)
 .......;check to see if there is a completed note in this range or after
"RTN","C9CFCAST",1027,0)
 .......I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CFCAST",1028,0)
 ........I DUEDATE<BASEDATE D
"RTN","C9CFCAST",1029,0)
 .........S DUEDATE=BASEDATE
"RTN","C9CFCAST",1030,0)
 .........S APRULE=RPOINT ;applicable rule
"RTN","C9CFCAST",1031,0)
 .........I $F(RTEXT,"X DAYS")>0 D ;added during override coding
"RTN","C9CFCAST",1032,0)
 ..........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1) ;added during override coding
"RTN","C9CFCAST",1033,0)
 ..........S OFST=OFFSET ;added during override coding
"RTN","C9CFCAST",1034,0)
 .........I $F(RTEXT,"X HOURS")>0 D ;added during override coding
"RTN","C9CFCAST",1035,0)
 ..........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1) ;added during override coding
"RTN","C9CFCAST",1036,0)
 ..........S OFST=OFFSET ;added during override coding
"RTN","C9CFCAST",1037,0)
 .......I NONOTE=0 D
"RTN","C9CFCAST",1038,0)
 ........;check to see if there is a completed note of this title within or after this time period
"RTN","C9CFCAST",1039,0)
 ........;first check within the time period
"RTN","C9CFCAST",1040,0)
 ........N LASTDATE
"RTN","C9CFCAST",1041,0)
 ........S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CFCAST",1042,0)
 ........I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS,-ABMINS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CFCAST",1043,0)
 .........I DUEDATE<BASEDATE D
"RTN","C9CFCAST",1044,0)
 ..........S APRULE=RPOINT
"RTN","C9CFCAST",1045,0)
 ..........S DUEDATE=BASEDATE
"RTN","C9CFCAST",1046,0)
 ..........I $F(RTEXT,"X DAYS")>0 D ;added during override coding
"RTN","C9CFCAST",1047,0)
 ...........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1) ;added during override coding
"RTN","C9CFCAST",1048,0)
 ...........S OFST=OFFSET ;added during override coding
"RTN","C9CFCAST",1049,0)
 ..........I $F(RTEXT,"X HOURS")>0 D ;added during override coding
"RTN","C9CFCAST",1050,0)
 ...........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1) ;added during override coding
"RTN","C9CFCAST",1051,0)
 ...........S OFST=OFFSET ;added during override coding
"RTN","C9CFCAST",1052,0)
 .....E  D ;pass through reminder
"RTN","C9CFCAST",1053,0)
 ......I ((BASEDATE'=0)&($F(RTEXT,"PASS-THROUGH REMINDER")>0)) D ;added find text during override coding to help eliminate due at exact admit time bug
"RTN","C9CFCAST",1054,0)
 .......S RULELEVELFOUND=LEVEL
"RTN","C9CFCAST",1055,0)
 .......N PHRASE
"RTN","C9CFCAST",1056,0)
 .......S PHRASE=""
"RTN","C9CFCAST",1057,0)
 .......I $G(REMIEN)>0 D
"RTN","C9CFCAST",1058,0)
 ........S PHRASE=$P($G(^PXD(811.9,REMIEN,0)),"^",4)
"RTN","C9CFCAST",1059,0)
 .......N C9CCHECK
"RTN","C9CFCAST",1060,0)
 .......I PHRASE'="" D
"RTN","C9CFCAST",1061,0)
 ........S C9CCHECK=$$SHOW^C9CPTR(PHRASE,BASEDATE)
"RTN","C9CFCAST",1062,0)
 .......E  D
"RTN","C9CFCAST",1063,0)
 ........S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CFCAST",1064,0)
 .......I C9CCHECK>0 D
"RTN","C9CFCAST",1065,0)
 ........I DUEDATE<BASEDATE D
"RTN","C9CFCAST",1066,0)
 .........S APRULE=RPOINT_"^"_$G(PHRASE)
"RTN","C9CFCAST",1067,0)
 .........S DUEDATE=BASEDATE
"RTN","C9CFCAST",1068,0)
 ;----------------------
"RTN","C9CFCAST",1069,0)
 Q
"RTN","C9CFCAST",1070,0)
RPCGNOTE(C9CRET,NOTEIEN) ;RPC to bring back text of note
"RTN","C9CFCAST",1071,0)
 Q:$G(NOTEIEN)'>0
"RTN","C9CFCAST",1072,0)
 N GRET
"RTN","C9CFCAST",1073,0)
 N CNT
"RTN","C9CFCAST",1074,0)
 S CNT=0
"RTN","C9CFCAST",1075,0)
 D TGET^TIUSRVR1(.GRET,+NOTEIEN)
"RTN","C9CFCAST",1076,0)
 I GRET'="" D
"RTN","C9CFCAST",1077,0)
 .N PATIEN
"RTN","C9CFCAST",1078,0)
 .S PATIEN=$P($G(^TIU(8925,+NOTEIEN,0)),"^",2)
"RTN","C9CFCAST",1079,0)
 .I PATIEN>0 D
"RTN","C9CFCAST",1080,0)
 ..N PATNAME
"RTN","C9CFCAST",1081,0)
 ..S PATNAME=$P($G(^DPT(PATIEN,0)),"^",1)
"RTN","C9CFCAST",1082,0)
 ..S CNT=CNT+1
"RTN","C9CFCAST",1083,0)
 ..S C9CRET(CNT)="Patient: "_PATNAME        
"RTN","C9CFCAST",1084,0)
 ..N NX
"RTN","C9CFCAST",1085,0)
 ..S NX=0 F  S NX=$O(@GRET@(NX)) Q:NX'>0  D
"RTN","C9CFCAST",1086,0)
 ...S CNT=CNT+1
"RTN","C9CFCAST",1087,0)
 ...S C9CRET(CNT)=(@GRET@(NX))
"RTN","C9CFCAST",1088,0)
 Q
"RTN","C9CGDBM")
0^6^B28420070
"RTN","C9CGDBM",1,0)
C9CGDBM ;CRH JHT 2018 - get dashboard module definitions
"RTN","C9CGDBM",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CGDBM",3,0)
 ;
"RTN","C9CGDBM",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CGDBM",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CGDBM",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CGDBM",7,0)
 ;
"RTN","C9CGDBM",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CGDBM",9,0)
 ;
"RTN","C9CGDBM",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CGDBM",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CGDBM",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CGDBM",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CGDBM",14,0)
 ;limitations under the License.
"RTN","C9CGDBM",15,0)
 Q ;no entry from top;;;;;Build 1
"RTN","C9CGDBM",16,0)
RPCGM(C9CRET) ;get modules
"RTN","C9CGDBM",17,0)
 Q:$G(DUZ)'>0
"RTN","C9CGDBM",18,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CGDBM",19,0)
 N CNT
"RTN","C9CGDBM",20,0)
 S CNT=0
"RTN","C9CGDBM",21,0)
 N BX
"RTN","C9CGDBM",22,0)
 S BX="" F  S BX=$O(^C9C(300894,"B",BX)) Q:BX=""  D
"RTN","C9CGDBM",23,0)
 .N TX
"RTN","C9CGDBM",24,0)
 .S TX=0 F  S TX=$O(^C9C(300894,"B",BX,TX)) Q:TX'>0  D
"RTN","C9CGDBM",25,0)
 ..N MNAME
"RTN","C9CGDBM",26,0)
 ..S MNAME=$P($G(^C9C(300894,TX,0)),"^",1)
"RTN","C9CGDBM",27,0)
 ..N MACTIVE
"RTN","C9CGDBM",28,0)
 ..S MACTIVE=+$P($G(^C9C(300894,TX,0)),"^",2)
"RTN","C9CGDBM",29,0)
 ..;start CRH JHT 2019 - add required key functionality
"RTN","C9CGDBM",30,0)
 ..N RKIEN,RKEY ;required key ien
"RTN","C9CGDBM",31,0)
 ..S RKIEN=$P($G(^C9C(300894,TX,0)),"^",3)
"RTN","C9CGDBM",32,0)
 ..I RKIEN>0 S RKEY=$P($G(^DIC(19.1,RKIEN,0)),"^",1) I RKEY'="" I '$D(^XUSEC(RKEY,DUZ)) Q
"RTN","C9CGDBM",33,0)
 ..;end CRH JHT 2019 - add required key functionality
"RTN","C9CGDBM",34,0)
 ..N ACTDIV
"RTN","C9CGDBM",35,0)
 ..S ACTDIV=0
"RTN","C9CGDBM",36,0)
 ..I $D(^C9C(300894,TX,11,"B",DUZ(2))) D
"RTN","C9CGDBM",37,0)
 ...S ACTDIV=1
"RTN","C9CGDBM",38,0)
 ..I ((MNAME'="")&((MACTIVE>0)!($D(^XUSEC("INACTIVE DASHBOARD MODULES",DUZ))))&(ACTDIV>0)) D
"RTN","C9CGDBM",39,0)
 ...N BTEXT
"RTN","C9CGDBM",40,0)
 ...S BTEXT=$P($G(^C9C(300894,TX,1)),"^",1)
"RTN","C9CGDBM",41,0)
 ...N MTYPEAB
"RTN","C9CGDBM",42,0)
 ...S MTYPEAB=$P($G(^C9C(300894,TX,3)),"^",1)
"RTN","C9CGDBM",43,0)
 ...N MTYPE
"RTN","C9CGDBM",44,0)
 ...S MTYPE=""
"RTN","C9CGDBM",45,0)
 ...I MTYPEAB="DG" S MTYPE="DataGrid"
"RTN","C9CGDBM",46,0)
 ...I MTYPEAB="RT" S MTYPE="RichTextList"
"RTN","C9CGDBM",47,0)
 ...I MTYPE'="" D
"RTN","C9CGDBM",48,0)
 ....N DPRPCIEN
"RTN","C9CGDBM",49,0)
 ....S DPRPCIEN=$P($G(^C9C(300894,TX,6)),"^",1)
"RTN","C9CGDBM",50,0)
 ....I DPRPCIEN>0 D
"RTN","C9CGDBM",51,0)
 .....N DPRPC
"RTN","C9CGDBM",52,0)
 .....S DPRPC=$P($G(^XWB(8994,DPRPCIEN,0)),"^",1)
"RTN","C9CGDBM",53,0)
 .....I DPRPC'="" D
"RTN","C9CGDBM",54,0)
 ......N PLRPCIEN ;remote procedure IEN
"RTN","C9CGDBM",55,0)
 ......S PLRPCIEN=$P($G(^C9C(300894,TX,7)),"^",1)
"RTN","C9CGDBM",56,0)
 ......N PLRPC
"RTN","C9CGDBM",57,0)
 ......S PLRPC="" ;remote procedure name
"RTN","C9CGDBM",58,0)
 ......I PLRPCIEN>0 S PLRPC=$P($G(^XWB(8994,PLRPCIEN,0)),"^",1)
"RTN","C9CGDBM",59,0)
 ......N LOCLBL ;locations label override
"RTN","C9CGDBM",60,0)
 ......S LOCLBL=$P($G(^C9C(300894,TX,8)),"^",1)
"RTN","C9CGDBM",61,0)
 ......;N SULRPCIEN ;not used anymore
"RTN","C9CGDBM",62,0)
 ......;S SULRPCIEN=$P($G(^C9C(300894,TX,9)),"^",1)
"RTN","C9CGDBM",63,0)
 ......N SULRPC ;not used anymore but included in return value as blank
"RTN","C9CGDBM",64,0)
 ......S SULRPC=""
"RTN","C9CGDBM",65,0)
 ......;I SULRPCIEN>0 S SULRPC=$P($G(^XWB(8994,SULRPCIEN,0)),"^",1)
"RTN","C9CGDBM",66,0)
 ......N GFVRPCIEN ;rpc to get possible filter values
"RTN","C9CGDBM",67,0)
 ......S GFVRPCIEN=$P($G(^C9C(300894,TX,10)),"^",1)
"RTN","C9CGDBM",68,0)
 ......N GFVRPC ;possible filter values ien name
"RTN","C9CGDBM",69,0)
 ......S GFVRPC=""
"RTN","C9CGDBM",70,0)
 ......I GFVRPCIEN>0 S GFVRPC=$P($G(^XWB(8994,GFVRPCIEN,0)),"^",1)
"RTN","C9CGDBM",71,0)
 ......N ACTTEXT ;action button text
"RTN","C9CGDBM",72,0)
 ......S ACTTEXT=$P($G(^C9C(300894,TX,12)),"^",1)
"RTN","C9CGDBM",73,0)
 ......N ACTRPCIEN ;action button RPC IEN
"RTN","C9CGDBM",74,0)
 ......S ACTRPCIEN=$P($G(^C9C(300894,TX,13)),"^",1)
"RTN","C9CGDBM",75,0)
 ......N ACTRPC
"RTN","C9CGDBM",76,0)
 ......S ACTRPC=""
"RTN","C9CGDBM",77,0)
 ......I ACTRPCIEN>0 S ACTRPC=$P($G(^XWB(8994,ACTRPCIEN,0)),"^",1)
"RTN","C9CGDBM",78,0)
 ......S CNT=CNT+1
"RTN","C9CGDBM",79,0)
 ......S C9CRET(CNT)=TX_"^"_MNAME_"^"_BTEXT_"^"_MTYPE_"^"_DPRPC_"^"_PLRPC_"^"_LOCLBL_"^"_SULRPC_"^"_GFVRPC_"^"_ACTTEXT_"^"_ACTRPC
"RTN","C9CGDBM",80,0)
 Q
"RTN","C9CGDBM",81,0)
RPCGC(C9CRET,MIEN) ;get datagrid column headers and supporting information
"RTN","C9CGDBM",82,0)
 ;MIEN - module ien
"RTN","C9CGDBM",83,0)
 ;C9CRET - returns Column Name;Column Type^Whether to Display^Click RPC Name^Hint^ColumnIEN^Parameter Columns
"RTN","C9CGDBM",84,0)
 ;Parameter Columns - semicolon separated list of column iens in RPC required order
"RTN","C9CGDBM",85,0)
 N CNT
"RTN","C9CGDBM",86,0)
 S CNT=0
"RTN","C9CGDBM",87,0)
 Q:$G(MIEN)'>0
"RTN","C9CGDBM",88,0)
 N OX
"RTN","C9CGDBM",89,0)
 S OX=0 F  S OX=$O(^C9C(300894,MIEN,4,"C9CORDER",OX)) Q:OX'>0  D
"RTN","C9CGDBM",90,0)
 .N AX
"RTN","C9CGDBM",91,0)
 .S AX=0 F  S AX=$O(^C9C(300894,MIEN,4,"C9CORDER",OX,AX)) Q:AX'>0  D
"RTN","C9CGDBM",92,0)
 ..N CNAME,CDISPLAY,CRPC,CHINT
"RTN","C9CGDBM",93,0)
 ..S CNAME=$P($G(^C9C(300894,MIEN,4,AX,0)),"^",1)
"RTN","C9CGDBM",94,0)
 ..S CTYPE=$P($G(^C9C(300894,MIEN,4,AX,0)),"^",2)
"RTN","C9CGDBM",95,0)
 ..S CDISPLAY=+$P($G(^C9C(300894,MIEN,4,AX,2)),"^",1)
"RTN","C9CGDBM",96,0)
 ..I CDISPLAY'>0 D
"RTN","C9CGDBM",97,0)
 ...N MCODE
"RTN","C9CGDBM",98,0)
 ...S MCODE=$G(^C9C(300894,MIEN,4,AX,5))
"RTN","C9CGDBM",99,0)
 ...I MCODE'="" D
"RTN","C9CGDBM",100,0)
 ....N DHCL
"RTN","C9CGDBM",101,0)
 ....X MCODE
"RTN","C9CGDBM",102,0)
 ....I $G(DHCL)>0 S CDISPLAY=1
"RTN","C9CGDBM",103,0)
 ..S CRPC=$P($G(^C9C(300894,MIEN,4,AX,3)),"^",1)
"RTN","C9CGDBM",104,0)
 ..N RPCNAME
"RTN","C9CGDBM",105,0)
 ..S RPCNAME="" I CRPC>0 D
"RTN","C9CGDBM",106,0)
 ...S RPCNAME=$P($G(^XWB(8994,+CRPC,0)),"^",1)
"RTN","C9CGDBM",107,0)
 ..S CHINT=$P($G(^C9C(300894,MIEN,4,AX,4)),"^",1)
"RTN","C9CGDBM",108,0)
 ..N PARMCOLS
"RTN","C9CGDBM",109,0)
 ..S PARMCOLS=$P($G(^C9C(300894,MIEN,4,AX,3)),"^",2)
"RTN","C9CGDBM",110,0)
 ..N CIEN S CIEN=AX
"RTN","C9CGDBM",111,0)
 ..S CNT=CNT+1
"RTN","C9CGDBM",112,0)
 ..S C9CRET(CNT)=CNAME_";"_CTYPE_"^"_CDISPLAY_"^"_RPCNAME_"^"_CHINT_"^"_CIEN_"^"_PARMCOLS
"RTN","C9CGDBM",113,0)
 Q
"RTN","C9CGDBM",114,0)
RPCGBA(C9CRET,MIEN) ;get byte array for button image
"RTN","C9CGDBM",115,0)
 ;MIEN - module ien
"RTN","C9CGDBM",116,0)
 Q:$G(MIEN)'>0
"RTN","C9CGDBM",117,0)
 S C9CRET(1)=""
"RTN","C9CGDBM",118,0)
 N AX
"RTN","C9CGDBM",119,0)
 S AX=0 F  S AX=$O(^C9C(300894,MIEN,2,AX)) Q:AX'>0  D
"RTN","C9CGDBM",120,0)
 .S C9CRET(1)=C9CRET(1)_$G(^C9C(300894,MIEN,2,AX,0))
"RTN","C9CGDBM",121,0)
 Q
"RTN","C9CGDBM",122,0)
RPCGUFI(C9CRET,MIEN) ;get user filterable items for module
"RTN","C9CGDBM",123,0)
 ;MIEN - module ien;instance
"RTN","C9CGDBM",124,0)
 ;C9CRET - array of IEN^NAME
"RTN","C9CGDBM",125,0)
 Q:$G(DUZ)'>0
"RTN","C9CGDBM",126,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CGDBM",127,0)
 N CNT
"RTN","C9CGDBM",128,0)
 S CNT=0
"RTN","C9CGDBM",129,0)
 Q:$G(MIEN)'>0
"RTN","C9CGDBM",130,0)
 N INSTANCE
"RTN","C9CGDBM",131,0)
 S INSTANCE=$P(MIEN,";",2)
"RTN","C9CGDBM",132,0)
 Q:INSTANCE'>0
"RTN","C9CGDBM",133,0)
 S MIEN=+MIEN
"RTN","C9CGDBM",134,0)
 N UIEN
"RTN","C9CGDBM",135,0)
 S UIEN=$O(^C9C(300896,"B",DUZ,0)) ;quit if no user record
"RTN","C9CGDBM",136,0)
 I UIEN'>0 G FIN
"RTN","C9CGDBM",137,0)
 N DIVMOD ;division module ien
"RTN","C9CGDBM",138,0)
 S DIVMOD=$O(^C9C(300896,UIEN,10,"B",DUZ(2),0))
"RTN","C9CGDBM",139,0)
 I DIVMOD'>0 G FIN
"RTN","C9CGDBM",140,0)
 ;get the ien for this module type
"RTN","C9CGDBM",141,0)
 N MODIEN
"RTN","C9CGDBM",142,0)
 S MODIEN=$O(^C9C(300896,UIEN,10,DIVMOD,1,"B",MIEN,0))
"RTN","C9CGDBM",143,0)
 I MODIEN'>0 G FIN
"RTN","C9CGDBM",144,0)
 N INSTIEN
"RTN","C9CGDBM",145,0)
 S INSTIEN=$O(^C9C(300896,UIEN,10,DIVMOD,1,MODIEN,1,"B",INSTANCE,0))
"RTN","C9CGDBM",146,0)
 I INSTIEN>0 D
"RTN","C9CGDBM",147,0)
 .N FX
"RTN","C9CGDBM",148,0)
 .S FX=0 F  S FX=$O(^C9C(300896,UIEN,10,DIVMOD,1,MODIEN,1,INSTIEN,1,FX)) Q:FX'>0  D
"RTN","C9CGDBM",149,0)
 ..N FIEN
"RTN","C9CGDBM",150,0)
 ..S FIEN=$P($G(^C9C(300896,UIEN,10,DIVMOD,1,MODIEN,1,INSTIEN,1,FX,0)),"^",1)
"RTN","C9CGDBM",151,0)
 ..N FNAME
"RTN","C9CGDBM",152,0)
 ..S FNAME=$P($G(^C9C(300896,UIEN,10,DIVMOD,1,MODIEN,1,INSTIEN,1,FX,1)),"^",1)
"RTN","C9CGDBM",153,0)
 ..I ((FIEN'="")&(FNAME'="")) D
"RTN","C9CGDBM",154,0)
 ...S CNT=CNT+1
"RTN","C9CGDBM",155,0)
 ...S C9CRET(CNT)=FIEN_"^"_FNAME
"RTN","C9CGDBM",156,0)
FIN
"RTN","C9CGDBM",157,0)
 I '$D(C9CRET) D ;no user filters, so show the first one only
"RTN","C9CGDBM",158,0)
 .N FRPCIEN
"RTN","C9CGDBM",159,0)
 .S FRPCIEN=$P($G(^C9C(300894,MIEN,10)),"^",1) ;RPC that gets possible filters
"RTN","C9CGDBM",160,0)
 .Q:FRPCIEN'>0
"RTN","C9CGDBM",161,0)
 .N FRET
"RTN","C9CGDBM",162,0)
 .N FTAG
"RTN","C9CGDBM",163,0)
 .S FTAG=$P($G(^XWB(8994,FRPCIEN,0)),"^",2)
"RTN","C9CGDBM",164,0)
 .N FROUTINE
"RTN","C9CGDBM",165,0)
 .S FROUTINE=$P($G(^XWB(8994,FRPCIEN,0)),"^",3)
"RTN","C9CGDBM",166,0)
 .Q:FROUTINE=""
"RTN","C9CGDBM",167,0)
 .N CMD ;command to run
"RTN","C9CGDBM",168,0)
 .S CMD=FTAG_"^"_FROUTINE
"RTN","C9CGDBM",169,0)
 .D @CMD@(.FRET)
"RTN","C9CGDBM",170,0)
 .I $D(FRET) D
"RTN","C9CGDBM",171,0)
 ..I $D(FRET(1)) D
"RTN","C9CGDBM",172,0)
 ...I $P(FRET(1),"^",1)>0 D
"RTN","C9CGDBM",173,0)
 ....I $P(FRET(1),"^",2)'="" D
"RTN","C9CGDBM",174,0)
 .....S C9CRET(1)=FRET(1) ;default to the first found item
"RTN","C9CGDBM",175,0)
 Q
"RTN","C9CGDBM",176,0)
RPCSA(C9CRET,FONT,WWIDTH,WHEIGHT,SLHORIZ,SRHORIZ,SVERT,WINLEFT,WINTOP,MODLIST) ;RPC=C9C SAVE DASHBOARD PREFERENCES
"RTN","C9CGDBM",177,0)
 ;C9CRET - returns 1 for success, 0 for failure
"RTN","C9CGDBM",178,0)
 ;FONT - size 8,9,10,11,12
"RTN","C9CGDBM",179,0)
 ;WWIDTH - window width in pixels
"RTN","C9CGDBM",180,0)
 ;WHEIGHT - window height in pixels
"RTN","C9CGDBM",181,0)
 ;SLHORIZ - left horizontal slider position
"RTN","C9CGDBM",182,0)
 ;SRHORIZ - right horizontal slider position
"RTN","C9CGDBM",183,0)
 ;SVERT - vertical slider position from top
"RTN","C9CGDBM",184,0)
 ;MODLIST - list of modules: (1)MODULE IEN^(2)MODULE INSTANCE^(3)SORT COLUMN^(4)SORT DIRECTION^(5)LOCATION SELECTION IEN^(6)WINDOW LEFT^(7)WINDOW TOP
"RTN","C9CGDBM",185,0)
 S C9CRET=0
"RTN","C9CGDBM",186,0)
 Q:$G(DUZ)'>0
"RTN","C9CGDBM",187,0)
        Q:$G(DUZ(2))'>0
"RTN","C9CGDBM",188,0)
 ;start with window size
"RTN","C9CGDBM",189,0)
 N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",190,0)
 S JFDA(42,300896,"?+1,",.01)=DUZ
"RTN","C9CGDBM",191,0)
 D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",192,0)
 I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",193,0)
 .N USIEN
"RTN","C9CGDBM",194,0)
 .S USIEN=JFIEN(1)
"RTN","C9CGDBM",195,0)
 .K JFDA,JMSG,JFIEN
"RTN","C9CGDBM",196,0)
 .N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",197,0)
 .S JFDA(42,300896.02,"?+1,"_USIEN_",",.01)=DUZ(2)
"RTN","C9CGDBM",198,0)
 .I (($G(WHEIGHT)>0)&($G(WWIDTH)>0)) D
"RTN","C9CGDBM",199,0)
 ..S JFDA(42,300896.02,"?+1,"_USIEN_",",2)=WWIDTH
"RTN","C9CGDBM",200,0)
 ..S JFDA(42,300896.02,"?+1,"_USIEN_",",3)=WHEIGHT
"RTN","C9CGDBM",201,0)
 .I ($G(FONT)>0) D
"RTN","C9CGDBM",202,0)
 ..S JFDA(42,300896.02,"?+1,"_USIEN_",",4)=FONT
"RTN","C9CGDBM",203,0)
 .I ($G(SLHORIZ)>0) D
"RTN","C9CGDBM",204,0)
 ..S JFDA(42,300896.02,"?+1,"_USIEN_",",5)=SLHORIZ
"RTN","C9CGDBM",205,0)
 .I ($G(SRHORIZ)>0) D
"RTN","C9CGDBM",206,0)
 ..S JFDA(42,300896.02,"?+1,"_USIEN_",",6)=SRHORIZ
"RTN","C9CGDBM",207,0)
 .I ($G(SVERT)>0) D
"RTN","C9CGDBM",208,0)
 ..S JFDA(42,300896.02,"?+1,"_USIEN_",",7)=SVERT
"RTN","C9CGDBM",209,0)
 .S JFDA(42,300896.02,"?+1,"_USIEN_",",8)=+$G(WINLEFT)
"RTN","C9CGDBM",210,0)
 .S JFDA(42,300896.02,"?+1,"_USIEN_",",9)=+$G(WINTOP)
"RTN","C9CGDBM",211,0)
 .D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",212,0)
 .I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",213,0)
 ..S C9CRET=1 
"RTN","C9CGDBM",214,0)
 ;first set current saved modules to not shown
"RTN","C9CGDBM",215,0)
 N DIEN
"RTN","C9CGDBM",216,0)
 S DIEN=$O(^C9C(300896,"B",DUZ,0))
"RTN","C9CGDBM",217,0)
 Q:DIEN'>0
"RTN","C9CGDBM",218,0)
 N DIVMOD ;division module ien
"RTN","C9CGDBM",219,0)
 S DIVMOD=$O(^C9C(300896,DIEN,10,"B",DUZ(2),0))
"RTN","C9CGDBM",220,0)
 Q:DIVMOD'>0
"RTN","C9CGDBM",221,0)
 N MX
"RTN","C9CGDBM",222,0)
 S MX=0 F  S MX=$O(^C9C(300896,DIEN,10,DIVMOD,1,MX)) Q:MX'>0  D           
"RTN","C9CGDBM",223,0)
 .N IX
"RTN","C9CGDBM",224,0)
 .S IX=0 F  S IX=$O(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX)) Q:IX'>0  D
"RTN","C9CGDBM",225,0)
 ..N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",226,0)
 ..S JFDA(42,300896.212,IX_","_MX_","_DIVMOD_","_DIEN_",",2)=0
"RTN","C9CGDBM",227,0)
 ..D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",228,0)
 ;then add/update shown modules
"RTN","C9CGDBM",229,0)
 ;MODLIST - zero based list of modules: (1)MODULE IEN^(2)MODULE INSTANCE^(3)SORT COLUMN^(4)SORT DIRECTION^(5)LOCATION SELECTION IEN
"RTN","C9CGDBM",230,0)
 S MX="" F  S MX=$O(MODLIST(MX)) Q:((MX="")!(MX'>-1))  D ;zero based
"RTN","C9CGDBM",231,0)
 .N MODIEN,INST,SCOL,SDIR,LOC
"RTN","C9CGDBM",232,0)
 .S MODIEN=$P(MODLIST(MX),"^",1)
"RTN","C9CGDBM",233,0)
 .S INST=$P(MODLIST(MX),"^",2)
"RTN","C9CGDBM",234,0)
 .S SCOL=$P(MODLIST(MX),"^",3)
"RTN","C9CGDBM",235,0)
 .S SDIR=$P(MODLIST(MX),"^",4)
"RTN","C9CGDBM",236,0)
 .S LOC=$P(MODLIST(MX),"^",5)
"RTN","C9CGDBM",237,0)
 .I ((MODIEN>0)&(INST>0)) D
"RTN","C9CGDBM",238,0)
 ..N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",239,0)
 ..S JFDA(42,300896,"?+1,",.01)=DUZ
"RTN","C9CGDBM",240,0)
 ..D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",241,0)
 ..I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",242,0)
 ...N USIEN
"RTN","C9CGDBM",243,0)
 ...S USIEN=JFIEN(1)
"RTN","C9CGDBM",244,0)
 ...N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",245,0)
 ...S JFDA(42,300896.02,"?+1,"_USIEN_",",.01)=DUZ(2)
"RTN","C9CGDBM",246,0)
 ...D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",247,0)
 ...I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",248,0)
 ....N DIVIEN
"RTN","C9CGDBM",249,0)
 ....S DIVIEN=JFIEN(1)
"RTN","C9CGDBM",250,0)
 ....N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",251,0)
 ....S JFDA(42,300896.21,"?+1,"_DIVIEN_","_USIEN_",",.01)=MODIEN
"RTN","C9CGDBM",252,0)
 ....D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",253,0)
 ....I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",254,0)
 .....N MIEN
"RTN","C9CGDBM",255,0)
 .....S MIEN=JFIEN(1)
"RTN","C9CGDBM",256,0)
 .....N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",257,0)
 .....S JFDA(42,300896.212,"?+2,"_MIEN_","_DIVIEN_","_USIEN_",",.01)=INST
"RTN","C9CGDBM",258,0)
 .....D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",259,0)
 .....I $G(JFIEN(2))>0 D
"RTN","C9CGDBM",260,0)
 ......N IIEN
"RTN","C9CGDBM",261,0)
 ......S IIEN=JFIEN(2)
"RTN","C9CGDBM",262,0)
 ......N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",263,0)
 ......S JFDA(42,300896.212,IIEN_","_MIEN_","_DIVIEN_","_USIEN_",",2)=1 ;module is shown
"RTN","C9CGDBM",264,0)
 ......S JFDA(42,300896.212,IIEN_","_MIEN_","_DIVIEN_","_USIEN_",",3)=MX ;order shown
"RTN","C9CGDBM",265,0)
 ......I SCOL>0 S JFDA(42,300896.212,IIEN_","_MIEN_","_DIVIEN_","_USIEN_",",5)=SCOL ;sort column
"RTN","C9CGDBM",266,0)
 ......I ((SDIR="Ascending")!(SDIR="Descending")) D
"RTN","C9CGDBM",267,0)
 .......S JFDA(42,300896.212,IIEN_","_MIEN_","_DIVIEN_","_USIEN_",",6)=SDIR ;sort order
"RTN","C9CGDBM",268,0)
 ......I LOC>-1 S JFDA(42,300896.212,IIEN_","_MIEN_","_DIVIEN_","_USIEN_",",4)=LOC ;selected location ien
"RTN","C9CGDBM",269,0)
 ......D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",270,0)
 ......I '$D(JMSG) S C9CRET=1
"RTN","C9CGDBM",271,0)
 Q
"RTN","C9CGDBM",272,0)
RPCGA(C9CRET) ;get all saved settings except filters ;RPC=C9C GET DASHBOARD PREFERENCES
"RTN","C9CGDBM",273,0)
 ;C9CRET(1) - WWIDTH^WHEIGHT^FONT^SLHORIZ^SRHORIZ^SVERT
"RTN","C9CGDBM",274,0)
 ;C9CRET(2...) - (1)MODULE IEN^(2)MODULE INSTANCE^(3)SORT COLUMN^(4)SORT DIRECTION^(5)LOCATION SELECTION IEN
"RTN","C9CGDBM",275,0)
 Q:$G(DUZ)'>0
"RTN","C9CGDBM",276,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CGDBM",277,0)
 N DIEN
"RTN","C9CGDBM",278,0)
 S DIEN=$O(^C9C(300896,"B",DUZ,0))
"RTN","C9CGDBM",279,0)
 Q:DIEN'>0 ;no data has been saved
"RTN","C9CGDBM",280,0)
 N DIVMOD ;division module ien
"RTN","C9CGDBM",281,0)
 S DIVMOD=$O(^C9C(300896,DIEN,10,"B",DUZ(2),0))
"RTN","C9CGDBM",282,0)
 Q:DIVMOD'>0
"RTN","C9CGDBM",283,0)
 N WWIDTH,WHEIGHT,FONT,SLHORIZ,SRHORIZ,SVERT,WINLEFT,WINTOP
"RTN","C9CGDBM",284,0)
 S WWIDTH=+$P($G(^C9C(300896,DIEN,10,DIVMOD,2)),"^",1)
"RTN","C9CGDBM",285,0)
 S WHEIGHT=+$P($G(^C9C(300896,DIEN,10,DIVMOD,3)),"^",1)
"RTN","C9CGDBM",286,0)
 S FONT=+$P($G(^C9C(300896,DIEN,10,DIVMOD,4)),"^",1)
"RTN","C9CGDBM",287,0)
 S SLHORIZ=+$P($G(^C9C(300896,DIEN,10,DIVMOD,5)),"^",1)
"RTN","C9CGDBM",288,0)
 S SRHORIZ=+$P($G(^C9C(300896,DIEN,10,DIVMOD,6)),"^",1)
"RTN","C9CGDBM",289,0)
 S SVERT=+$P($G(^C9C(300896,DIEN,10,DIVMOD,7)),"^",1)
"RTN","C9CGDBM",290,0)
 S WINLEFT=+$P($G(^C9C(300896,DIEN,10,DIVMOD,8)),"^",1)
"RTN","C9CGDBM",291,0)
 S WINTOP=+$P($G(^C9C(300896,DIEN,10,DIVMOD,9)),"^",1)
"RTN","C9CGDBM",292,0)
 S C9CRET(1)=WWIDTH_"^"_WHEIGHT_"^"_FONT_"^"_SLHORIZ_"^"_SRHORIZ_"^"_SVERT_"^"_WINLEFT_"^"_WINTOP
"RTN","C9CGDBM",293,0)
GETMODS
"RTN","C9CGDBM",294,0)
 N CNT
"RTN","C9CGDBM",295,0)
 S CNT=1
"RTN","C9CGDBM",296,0)
 N MX ;module
"RTN","C9CGDBM",297,0)
 S MX=0 F  S MX=$O(^C9C(300896,DIEN,10,DIVMOD,1,MX)) Q:MX'>0  D
"RTN","C9CGDBM",298,0)
 .N MPTR
"RTN","C9CGDBM",299,0)
 .S MPTR=$P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,0)),"^",1)
"RTN","C9CGDBM",300,0)
 .N MACTIVE
"RTN","C9CGDBM",301,0)
 .S MACTIVE=0
"RTN","C9CGDBM",302,0)
 .I MPTR>0 D
"RTN","C9CGDBM",303,0)
 ..S MACTIVE=+$P($G(^C9C(300894,MPTR,0)),"^",2)
"RTN","C9CGDBM",304,0)
 .N ACTDIV
"RTN","C9CGDBM",305,0)
 .S ACTDIV=0
"RTN","C9CGDBM",306,0)
 .I MPTR>0 D
"RTN","C9CGDBM",307,0)
 ..I $D(^C9C(300894,MPTR,11,"B",DUZ(2))) D
"RTN","C9CGDBM",308,0)
 ...S ACTDIV=1
"RTN","C9CGDBM",309,0)
 .I (((MACTIVE>0)!($D(^XUSEC("INACTIVE DASHBOARD MODULES",DUZ))))&(ACTDIV>0)) D
"RTN","C9CGDBM",310,0)
 ..N IX ;instance
"RTN","C9CGDBM",311,0)
 ..S IX=0 F  S IX=$O(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX)) Q:IX'>0  D
"RTN","C9CGDBM",312,0)
 ...N MODIEN,INST,SCOL,SDIR,LOC
"RTN","C9CGDBM",313,0)
 ...S MODIEN=$P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,0)),"^",1)
"RTN","C9CGDBM",314,0)
 ...I MODIEN>0 D
"RTN","C9CGDBM",315,0)
 ....S INST=$P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX,0)),"^",1)
"RTN","C9CGDBM",316,0)
 ....I INST>0 D
"RTN","C9CGDBM",317,0)
 .....I $P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX,2)),"^",1)>0 D ;if shown
"RTN","C9CGDBM",318,0)
 ......S LOC=$P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX,4)),"^",1)
"RTN","C9CGDBM",319,0)
 ......S SCOL=$P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX,5)),"^",1)
"RTN","C9CGDBM",320,0)
 ......S SDIR=$P($G(^C9C(300896,DIEN,10,DIVMOD,1,MX,1,IX,6)),"^",1)
"RTN","C9CGDBM",321,0)
 ......S CNT=CNT+1
"RTN","C9CGDBM",322,0)
 ......S C9CRET(CNT)=MODIEN_"^"_INST_"^"_SCOL_"^"_SDIR_"^"_LOC
"RTN","C9CGDBM",323,0)
 Q
"RTN","C9CGDBM",324,0)
RPCPUFI(C9CRET,MIEN,FILTERS) ;put user filterable items for module
"RTN","C9CGDBM",325,0)
 ;MIEN - module ien;instance
"RTN","C9CGDBM",326,0)
 ;C9CRET=1 for success, 0 for failure
"RTN","C9CGDBM",327,0)
 ;FILTERS - list of IEN^NAME
"RTN","C9CGDBM",328,0)
 S C9CRET=0
"RTN","C9CGDBM",329,0)
 Q:$G(MIEN)'>0
"RTN","C9CGDBM",330,0)
 N INSTANCE
"RTN","C9CGDBM",331,0)
 S INSTANCE=$P(MIEN,";",2)
"RTN","C9CGDBM",332,0)
 S MIEN=+MIEN
"RTN","C9CGDBM",333,0)
 Q:'$D(FILTERS)
"RTN","C9CGDBM",334,0)
 Q:$G(DUZ)'>0
"RTN","C9CGDBM",335,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CGDBM",336,0)
 ;if record exists, first delete the current units for this record 
"RTN","C9CGDBM",337,0)
 N DIEN
"RTN","C9CGDBM",338,0)
 S DIEN=$O(^C9C(300896,"B",DUZ,0))
"RTN","C9CGDBM",339,0)
DELF 
"RTN","C9CGDBM",340,0)
 I DIEN>0 D        
"RTN","C9CGDBM",341,0)
 .N DIVMOD ;division module ien
"RTN","C9CGDBM",342,0)
 .S DIVMOD=$O(^C9C(300896,DIEN,10,"B",DUZ(2),0))
"RTN","C9CGDBM",343,0)
 .I DIVMOD>0 D
"RTN","C9CGDBM",344,0)
 ..N MODIEN ;get the ien for this module type
"RTN","C9CGDBM",345,0)
 ..S MODIEN=$O(^C9C(300896,DIEN,10,DIVMOD,1,"B",MIEN,0))
"RTN","C9CGDBM",346,0)
 ..I MODIEN>0 D
"RTN","C9CGDBM",347,0)
 ...N INSTIEN
"RTN","C9CGDBM",348,0)
 ...S INSTIEN=$O(^C9C(300896,DIEN,10,DIVMOD,1,MODIEN,1,"B",INSTANCE,0))
"RTN","C9CGDBM",349,0)
 ...I INSTIEN>0 D
"RTN","C9CGDBM",350,0)
 ....I $D(^C9C(300896,DIEN,10,DIVMOD,1,MODIEN)) D
"RTN","C9CGDBM",351,0)
 .....N DX
"RTN","C9CGDBM",352,0)
 .....S DX=0 F  S DX=$O(^C9C(300896,DIEN,10,DIVMOD,1,MODIEN,1,INSTIEN,1,DX)) Q:DX'>0  D
"RTN","C9CGDBM",353,0)
 ......N DIK,DA
"RTN","C9CGDBM",354,0)
 ......S DA(4)=DIEN
"RTN","C9CGDBM",355,0)
 ......S DA(3)=DIVMOD
"RTN","C9CGDBM",356,0)
 ......S DA(2)=MODIEN
"RTN","C9CGDBM",357,0)
 ......S DA(1)=INSTIEN
"RTN","C9CGDBM",358,0)
 ......S DA=DX
"RTN","C9CGDBM",359,0)
 ......S DIK="^C9C(300896,"_DA(4)_",10,"_DA(3)_",1,"_DA(2)_",1,"_DA(1)_",1,"
"RTN","C9CGDBM",360,0)
 ......D ^DIK
"RTN","C9CGDBM",361,0)
ADDF 
"RTN","C9CGDBM",362,0)
 ;now add the new ones
"RTN","C9CGDBM",363,0)
 N WX
"RTN","C9CGDBM",364,0)
 S WX="" F  S WX=$O(FILTERS(WX)) Q:WX=""  D
"RTN","C9CGDBM",365,0)
 .N FIEN
"RTN","C9CGDBM",366,0)
 .S FIEN=$P(FILTERS(WX),"^",1)
"RTN","C9CGDBM",367,0)
 .N FNAME
"RTN","C9CGDBM",368,0)
 .S FNAME=$P(FILTERS(WX),"^",2)
"RTN","C9CGDBM",369,0)
 .I ((FIEN>0)&(FNAME'="")) D
"RTN","C9CGDBM",370,0)
 ..N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",371,0)
 ..S JFDA(42,300896,"?+1,",.01)=DUZ
"RTN","C9CGDBM",372,0)
 ..D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",373,0)
 ..I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",374,0)
 ...N USIEN
"RTN","C9CGDBM",375,0)
 ...S USIEN=JFIEN(1)
"RTN","C9CGDBM",376,0)
 ...N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",377,0)
 ...S JFDA(42,300896.02,"?+1,"_USIEN_",",.01)=DUZ(2)
"RTN","C9CGDBM",378,0)
 ...D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",379,0)
 ...I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",380,0)
 ....N DIVIEN
"RTN","C9CGDBM",381,0)
 ....S DIVIEN=JFIEN(1)
"RTN","C9CGDBM",382,0)
 ....N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",383,0)
 ....S JFDA(42,300896.21,"?+1,"_DIVIEN_","_USIEN_",",.01)=MIEN
"RTN","C9CGDBM",384,0)
 ....D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",385,0)
 ....I $G(JFIEN(1))>0 D
"RTN","C9CGDBM",386,0)
 .....N MODIEN
"RTN","C9CGDBM",387,0)
 .....S MODIEN=JFIEN(1)
"RTN","C9CGDBM",388,0)
 .....N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",389,0)
 .....S JFDA(42,300896.212,"?+2,"_MODIEN_","_DIVIEN_","_USIEN_",",.01)=INSTANCE
"RTN","C9CGDBM",390,0)
 .....D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",391,0)
 .....I $G(JFIEN(2))>0 D
"RTN","C9CGDBM",392,0)
 ......N IIEN
"RTN","C9CGDBM",393,0)
 ......S IIEN=JFIEN(2)
"RTN","C9CGDBM",394,0)
 ......N JFDA,JMSG,JFIEN
"RTN","C9CGDBM",395,0)
 ......S JFDA(42,300896.2121,"?+3,"_IIEN_","_MODIEN_","_DIVIEN_","_USIEN_",",.01)=FIEN
"RTN","C9CGDBM",396,0)
 ......S JFDA(42,300896.2121,"?+3,"_IIEN_","_MODIEN_","_DIVIEN_","_USIEN_",",1)=FNAME
"RTN","C9CGDBM",397,0)
 ......D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CGDBM",398,0)
 ......I '$D(JMSG) S C9CRET=1
"RTN","C9CGDBM",399,0)
 Q
"RTN","C9CGDBM",400,0)
 
"RTN","C9CGDIV")
0^7^B582185
"RTN","C9CGDIV",1,0)
C9CGDIV ;;Modified from existing GETDIV to use in CRH RPC's JHT CRH 2013
"RTN","C9CGDIV",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CGDIV",3,0)
 ;
"RTN","C9CGDIV",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CGDIV",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CGDIV",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CGDIV",7,0)
 ;
"RTN","C9CGDIV",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CGDIV",9,0)
 ;
"RTN","C9CGDIV",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CGDIV",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CGDIV",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CGDIV",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CGDIV",14,0)
 ;limitations under the License.
"RTN","C9CGDIV",15,0)
 Q ;;no entry from top
"RTN","C9CGDIV",16,0)
DIVGET(RET,IEN) ;Get Division data
"RTN","C9CGDIV",17,0)
 ;IEN is userid (DUZ or username)
"RTN","C9CGDIV",18,0)
 N %,XUDIV
"RTN","C9CGDIV",19,0)
 S RET(0)=0
"RTN","C9CGDIV",20,0)
 N C9CI S C9CI=0
"RTN","C9CGDIV",21,0)
 S %=0 F  S %=$O(^VA(200,IEN,2,%)) Q:+%'>0  D
"RTN","C9CGDIV",22,0)
 .S C9CI=C9CI+1
"RTN","C9CGDIV",23,0)
 .S RET(C9CI)=%_"^"_$$NS^XUAF4(%)
"RTN","C9CGDIV",24,0)
 .S RET(0)=RET(0)+1
"RTN","C9CGDIV",25,0)
 Q
"RTN","C9CGDIV",26,0)
 
"RTN","C9CGPL")
0^8^B51975
"RTN","C9CGPL",1,0)
C9CGPL ;CRH JHT 2018 - get pending labs past start date
"RTN","C9CGPL",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CGPL",3,0)
 ;
"RTN","C9CGPL",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CGPL",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CGPL",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CGPL",7,0)
 ;
"RTN","C9CGPL",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CGPL",9,0)
 ;
"RTN","C9CGPL",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CGPL",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CGPL",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CGPL",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CGPL",14,0)
 ;limitations under the License.
"RTN","C9CGPL",15,0)
 Q ;no entry from top
"RTN","C9CGPL",16,0)
RPC(C9CRET,WARD)
"RTN","C9CGPL",17,0)
 Q:$G(WARD)=""
"RTN","C9CGPL",18,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CGPL",19,0)
 N CX
"RTN","C9CGPL",20,0)
 S CX=0
"RTN","C9CGPL",21,0)
 N WARDIEN
"RTN","C9CGPL",22,0)
 S WARDIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CGPL",23,0)
 Q:WARDIEN'>0
"RTN","C9CGPL",24,0)
 N PENDING
"RTN","C9CGPL",25,0)
 S PENDING=$O(^ORD(100.01,"B","PENDING",0))
"RTN","C9CGPL",26,0)
 Q:PENDING'>0
"RTN","C9CGPL",27,0)
 N LDG ;lab display groups
"RTN","C9CGPL",28,0)
 S LDG(5)="LAB"
"RTN","C9CGPL",29,0)
 S LDG(6)="CHEMISTRY"
"RTN","C9CGPL",30,0)
 S LDG(7)="HEMATOLOGY"
"RTN","C9CGPL",31,0)
 S LDG(8)="MICROBIOLOGY"
"RTN","C9CGPL",32,0)
 S LDG(23)="BLOOD BANK"
"RTN","C9CGPL",33,0)
 S LDG(24)="ANATOMIC PATHOLOGY"
"RTN","C9CGPL",34,0)
 S LDG(25)="ELECTRON MICROSCOPY"
"RTN","C9CGPL",35,0)
 S LDG(26)="SURGICAL PATHOLOGY"
"RTN","C9CGPL",36,0)
 S LDG(27)="AUTOPSY"
"RTN","C9CGPL",37,0)
 S LDG(28)="CYTOLOGY"
"RTN","C9CGPL",38,0)
 N STDATE
"RTN","C9CGPL",39,0)
 ;S STDATE=$$FMADD^XLFDT($$NOW^XLFDT,-7)
"RTN","C9CGPL",40,0)
 S STDATE=$$FMADD^XLFDT($$NOW^XLFDT,-10) ;CRH JHT 2019 - expand start date
"RTN","C9CGPL",41,0)
 N EDDATE
"RTN","C9CGPL",42,0)
 ;S EDDATE=$$FMADD^XLFDT($$NOW^XLFDT,3)
"RTN","C9CGPL",43,0)
 S EDDATE=$$FMADD^XLFDT($$NOW^XLFDT,5) ;CRH JHT 2019 - expand end date
"RTN","C9CGPL",44,0)
 N PAT
"RTN","C9CGPL",45,0)
 S PAT=0 F  S PAT=$O(^DPT("ACN",WARD,PAT)) Q:PAT'>0  D ;go through patients on the ward
"RTN","C9CGPL",46,0)
 .N DGRP
"RTN","C9CGPL",47,0)
 .S DGRP=0 F  S DGRP=$O(^OR(100,"AW",PAT_";DPT(",DGRP)) Q:DGRP'>0  D
"RTN","C9CGPL",48,0)
 ..I $D(LDG(DGRP)) D
"RTN","C9CGPL",49,0)
 ...N ORSTART
"RTN","C9CGPL",50,0)
 ...S ORSTART=STDATE F  S ORSTART=$O(^OR(100,"AW",PAT_";DPT(",DGRP,ORSTART)) Q:((ORSTART'>0)!(ORSTART>EDDATE))  D
"RTN","C9CGPL",51,0)
 ....N ORIEN
"RTN","C9CGPL",52,0)
 ....S ORIEN=0 F  S ORIEN=$O(^OR(100,"AW",PAT_";DPT(",DGRP,ORSTART,ORIEN)) Q:ORIEN'>0  D
"RTN","C9CGPL",53,0)
 .....Q:$D(^OR(100,ORIEN,2))
"RTN","C9CGPL",54,0)
 .....N STATIEN
"RTN","C9CGPL",55,0)
 .....S STATIEN=$P($G(^OR(100,ORIEN,3)),"^",3)
"RTN","C9CGPL",56,0)
 .....I STATIEN=PENDING D
"RTN","C9CGPL",57,0)
 ......N PATNAME
"RTN","C9CGPL",58,0)
 ......S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CGPL",59,0)
 ......N MRN
"RTN","C9CGPL",60,0)
 ......S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CGPL",61,0)
 ......N ORDABLE
"RTN","C9CGPL",62,0)
 ......S ORDABLE=""
"RTN","C9CGPL",63,0)
 ......N AX
"RTN","C9CGPL",64,0)
 ......S AX=0 F  S AX=$O(^OR(100,ORIEN,.1,AX)) Q:AX'>0  D
"RTN","C9CGPL",65,0)
 .......N ORDAIEN
"RTN","C9CGPL",66,0)
 .......S ORDAIEN=$P($G(^OR(100,ORIEN,.1,AX,0)),"^",1)
"RTN","C9CGPL",67,0)
 .......I ORDABLE="" S ORDABLE=$P($G(^ORD(101.43,ORDAIEN,0)),"^",1)
"RTN","C9CGPL",68,0)
 .......E  S ORDABLE=ORDABLE_", "_$P($G(^ORD(101.43,ORDAIEN,0)),"^",1)
"RTN","C9CGPL",69,0)
 ......N ACTION
"RTN","C9CGPL",70,0)
 ......S ACTION=$P($G(^OR(100,ORIEN,3)),"^",7)
"RTN","C9CGPL",71,0)
 ......S CX=CX+1
"RTN","C9CGPL",72,0)
 ......S C9CRET(CX)=PATNAME_"^"_MRN_"^"_ORIEN_";"_ACTION_"^"_$$FMTE^XLFDT(ORSTART)_"^"_ORDABLE_"^"_"Pending"
"RTN","C9CGPL",73,0)
 ......N COLOR
"RTN","C9CGPL",74,0)
 ......I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)>345600 S COLOR="" ;CRH JHT 2019 - was 21600, now 4 days in seconds 
"RTN","C9CGPL",75,0)
 ......E  I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)>86400 S COLOR="Orange" ;CRH JHT 2019 - added the ,2 as it was missing and changed 3600 to one day in seconds
"RTN","C9CGPL",76,0)
 ......E  I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)>0 S COLOR="Yellow"
"RTN","C9CGPL",77,0)
 ......E  I $$FMDIFF^XLFDT(ORSTART,$$NOW^XLFDT,2)<0 S COLOR="LightCoral"
"RTN","C9CGPL",78,0)
 ......E  S COLOR=""
"RTN","C9CGPL",79,0)
 ......S C9CRET(CX)=C9CRET(CX)_"^"_COLOR_"^"_PAT
"RTN","C9CGPL",80,0)
 Q
"RTN","C9CGPL",81,0)
 
"RTN","C9CGPL",82,0)
 
"RTN","C9CGPL",83,0)
 
"RTN","C9CGPV")
0^9^B52045
"RTN","C9CGPV",1,0)
C9CGPV ;CRH JHT 2018 - get chem lab panic and critical values last seven days
"RTN","C9CGPV",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CGPV",3,0)
 ;
"RTN","C9CGPV",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CGPV",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CGPV",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CGPV",7,0)
 ;
"RTN","C9CGPV",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CGPV",9,0)
 ;
"RTN","C9CGPV",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CGPV",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CGPV",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CGPV",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CGPV",14,0)
 ;limitations under the License.
"RTN","C9CGPV",15,0)
 Q ;no entry from top
"RTN","C9CGPV",16,0)
RPC(C9CRET)
"RTN","C9CGPV",17,0)
 Q:($G(DUZ)'>0) ;no user
"RTN","C9CGPV",18,0)
 Q:($G(DUZ(2))'>0) ;no division
"RTN","C9CGPV",19,0)
 N CNT
"RTN","C9CGPV",20,0)
 S CNT=0
"RTN","C9CGPV",21,0)
 N SDATE
"RTN","C9CGPV",22,0)
 S SDATE=$$FMADD^XLFDT($$NOW^XLFDT,-7)
"RTN","C9CGPV",23,0)
 S SDATE=9999999-SDATE
"RTN","C9CGPV",24,0)
 N LRD 
"RTN","C9CGPV",25,0)
 S LRD=0 F  S LRD=$O(^LR(LRD)) Q:LRD'>0  D  
"RTN","C9CGPV",26,0)
 .;get patient DFN
"RTN","C9CGPV",27,0)
 .N J ;inverse date 
"RTN","C9CGPV",28,0)
 .S J=SDATE F  S J=$O(^LR(LRD,"CH",J),-1) Q:J'>0  D
"RTN","C9CGPV",29,0)
 ..N K ;test?
"RTN","C9CGPV",30,0)
 ..S K=0 F  S K=$O(^LR(LRD,"CH",J,K)) Q:K'>0  D
"RTN","C9CGPV",31,0)
 ...N FLG 
"RTN","C9CGPV",32,0)
 ...S FLG=$P($G(^LR(LRD,"CH",J,K)),"^",2) 
"RTN","C9CGPV",33,0)
 ...I FLG'="" D
"RTN","C9CGPV",34,0)
 ....N PATDFN,PATNAME
"RTN","C9CGPV",35,0)
 ....S PATNAME=""
"RTN","C9CGPV",36,0)
 ....S PATDFN=$P($G(^LR(LRD,0)),"^",3)
"RTN","C9CGPV",37,0)
 ....I $$OK^MSCDPTID(PATDFN) D
"RTN","C9CGPV",38,0)
 .....I PATDFN>0 S PATNAME=$P($G(^DPT(PATDFN,0)),"^",1)
"RTN","C9CGPV",39,0)
 .....N PIECE3
"RTN","C9CGPV",40,0)
 .....S PIECE3=$P($G(^LR(LRD,"CH",J,K)),"^",3)
"RTN","C9CGPV",41,0)
 .....N TESTIEN,TESTNAME
"RTN","C9CGPV",42,0)
 .....S TESTNAME=""
"RTN","C9CGPV",43,0)
 .....S TESTIEN=$P(PIECE3,"!",7)
"RTN","C9CGPV",44,0)
 .....I TESTIEN>0 S TESTNAME=$P($G(^LAB(60,TESTIEN,0)),"^",1)
"RTN","C9CGPV",45,0)
 .....N PIECE5
"RTN","C9CGPV",46,0)
 .....S PIECE5=$P($G(^LR(LRD,"CH",J,K)),"^",5)
"RTN","C9CGPV",47,0)
 .....N RANGE
"RTN","C9CGPV",48,0)
 .....S RANGE=$TR($P(PIECE5,"!",2,3),"!","-")
"RTN","C9CGPV",49,0)
 .....N UNITS
"RTN","C9CGPV",50,0)
 .....S UNITS=$P(PIECE5,"!",7)
"RTN","C9CGPV",51,0)
 .....N RESULT
"RTN","C9CGPV",52,0)
 .....S RESULT=$P($G(^LR(LRD,"CH",J,K)),"^",1)
"RTN","C9CGPV",53,0)
 .....N OUTDATE
"RTN","C9CGPV",54,0)
 .....S OUTDATE=$$FMTE^XLFDT(9999999-J)
"RTN","C9CGPV",55,0)
 .....N WARD
"RTN","C9CGPV",56,0)
 .....S WARD=$P($G(^DPT(PATDFN,.1)),"^",1)
"RTN","C9CGPV",57,0)
 .....I (($F(FLG,"Panic"))!($F(FLG,"PANIC"))!($F(FLG,"Critical"))!($F(FLG,"CRITICAL"))) D
"RTN","C9CGPV",58,0)
 ......S CNT=CNT+1
"RTN","C9CGPV",59,0)
 ......S C9CRET(CNT)=OUTDATE_"^"_PATDFN_"^"_PATNAME_"^"_WARD_"^"_TESTNAME_"^"_RESULT_"^"_UNITS_"^"_FLG_"^"_RANGE
"RTN","C9CGPV",60,0)
 ......;W !,"DATE="_J,"  DFN="_PATDFN,"  NAME="_PATNAME,"  TEST= "_TESTNAME,"  RESULT="_RESULT,"  UNITS="_UNITS,"  FLAG="_FLG,"  RANGE="_RANGE,!,$G(^LR(LRD,"CH",J,K)),!
"RTN","C9CGPV",61,0)
 Q
"RTN","C9CGPV",62,0)
 
"RTN","C9CGSR")
0^22^B75883176
"RTN","C9CGSR",1,0)
C9CGSR ;CRH JHT 2017 - get/set rules from rules engine
"RTN","C9CGSR",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CGSR",3,0)
 ;
"RTN","C9CGSR",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CGSR",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CGSR",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CGSR",7,0)
 ;
"RTN","C9CGSR",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CGSR",9,0)
 ;
"RTN","C9CGSR",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CGSR",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CGSR",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CGSR",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CGSR",14,0)
 ;limitations under the License.
"RTN","C9CGSR",15,0)
 Q ;no entry from top;;;;;Build 5
"RTN","C9CGSR",16,0)
GETRULES(C9CRET) ;get possible rules from file 300892
"RTN","C9CGSR",17,0)
 N CNT
"RTN","C9CGSR",18,0)
 S CNT=0
"RTN","C9CGSR",19,0)
 N RN
"RTN","C9CGSR",20,0)
 S RN="" F  S RN=$O(^C9C(300892,"B",RN)) Q:RN=""  D
"RTN","C9CGSR",21,0)
 .N RX
"RTN","C9CGSR",22,0)
 .S RX=0 F  S RX=$O(^C9C(300892,"B",RN,RX)) Q:RX'>0  D
"RTN","C9CGSR",23,0)
 ..I $P($G(^C9C(300892,RX,0)),"^",2)>0 D
"RTN","C9CGSR",24,0)
 ...S CNT=CNT+1
"RTN","C9CGSR",25,0)
 ...S C9CRET(CNT)=RX_"^"_$P($G(^C9C(300892,RX,0)),"^",1)
"RTN","C9CGSR",26,0)
 Q
"RTN","C9CGSR",27,0)
GETF(C9CRET,VPTR) ;get formulas for this object
"RTN","C9CGSR",28,0)
 N FPTD
"RTN","C9CGSR",29,0)
 S FPTD=$P(VPTR,";",2)
"RTN","C9CGSR",30,0)
 I ((FPTD'="TIU(8925.1,")&(FPTD'="AUTTIMM(,")) Q ;not a tiu document def or immunization
"RTN","C9CGSR",31,0)
 N TIEN
"RTN","C9CGSR",32,0)
 S TIEN=$O(^C9C(300890,"B",VPTR,0))
"RTN","C9CGSR",33,0)
 Q:TIEN'>0 ;no formulas for this object
"RTN","C9CGSR",34,0)
 N CNT
"RTN","C9CGSR",35,0)
 S CNT=0
"RTN","C9CGSR",36,0)
 N AX
"RTN","C9CGSR",37,0)
 S AX=0 F  S AX=$O(^C9C(300890,TIEN,1,AX)) Q:AX'>0  D ;for each ward formula rule name
"RTN","C9CGSR",38,0)
 .N NUMRULES
"RTN","C9CGSR",39,0)
 .S NUMRULES=0
"RTN","C9CGSR",40,0)
 .N FORNAME
"RTN","C9CGSR",41,0)
 .S FORNAME=$P($G(^C9C(300890,TIEN,1,AX,0)),"^",1)
"RTN","C9CGSR",42,0)
 .N F1 ;ADMIT DATE OFFSET IN DAYS
"RTN","C9CGSR",43,0)
 .S F1=""
"RTN","C9CGSR",44,0)
 .N F2 ;CALENDAR DATE
"RTN","C9CGSR",45,0)
 .S F2=""
"RTN","C9CGSR",46,0)
 .N F3 ;DAY OF YEAR
"RTN","C9CGSR",47,0)
 .S F3=""
"RTN","C9CGSR",48,0)
 .N F4 ;DAY OF MONTH
"RTN","C9CGSR",49,0)
 .S F4=""
"RTN","C9CGSR",50,0)
 .N F5 ;DAY OF WEEK
"RTN","C9CGSR",51,0)
 .S F5=""
"RTN","C9CGSR",52,0)
 .N F6 ;ADMIT DATE OFFSET IN HOURS
"RTN","C9CGSR",53,0)
 .S F6=""
"RTN","C9CGSR",54,0)
 .N F7 ;ACTIVE ORDERABLE ITEM
"RTN","C9CGSR",55,0)
 .S F7=""
"RTN","C9CGSR",56,0)
 .N F8 ;EVENT DATE OFFSET IN DAYS
"RTN","C9CGSR",57,0)
 .S F8=""
"RTN","C9CGSR",58,0)
 .N F9 ;EVENT DATE OFFSET IN HOURS
"RTN","C9CGSR",59,0)
 .S F9=""
"RTN","C9CGSR",60,0)
 .N WARDS
"RTN","C9CGSR",61,0)
 .S WARDS=""
"RTN","C9CGSR",62,0)
 .N THISIEN
"RTN","C9CGSR",63,0)
 .S THISIEN=""
"RTN","C9CGSR",64,0)
 .N RULEIEN
"RTN","C9CGSR",65,0)
 .S RULEIEN=""
"RTN","C9CGSR",66,0)
 .N RULETEXT
"RTN","C9CGSR",67,0)
 .S RULETEXT=""
"RTN","C9CGSR",68,0)
 .N BX
"RTN","C9CGSR",69,0)
 .S BX=0 F  S BX=$O(^C9C(300890,TIEN,1,AX,1,BX)) Q:BX'>0  D ;for each rule specified
"RTN","C9CGSR",70,0)
 ..S THISIEN=BX
"RTN","C9CGSR",71,0)
 ..S RULEIEN=$P($G(^C9C(300890,TIEN,1,AX,1,BX,0)),"^",1)
"RTN","C9CGSR",72,0)
 ..S RULETEXT=""
"RTN","C9CGSR",73,0)
 ..I RULEIEN>0 S RULETEXT=$P($G(^C9C(300892,RULEIEN,0)),"^",1)
"RTN","C9CGSR",74,0)
 ..S F1=$P($G(^C9C(300890,TIEN,1,AX,1,BX,1)),"^",1)
"RTN","C9CGSR",75,0)
 ..S F2=$P($G(^C9C(300890,TIEN,1,AX,1,BX,2)),"^",1)
"RTN","C9CGSR",76,0)
 ..S F3=$P($G(^C9C(300890,TIEN,1,AX,1,BX,3)),"^",1)
"RTN","C9CGSR",77,0)
 ..S F4=$P($G(^C9C(300890,TIEN,1,AX,1,BX,4)),"^",1)
"RTN","C9CGSR",78,0)
 ..S F5=$P($G(^C9C(300890,TIEN,1,AX,1,BX,5)),"^",1)
"RTN","C9CGSR",79,0)
 ..S F6=$P($G(^C9C(300890,TIEN,1,AX,1,BX,6)),"^",1)
"RTN","C9CGSR",80,0)
 ..S F7=$P($G(^C9C(300890,TIEN,1,AX,1,BX,7)),"^",1)
"RTN","C9CGSR",81,0)
 ..S F8=$P($G(^C9C(300890,TIEN,1,AX,1,BX,8)),"^",1)
"RTN","C9CGSR",82,0)
 ..S F9=$P($G(^C9C(300890,TIEN,1,AX,1,BX,9)),"^",1)
"RTN","C9CGSR",83,0)
 ..I F7>0 D
"RTN","C9CGSR",84,0)
 ...S F7=F7_"~"_$P($G(^ORD(101.43,F7,0)),"^",1)
"RTN","C9CGSR",85,0)
 ..S WARDS=""
"RTN","C9CGSR",86,0)
 ..N WX
"RTN","C9CGSR",87,0)
 ..S WX=0 F  S WX=$O(^C9C(300890,TIEN,1,AX,2,WX)) Q:WX'>0  D
"RTN","C9CGSR",88,0)
 ...N WIEN
"RTN","C9CGSR",89,0)
 ...S WIEN=$P($G(^C9C(300890,TIEN,1,AX,2,WX,0)),"^",1)
"RTN","C9CGSR",90,0)
 ...I WIEN>0 D
"RTN","C9CGSR",91,0)
 ....N WNAME
"RTN","C9CGSR",92,0)
 ....S WNAME=$P($G(^DIC(42,WIEN,0)),"^",1)
"RTN","C9CGSR",93,0)
 ....I WNAME'="" D
"RTN","C9CGSR",94,0)
 .....S WARDS=WARDS_WNAME_"^"
"RTN","C9CGSR",95,0)
 ..S NUMRULES=NUMRULES+1
"RTN","C9CGSR",96,0)
 ..S CNT=CNT+1
"RTN","C9CGSR",97,0)
 ..S C9CRET(CNT)="WARD"_";"_TIEN_";1;"_AX_";1;"_BX_"^"_FORNAME_"^"_$G(THISIEN)_"~"_$G(RULETEXT)_"^"_F1_"^"_F2_"^"_F3_"^"_F4_"^"_F5_"^"_F6_"^"_F8_"^"_F9_"^"_F7_"^"_WARDS
"RTN","C9CGSR",98,0)
 .I NUMRULES=0 D
"RTN","C9CGSR",99,0)
 ..S WARDS=""
"RTN","C9CGSR",100,0)
 ..N WX
"RTN","C9CGSR",101,0)
 ..S WX=0 F  S WX=$O(^C9C(300890,TIEN,1,AX,2,WX)) Q:WX'>0  D
"RTN","C9CGSR",102,0)
 ...N WIEN
"RTN","C9CGSR",103,0)
 ...S WIEN=$P($G(^C9C(300890,TIEN,1,AX,2,WX,0)),"^",1)
"RTN","C9CGSR",104,0)
 ...I WIEN>0 D
"RTN","C9CGSR",105,0)
 ....N WNAME
"RTN","C9CGSR",106,0)
 ....S WNAME=$P($G(^DIC(42,WIEN,0)),"^",1)
"RTN","C9CGSR",107,0)
 ....I WNAME'="" D
"RTN","C9CGSR",108,0)
 .....S WARDS=WARDS_WNAME_"^"
"RTN","C9CGSR",109,0)
 ..S CNT=CNT+1
"RTN","C9CGSR",110,0)
 ..S C9CRET(CNT)="WARD"_";"_TIEN_";1;"_AX_";1;"_"0"_"^"_FORNAME_"^"_$G(THISIEN)_"~"_$G(RULETEXT)_"^"_F1_"^"_F2_"^"_F3_"^"_F4_"^"_F5_"^"_F6_"^"_F8_"^"_F9_"^"_F7_"^"_WARDS
"RTN","C9CGSR",111,0)
 S AX=0 F  S AX=$O(^C9C(300890,TIEN,2,AX)) Q:AX'>0  D ;for each unit formula name
"RTN","C9CGSR",112,0)
 .N NUMRULES
"RTN","C9CGSR",113,0)
 .S NUMRULES=0
"RTN","C9CGSR",114,0)
 .N FORNAME
"RTN","C9CGSR",115,0)
 .S FORNAME=$P($G(^C9C(300890,TIEN,2,AX,0)),"^",1)
"RTN","C9CGSR",116,0)
 .N F1 ;ADMIT DATE OFFSET IN DAYS
"RTN","C9CGSR",117,0)
 .S F1=""
"RTN","C9CGSR",118,0)
 .N F2 ;CALENDAR DATE
"RTN","C9CGSR",119,0)
 .S F2=""
"RTN","C9CGSR",120,0)
 .N F3 ;DAY OF YEAR
"RTN","C9CGSR",121,0)
 .S F3=""
"RTN","C9CGSR",122,0)
 .N F4 ;DAY OF MONTH
"RTN","C9CGSR",123,0)
 .S F4=""
"RTN","C9CGSR",124,0)
 .N F5 ;DAY OF WEEK
"RTN","C9CGSR",125,0)
 .S F5=""
"RTN","C9CGSR",126,0)
 .N F6 ;ADMIT DATE OFFSET IN HOURS
"RTN","C9CGSR",127,0)
 .S F6=""
"RTN","C9CGSR",128,0)
 .N F7 ;ACTIVE ORDERABLE ITEM
"RTN","C9CGSR",129,0)
 .S F7=""
"RTN","C9CGSR",130,0)
 .N F8 ;EVENT DATE OFFSET IN DAYS
"RTN","C9CGSR",131,0)
 .S F8=""
"RTN","C9CGSR",132,0)
 .N F9 ;EVENT DATE OFFSET IN HOURS
"RTN","C9CGSR",133,0)
 .S F9=""
"RTN","C9CGSR",134,0)
 .N UNITS
"RTN","C9CGSR",135,0)
 .S UNITS=""
"RTN","C9CGSR",136,0)
 .N THISIEN
"RTN","C9CGSR",137,0)
 .S THISIEN=""
"RTN","C9CGSR",138,0)
 .N RULEIEN
"RTN","C9CGSR",139,0)
 .S RULEIEN=""
"RTN","C9CGSR",140,0)
 .N RULETEXT
"RTN","C9CGSR",141,0)
 .S RULETEXT=""
"RTN","C9CGSR",142,0)
 .N BX
"RTN","C9CGSR",143,0)
 .S BX=0 F  S BX=$O(^C9C(300890,TIEN,2,AX,1,BX)) Q:BX'>0  D ;for each rule specified
"RTN","C9CGSR",144,0)
 ..S THISIEN=BX
"RTN","C9CGSR",145,0)
 ..S RULEIEN=$P($G(^C9C(300890,TIEN,2,AX,1,BX,0)),"^",1)
"RTN","C9CGSR",146,0)
 ..I RULEIEN>0 S RULETEXT=$P($G(^C9C(300892,RULEIEN,0)),"^",1)
"RTN","C9CGSR",147,0)
 ..S F1=$P($G(^C9C(300890,TIEN,2,AX,1,BX,1)),"^",1)
"RTN","C9CGSR",148,0)
 ..S F2=$P($G(^C9C(300890,TIEN,2,AX,1,BX,2)),"^",1)
"RTN","C9CGSR",149,0)
 ..S F3=$P($G(^C9C(300890,TIEN,2,AX,1,BX,3)),"^",1)
"RTN","C9CGSR",150,0)
 ..S F4=$P($G(^C9C(300890,TIEN,2,AX,1,BX,4)),"^",1)
"RTN","C9CGSR",151,0)
 ..S F5=$P($G(^C9C(300890,TIEN,2,AX,1,BX,5)),"^",1)
"RTN","C9CGSR",152,0)
 ..S F6=$P($G(^C9C(300890,TIEN,2,AX,1,BX,6)),"^",1)
"RTN","C9CGSR",153,0)
 ..S F7=$P($G(^C9C(300890,TIEN,2,AX,1,BX,7)),"^",1)
"RTN","C9CGSR",154,0)
 ..S F8=$P($G(^C9C(300890,TIEN,2,AX,1,BX,8)),"^",1)
"RTN","C9CGSR",155,0)
 ..S F9=$P($G(^C9C(300890,TIEN,2,AX,1,BX,9)),"^",1)
"RTN","C9CGSR",156,0)
 ..I F7>0 D
"RTN","C9CGSR",157,0)
 ...S F7=F7_"~"_$P($G(^ORD(101.43,F7,0)),"^",1)
"RTN","C9CGSR",158,0)
 ..S UNITS=""
"RTN","C9CGSR",159,0)
 ..N UX
"RTN","C9CGSR",160,0)
 ..S UX=0 F  S UX=$O(^C9C(300890,TIEN,2,AX,2,UX)) Q:UX'>0  D
"RTN","C9CGSR",161,0)
 ...N UNAME
"RTN","C9CGSR",162,0)
 ...S UNAME=$P($G(^C9C(300890,TIEN,2,AX,2,UX,0)),"^",1)
"RTN","C9CGSR",163,0)
 ...I UNAME'="" D
"RTN","C9CGSR",164,0)
 ....S UNITS=UNITS_UNAME_"^"
"RTN","C9CGSR",165,0)
 ..S NUMRULES=NUMRULES+1
"RTN","C9CGSR",166,0)
 ..S CNT=CNT+1
"RTN","C9CGSR",167,0)
 ..S C9CRET(CNT)="UNIT"_";"_TIEN_";2;"_AX_";1;"_BX_"^"_FORNAME_"^"_$G(THISIEN)_"~"_$G(RULETEXT)_"^"_F1_"^"_F2_"^"_F3_"^"_F4_"^"_F5_"^"_F6_"^"_F8_"^"_F9_"^"_F7_"^"_UNITS
"RTN","C9CGSR",168,0)
 .I NUMRULES=0 D
"RTN","C9CGSR",169,0)
 ..S UNITS=""
"RTN","C9CGSR",170,0)
 ..N UX
"RTN","C9CGSR",171,0)
 ..S UX=0 F  S UX=$O(^C9C(300890,TIEN,2,AX,2,UX)) Q:UX'>0  D
"RTN","C9CGSR",172,0)
 ...N UNAME
"RTN","C9CGSR",173,0)
 ...S UNAME=$P($G(^C9C(300890,TIEN,2,AX,2,UX,0)),"^",1)
"RTN","C9CGSR",174,0)
 ...I UNAME'="" D
"RTN","C9CGSR",175,0)
 ....S UNITS=UNITS_UNAME_"^"
"RTN","C9CGSR",176,0)
 ..S CNT=CNT+1
"RTN","C9CGSR",177,0)
 ..S C9CRET(CNT)="UNIT"_";"_TIEN_";2;"_AX_";1;"_"0"_"^"_FORNAME_"^"_$G(THISIEN)_"~"_$G(RULETEXT)_"^"_F1_"^"_F2_"^"_F3_"^"_F4_"^"_F5_"^"_F6_"^"_F8_"^"_F9_"^"_F7_"^"_UNITS
"RTN","C9CGSR",178,0)
 S AX=0 F  S AX=$O(^C9C(300890,TIEN,3,AX)) Q:AX'>0  D ;for each hospital formula name
"RTN","C9CGSR",179,0)
 .N NUMRULES
"RTN","C9CGSR",180,0)
 .S NUMRULES=0
"RTN","C9CGSR",181,0)
 .N FORNAME
"RTN","C9CGSR",182,0)
 .S FORNAME=$P($G(^C9C(300890,TIEN,3,AX,0)),"^",1)
"RTN","C9CGSR",183,0)
 .N F1 ;ADMIT DATE OFFSET IN DAYS
"RTN","C9CGSR",184,0)
 .S F1=""
"RTN","C9CGSR",185,0)
 .N F2 ;CALENDAR DATE
"RTN","C9CGSR",186,0)
 .S F2=""
"RTN","C9CGSR",187,0)
 .N F3 ;DAY OF YEAR
"RTN","C9CGSR",188,0)
 .S F3=""
"RTN","C9CGSR",189,0)
 .N F4 ;DAY OF MONTH
"RTN","C9CGSR",190,0)
 .S F4=""
"RTN","C9CGSR",191,0)
 .N F5 ;DAY OF WEEK
"RTN","C9CGSR",192,0)
 .S F5=""
"RTN","C9CGSR",193,0)
 .N F6 ;ADMIT DATE OFFSET IN HOURS
"RTN","C9CGSR",194,0)
 .S F6=""
"RTN","C9CGSR",195,0)
 .N F7 ;ACTIVE ORDERABLE ITEM
"RTN","C9CGSR",196,0)
 .S F7=""
"RTN","C9CGSR",197,0)
 .N F8 ;EVENT DATE OFFSET IN DAYS
"RTN","C9CGSR",198,0)
 .S F8=""
"RTN","C9CGSR",199,0)
 .N F9 ;EVENT DATE OFFSET IN HOURS
"RTN","C9CGSR",200,0)
 .S F9=""
"RTN","C9CGSR",201,0)
 .N HOSPS
"RTN","C9CGSR",202,0)
 .S HOSPS=""
"RTN","C9CGSR",203,0)
 .N THISIEN
"RTN","C9CGSR",204,0)
 .S THISIEN=""
"RTN","C9CGSR",205,0)
 .N RULEIEN
"RTN","C9CGSR",206,0)
 .S RULEIEN=""
"RTN","C9CGSR",207,0)
 .N RULETEXT
"RTN","C9CGSR",208,0)
 .S RULETEXT=""
"RTN","C9CGSR",209,0)
 .N BX
"RTN","C9CGSR",210,0)
 .S BX=0 F  S BX=$O(^C9C(300890,TIEN,3,AX,1,BX)) Q:BX'>0  D ;for each rule specified
"RTN","C9CGSR",211,0)
 ..S THISIEN=BX
"RTN","C9CGSR",212,0)
 ..S FORNAME=$P($G(^C9C(300890,TIEN,3,AX,0)),"^",1)
"RTN","C9CGSR",213,0)
 ..S RULEIEN=$P($G(^C9C(300890,TIEN,3,AX,1,BX,0)),"^",1)
"RTN","C9CGSR",214,0)
 ..I RULEIEN>0 S RULETEXT=$P($G(^C9C(300892,RULEIEN,0)),"^",1)
"RTN","C9CGSR",215,0)
 ..S F1=$P($G(^C9C(300890,TIEN,3,AX,1,BX,1)),"^",1)
"RTN","C9CGSR",216,0)
 ..S F2=$P($G(^C9C(300890,TIEN,3,AX,1,BX,2)),"^",1)
"RTN","C9CGSR",217,0)
 ..S F3=$P($G(^C9C(300890,TIEN,3,AX,1,BX,3)),"^",1)
"RTN","C9CGSR",218,0)
 ..S F4=$P($G(^C9C(300890,TIEN,3,AX,1,BX,4)),"^",1)
"RTN","C9CGSR",219,0)
 ..S F5=$P($G(^C9C(300890,TIEN,3,AX,1,BX,5)),"^",1)
"RTN","C9CGSR",220,0)
 ..S F6=$P($G(^C9C(300890,TIEN,3,AX,1,BX,6)),"^",1)
"RTN","C9CGSR",221,0)
 ..S F7=$P($G(^C9C(300890,TIEN,3,AX,1,BX,7)),"^",1)
"RTN","C9CGSR",222,0)
 ..S F8=$P($G(^C9C(300890,TIEN,3,AX,1,BX,8)),"^",1)
"RTN","C9CGSR",223,0)
 ..S F9=$P($G(^C9C(300890,TIEN,3,AX,1,BX,9)),"^",1)
"RTN","C9CGSR",224,0)
 ..I F7>0 D
"RTN","C9CGSR",225,0)
 ...S F7=F7_"~"_$P($G(^ORD(101.43,F7,0)),"^",1)
"RTN","C9CGSR",226,0)
 ..S HOSPS=""
"RTN","C9CGSR",227,0)
 ..N HX
"RTN","C9CGSR",228,0)
 ..S HX=0 F  S HX=$O(^C9C(300890,TIEN,3,AX,2,HX)) Q:HX'>0  D
"RTN","C9CGSR",229,0)
 ...N HIEN
"RTN","C9CGSR",230,0)
 ...S HIEN=$P($G(^C9C(300890,TIEN,3,AX,2,HX,0)),"^",1)
"RTN","C9CGSR",231,0)
 ...I HIEN>0 D
"RTN","C9CGSR",232,0)
 ....N HNAME
"RTN","C9CGSR",233,0)
 ....S HNAME=$P($G(^DIC(4,HIEN,0)),"^",1)
"RTN","C9CGSR",234,0)
 ....I HNAME'="" D
"RTN","C9CGSR",235,0)
 .....S HOSPS=HOSPS_HNAME_"^"
"RTN","C9CGSR",236,0)
 ..S NUMRULES=NUMRULES+1
"RTN","C9CGSR",237,0)
 ..S CNT=CNT+1
"RTN","C9CGSR",238,0)
 ..S C9CRET(CNT)="HOSPITAL"_";"_TIEN_";3;"_AX_";1;"_BX_"^"_FORNAME_"^"_$G(THISIEN)_"~"_$G(RULETEXT)_"^"_F1_"^"_F2_"^"_F3_"^"_F4_"^"_F5_"^"_F6_"^"_F8_"^"_F9_"^"_F7_"^"_HOSPS
"RTN","C9CGSR",239,0)
 .I NUMRULES=0 D
"RTN","C9CGSR",240,0)
 ..S HOSPS=""
"RTN","C9CGSR",241,0)
 ..N HX
"RTN","C9CGSR",242,0)
 ..S HX=0 F  S HX=$O(^C9C(300890,TIEN,3,AX,2,HX)) Q:HX'>0  D
"RTN","C9CGSR",243,0)
 ...N HIEN
"RTN","C9CGSR",244,0)
 ...S HIEN=$P($G(^C9C(300890,TIEN,3,AX,2,HX,0)),"^",1)
"RTN","C9CGSR",245,0)
 ...I HIEN>0 D
"RTN","C9CGSR",246,0)
 ....N HNAME
"RTN","C9CGSR",247,0)
 ....S HNAME=$P($G(^DIC(4,HIEN,0)),"^",1)
"RTN","C9CGSR",248,0)
 ....I HNAME'="" D
"RTN","C9CGSR",249,0)
 .....S HOSPS=HOSPS_HNAME_"^"
"RTN","C9CGSR",250,0)
 ..S CNT=CNT+1
"RTN","C9CGSR",251,0)
 ..S C9CRET(CNT)="HOSPITAL"_";"_TIEN_";3;"_AX_";1;"_"0"_"^"_FORNAME_"^"_$G(THISIEN)_"~"_$G(RULETEXT)_"^"_F1_"^"_F2_"^"_F3_"^"_F4_"^"_F5_"^"_F6_"^"_F8_"^"_F9_"^"_F7_"^"_HOSPS
"RTN","C9CGSR",252,0)
 Q
"RTN","C9CMODCD")
0^10^B18952211
"RTN","C9CMODCD",1,0)
C9CMODCD ;CRH JHT 2020 - show patients with orders for particular drugs
"RTN","C9CMODCD",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CMODCD",3,0)
 ;
"RTN","C9CMODCD",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODCD",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODCD",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODCD",7,0)
 ;
"RTN","C9CMODCD",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODCD",9,0)
 ;
"RTN","C9CMODCD",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODCD",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODCD",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODCD",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODCD",14,0)
 ;limitations under the License.
"RTN","C9CMODCD",15,0)
  Q ;no entry from top
"RTN","C9CMODCD",16,0)
RPCFILT(C9CRET) ;RPC: C9C GERD DRUG FILTER
"RTN","C9CMODCD",17,0)
 ;C9CRET - return array
"RTN","C9CMODCD",18,0)
 ;find orderable item ien's for drugs we're interested in
"RTN","C9CMODCD",19,0)
 ;unfortunately in our environment, lot's of drug names have a trailing space
"RTN","C9CMODCD",20,0)
 ;so we need to check for that
"RTN","C9CMODCD",21,0)
 N OIIEN,CNT
"RTN","C9CMODCD",22,0)
 S CNT=0
"RTN","C9CMODCD",23,0)
 N DN
"RTN","C9CMODCD",24,0)
 F DN="FAMOTIDINE TAB","FAMOTIDINE TAB ","OMEPRAZOLE CAP,EC","OMEPRAZOLE CAP,EC ","OMEPRAZOLE/SODIUM BICARBONATE ","PANTOPRAZOLE TAB,EC","PANTOPRAZOLE TAB,EC ","PANTOPRAZOLE INJ,PWDR","PANTOPRAZOLE INJ,PWDR ","RANITIDINE TAB","RANITIDINE TAB ","RANITIDINE INJ","RANITIDINE INJ ","ESOMEPRAZOLE CAP,EC","ESOMEPRAZOLE CAP,EC ","ESOMEPRAZOLE CAP,SA","ESOMEPRAZOLE CAP,SA ","LANSOPRAZOLE CAP,EC","LANSOPRAZOLE CAP,EC ","LANSOPRAZOLE TAB,ORAL DISINTEG","RABEPRAZOLE TAB,EC","RABEPRAZOLE TAB,EC ","DEXLANSOPRAZOLE CAP,EC","DEXLANSOPRAZOLE CAP,EC " D
"RTN","C9CMODCD",25,0)
 .S OIIEN=$O(^ORD(101.43,"B",DN,0))
"RTN","C9CMODCD",26,0)
 .I OIIEN>0 S C9CRET($I(CNT))=OIIEN_"^"_$$TRIM^XLFSTR(DN)
"RTN","C9CMODCD",27,0)
 Q
"RTN","C9CMODCD",28,0)
RPC(C9CRET,WARD,FILTER) ;RPC: C9C ON GERD DRUGS
"RTN","C9CMODCD",29,0)
 ;C9CRET - return array
"RTN","C9CMODCD",30,0)
 ;WARD - ward name from ward/location file
"RTN","C9CMODCD",31,0)
 ;FILTER - optional Filter Values As Set By User
"RTN","C9CMODCD",32,0)
 Q:$G(WARD)=""
"RTN","C9CMODCD",33,0)
 I '$D(FILTER) D ;if no filter, populate with all possible values
"RTN","C9CMODCD",34,0)
 .D RPCFILT(.FILTER)
"RTN","C9CMODCD",35,0)
 Q:'$D(FILTER)
"RTN","C9CMODCD",36,0)
 ;order status we are interested in - from status file 100.01
"RTN","C9CMODCD",37,0)
 N AX,STATIEN,STAT
"RTN","C9CMODCD",38,0)
 F AX="ACTIVE","PENDING","RENEWED","DELAYED","SCHEDULED" D
"RTN","C9CMODCD",39,0)
 .S STATIEN=$O(^ORD(100.01,"B",AX,0))
"RTN","C9CMODCD",40,0)
 .I STATIEN>0 S STAT(STATIEN)=AX 
"RTN","C9CMODCD",41,0)
 Q:'$D(STAT)
"RTN","C9CMODCD",42,0)
 N CNT S CNT=0
"RTN","C9CMODCD",43,0)
 N CX
"RTN","C9CMODCD",44,0)
 S CX="" F  S CX=$O(FILTER(CX)) Q:CX=""  D ;filters come in from C# in zero based array
"RTN","C9CMODCD",45,0)
 .N TD ;orderable item ien
"RTN","C9CMODCD",46,0)
 .S TD=$P(FILTER(CX),"^",1)
"RTN","C9CMODCD",47,0)
 .N PAT ;AOI index has global reference like "4167;DPT("
"RTN","C9CMODCD",48,0)
 .S PAT="" F  S PAT=$O(^OR(100,"AOI",TD,PAT)) Q:PAT=""  D
"RTN","C9CMODCD",49,0)
 ..N IDT ;inverse date/time, patient may have multiple orders
"RTN","C9CMODCD",50,0)
 ..S IDT=0 F  S IDT=$O(^OR(100,"AOI",TD,PAT,IDT)) Q:IDT'>0  D
"RTN","C9CMODCD",51,0)
 ...N ORNO ;order number in file 100
"RTN","C9CMODCD",52,0)
 ...S ORNO=0 F  S ORNO=$O(^OR(100,"AOI",TD,PAT,IDT,ORNO)) Q:ORNO'>0  D
"RTN","C9CMODCD",53,0)
 ....N STATUS
"RTN","C9CMODCD",54,0)
 ....S STATUS=$P($G(^OR(100,ORNO,3)),"^",3)
"RTN","C9CMODCD",55,0)
 ....Q:'$D(STAT(STATUS))
"RTN","C9CMODCD",56,0)
 ....N PATDFN I $P(PAT,";",2)="DPT(" S PATDFN=$P(PAT,";",1)
"RTN","C9CMODCD",57,0)
 ....Q:$G(PATDFN)'>0
"RTN","C9CMODCD",58,0)
 ....N PATWARD
"RTN","C9CMODCD",59,0)
 ....S PATWARD=$P($G(^DPT(PATDFN,.1)),"^",1)
"RTN","C9CMODCD",60,0)
 ....I PATWARD=WARD D
"RTN","C9CMODCD",61,0)
 .....N EDATE ;external date
"RTN","C9CMODCD",62,0)
 .....S EDATE=$$FMTE^XLFDT(9999999-IDT)
"RTN","C9CMODCD",63,0)
 .....N ROWCOLOR S ROWCOLOR="" ;Default
"RTN","C9CMODCD",64,0)
 .....N MF ;male,female, etc.
"RTN","C9CMODCD",65,0)
 .....S MF=$P($G(^DPT(PATDFN,0)),"^",2)
"RTN","C9CMODCD",66,0)
 .....I MF="M" S ROWCOLOR="LightGreen"
"RTN","C9CMODCD",67,0)
 .....I MF="F" S ROWCOLOR="LightCoral"
"RTN","C9CMODCD",68,0)
 .....N PATNAME S PATNAME=$P($G(^DPT(PATDFN,0)),"^",1)
"RTN","C9CMODCD",69,0)
 .....N DRUGNAME S DRUGNAME=$P(FILTER(CX),"^",2)
"RTN","C9CMODCD",70,0)
 .....S C9CRET($I(CNT))=PATDFN_"^"_PATNAME_"^"_WARD_"^"_DRUGNAME_"^"_EDATE_"^"_ORNO_"^"_STAT(STATUS)_"^"_ROWCOLOR
"RTN","C9CMODCD",71,0)
 Q
"RTN","C9CMODCD",72,0)
 
"RTN","C9CMODCP")
0^11^B6782863
"RTN","C9CMODCP",1,0)
C9CMODCP ;CRH JHT 2019 - dashboard module to display current and future covering providers
"RTN","C9CMODCP",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CMODCP",3,0)
 ;
"RTN","C9CMODCP",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODCP",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODCP",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODCP",7,0)
 ;
"RTN","C9CMODCP",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODCP",9,0)
 ;
"RTN","C9CMODCP",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODCP",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODCP",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODCP",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODCP",14,0)
 ;limitations under the License.
"RTN","C9CMODCP",15,0)
 Q ;no entry from top
"RTN","C9CMODCP",16,0)
RPC(C9CRET) ;RPC=C9C COVERING PROVIDERS MODULE
"RTN","C9CMODCP",17,0)
 N CNT
"RTN","C9CMODCP",18,0)
 S CNT=0
"RTN","C9CMODCP",19,0)
 N RNOW
"RTN","C9CMODCP",20,0)
 S RNOW=$$NOW^XLFDT
"RTN","C9CMODCP",21,0)
 N PIEN
"RTN","C9CMODCP",22,0)
 S PIEN=0 F  S PIEN=$O(^C9C(300003,PIEN)) Q:PIEN'>0  D
"RTN","C9CMODCP",23,0)
 .N CIEN
"RTN","C9CMODCP",24,0)
 .S CIEN=0 F  S CIEN=$O(^C9C(300003,PIEN,1,CIEN)) Q:CIEN'>0  D
"RTN","C9CMODCP",25,0)
 ..N EDATE
"RTN","C9CMODCP",26,0)
 ..S EDATE=RNOW F  S EDATE=$O(^C9C(300003,PIEN,1,CIEN,1,"C9CE",EDATE)) Q:EDATE'>0  D
"RTN","C9CMODCP",27,0)
 ...N SUBREC
"RTN","C9CMODCP",28,0)
 ...S SUBREC=0 F  S SUBREC=$O(^C9C(300003,PIEN,1,CIEN,1,"C9CE",EDATE,SUBREC)) Q:SUBREC'>0  D
"RTN","C9CMODCP",29,0)
 ....N DELETED
"RTN","C9CMODCP",30,0)
 ....S DELETED=$P($G(^C9C(300003,PIEN,1,CIEN,1,SUBREC,8)),"^",1)
"RTN","C9CMODCP",31,0)
 ....I DELETED'>0 D
"RTN","C9CMODCP",32,0)
 .....N PATIEN
"RTN","C9CMODCP",33,0)
 .....S PATIEN=$P($G(^C9C(300003,PIEN,0)),"^",1)
"RTN","C9CMODCP",34,0)
 .....I PATIEN>0 D
"RTN","C9CMODCP",35,0)
 ......N PATNAME
"RTN","C9CMODCP",36,0)
 ......S PATNAME=$P($G(^DPT(PATIEN,0)),"^",1)
"RTN","C9CMODCP",37,0)
 ......N COVIEN
"RTN","C9CMODCP",38,0)
 ......S COVIEN=$P($G(^C9C(300003,PIEN,1,CIEN,0)),"^",1)
"RTN","C9CMODCP",39,0)
 ......I COVIEN>0 D
"RTN","C9CMODCP",40,0)
 .......N COVNAME
"RTN","C9CMODCP",41,0)
 .......S COVNAME=$P($G(^VA(200,COVIEN,0)),"^",1)
"RTN","C9CMODCP",42,0)
 .......N BDATE
"RTN","C9CMODCP",43,0)
 .......S BDATE=$P($G(^C9C(300003,PIEN,1,CIEN,1,SUBREC,0)),"^",1)
"RTN","C9CMODCP",44,0)
 .......N ENTBYIEN
"RTN","C9CMODCP",45,0)
 .......S ENTBYIEN=$P($G(^C9C(300003,PIEN,1,CIEN,1,SUBREC,2)),"^",1)
"RTN","C9CMODCP",46,0)
 .......N ENTNAME
"RTN","C9CMODCP",47,0)
 .......S ENTNAME=""
"RTN","C9CMODCP",48,0)
 .......I ENTBYIEN>0 D
"RTN","C9CMODCP",49,0)
 ........S ENTNAME=$P($G(^VA(200,ENTBYIEN,0)),"^",1)
"RTN","C9CMODCP",50,0)
 .......N PATWARD
"RTN","C9CMODCP",51,0)
 .......S PATWARD=$P($G(^DPT(PATIEN,.1)),"^",1)
"RTN","C9CMODCP",52,0)
 .......N ATTIEN
"RTN","C9CMODCP",53,0)
 .......S ATTIEN=$P($G(^DPT(PATIEN,.1041)),"^",1)
"RTN","C9CMODCP",54,0)
 .......N ATTNAME
"RTN","C9CMODCP",55,0)
 .......S ATTNAME=""
"RTN","C9CMODCP",56,0)
 .......I ATTIEN>0 D
"RTN","C9CMODCP",57,0)
 ........S ATTNAME=$P($G(^VA(200,ATTIEN,0)),"^",1)
"RTN","C9CMODCP",58,0)
 .......N COLOR
"RTN","C9CMODCP",59,0)
 .......I BDATE<RNOW S COLOR="LightGreen"
"RTN","C9CMODCP",60,0)
 .......E  I ($$FMADD^XLFDT(BDATE,-3)<RNOW) S COLOR="LightYellow"
"RTN","C9CMODCP",61,0)
 .......E  S COLOR="White"
"RTN","C9CMODCP",62,0)
 .......S C9CRET($I(CNT))=PATIEN_"^"_PATNAME_"^"_PATWARD_"^"_ATTNAME_"^"_COVNAME_"^"_$$FMTE^XLFDT(BDATE)_"^"_$$FMTE^XLFDT(EDATE)_"^"_COLOR
"RTN","C9CMODCP",63,0)
 Q
"RTN","C9CMODCS")
0^12^B7469301
"RTN","C9CMODCS",1,0)
C9CMODCS ;CRH JHT 2020 - dashboard module to display current and future covering social workers
"RTN","C9CMODCS",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CMODCS",3,0)
 ;
"RTN","C9CMODCS",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODCS",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODCS",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODCS",7,0)
 ;
"RTN","C9CMODCS",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODCS",9,0)
 ;
"RTN","C9CMODCS",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODCS",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODCS",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODCS",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODCS",14,0)
 ;limitations under the License.
"RTN","C9CMODCS",15,0)
 Q ;no entry from top
"RTN","C9CMODCS",16,0)
RPC(C9CRET) ;RPC=C9C COVERING SW MODULE
"RTN","C9CMODCS",17,0)
 N CNT
"RTN","C9CMODCS",18,0)
 S CNT=0
"RTN","C9CMODCS",19,0)
 N RNOW
"RTN","C9CMODCS",20,0)
 S RNOW=$$NOW^XLFDT
"RTN","C9CMODCS",21,0)
 N PIEN
"RTN","C9CMODCS",22,0)
 S PIEN=0 F  S PIEN=$O(^C9C(300004,PIEN)) Q:PIEN'>0  D
"RTN","C9CMODCS",23,0)
 .N CIEN
"RTN","C9CMODCS",24,0)
 .S CIEN=0 F  S CIEN=$O(^C9C(300004,PIEN,1,CIEN)) Q:CIEN'>0  D
"RTN","C9CMODCS",25,0)
 ..N EDATE
"RTN","C9CMODCS",26,0)
 ..S EDATE=RNOW F  S EDATE=$O(^C9C(300004,PIEN,1,CIEN,1,"C9CE",EDATE)) Q:EDATE'>0  D
"RTN","C9CMODCS",27,0)
 ...N SUBREC
"RTN","C9CMODCS",28,0)
 ...S SUBREC=0 F  S SUBREC=$O(^C9C(300004,PIEN,1,CIEN,1,"C9CE",EDATE,SUBREC)) Q:SUBREC'>0  D
"RTN","C9CMODCS",29,0)
 ....N DELETED
"RTN","C9CMODCS",30,0)
 ....S DELETED=$P($G(^C9C(300004,PIEN,1,CIEN,1,SUBREC,8)),"^",1)
"RTN","C9CMODCS",31,0)
 ....I DELETED'>0 D
"RTN","C9CMODCS",32,0)
 .....N PATIEN
"RTN","C9CMODCS",33,0)
 .....S PATIEN=$P($G(^C9C(300004,PIEN,0)),"^",1)
"RTN","C9CMODCS",34,0)
 .....I PATIEN>0 D
"RTN","C9CMODCS",35,0)
 ......N PATNAME
"RTN","C9CMODCS",36,0)
 ......S PATNAME=$P($G(^DPT(PATIEN,0)),"^",1)
"RTN","C9CMODCS",37,0)
 ......N COVIEN
"RTN","C9CMODCS",38,0)
 ......S COVIEN=$P($G(^C9C(300004,PIEN,1,CIEN,0)),"^",1)
"RTN","C9CMODCS",39,0)
 ......I COVIEN>0 D
"RTN","C9CMODCS",40,0)
 .......N COVNAME
"RTN","C9CMODCS",41,0)
 .......S COVNAME=$P($G(^VA(200,COVIEN,0)),"^",1)
"RTN","C9CMODCS",42,0)
 .......N BDATE
"RTN","C9CMODCS",43,0)
 .......S BDATE=$P($G(^C9C(300004,PIEN,1,CIEN,1,SUBREC,0)),"^",1)
"RTN","C9CMODCS",44,0)
 .......N ENTBYIEN
"RTN","C9CMODCS",45,0)
 .......S ENTBYIEN=$P($G(^C9C(300004,PIEN,1,CIEN,1,SUBREC,2)),"^",1)
"RTN","C9CMODCS",46,0)
 .......N ENTNAME
"RTN","C9CMODCS",47,0)
 .......S ENTNAME=""
"RTN","C9CMODCS",48,0)
 .......I ENTBYIEN>0 D
"RTN","C9CMODCS",49,0)
 ........S ENTNAME=$P($G(^VA(200,ENTBYIEN,0)),"^",1)
"RTN","C9CMODCS",50,0)
 .......N PATWARD
"RTN","C9CMODCS",51,0)
 .......S PATWARD=$P($G(^DPT(PATIEN,.1)),"^",1)
"RTN","C9CMODCS",52,0)
 .......;get the current social worker
"RTN","C9CMODCS",53,0)
 .......N SWNAME
"RTN","C9CMODCS",54,0)
 .......S SWNAME=""
"RTN","C9CMODCS",55,0)
 .......N PATREC
"RTN","C9CMODCS",56,0)
 .......S PATREC=$O(^DIZ(300002,"B",PATIEN,0))
"RTN","C9CMODCS",57,0)
 .......I PATREC>0 D
"RTN","C9CMODCS",58,0)
 ........N SWIEN
"RTN","C9CMODCS",59,0)
 ........S SWIEN=$P($G(^DIZ(300002,PATREC,11)),"^",1)
"RTN","C9CMODCS",60,0)
 ........I SWIEN>0 D
"RTN","C9CMODCS",61,0)
 .........S SWNAME=$P($G(^VA(200,SWIEN,0)),"^",1)
"RTN","C9CMODCS",62,0)
 .......N COLOR
"RTN","C9CMODCS",63,0)
 .......I BDATE<RNOW S COLOR="LightGreen"
"RTN","C9CMODCS",64,0)
 .......E  I ($$FMADD^XLFDT(BDATE,-3)<RNOW) S COLOR="LightYellow"
"RTN","C9CMODCS",65,0)
 .......E  S COLOR="White"
"RTN","C9CMODCS",66,0)
 .......S C9CRET($I(CNT))=PATIEN_"^"_PATNAME_"^"_PATWARD_"^"_SWNAME_"^"_COVNAME_"^"_$$FMTE^XLFDT(BDATE)_"^"_$$FMTE^XLFDT(EDATE)_"^"_COLOR
"RTN","C9CMODCS",67,0)
 Q
"RTN","C9CMODND")
0^13^B1903840709
"RTN","C9CMODND",1,0)
C9CMODND ;module RPCs for C9C DASHBOARD MODULE Notes Due
"RTN","C9CMODND",2,0)
 ; Date fix, 6 places, by RMS for CRH 20191015;;;;;Build 2
"RTN","C9CMODND",3,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina]
"RTN","C9CMODND",4,0)
 ;
"RTN","C9CMODND",5,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODND",6,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODND",7,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODND",8,0)
 ;
"RTN","C9CMODND",9,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODND",10,0)
 ;
"RTN","C9CMODND",11,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODND",12,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODND",13,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODND",14,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODND",15,0)
 ;limitations under the License.
"RTN","C9CMODND",16,0)
 Q ;no entry from top
"RTN","C9CMODND",17,0)
RPCND(C9CRET,WARD,FILTERS) ;get notes due data
"RTN","C9CMODND",18,0)
 ;C9CRET - return array
"RTN","C9CMODND",19,0)
 ;WARD - ward name from ward/location file
"RTN","C9CMODND",20,0)
 ;FILTERS - zero-based list of TIU DOCUMENT DEFINITION ien^Name to include in results
"RTN","C9CMODND",21,0)
 ;Patient^Note Title^Due^Ward
"RTN","C9CMODND",22,0)
 Q:$G(WARD)=""
"RTN","C9CMODND",23,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CMODND",24,0)
 N C9CI
"RTN","C9CMODND",25,0)
 S C9CI=0
"RTN","C9CMODND",26,0)
 I $G(FILTERS(0))="" D ;no filters so use all titles that have rules
"RTN","C9CMODND",27,0)
 .;First get all titles with rules engine rules defined
"RTN","C9CMODND",28,0)
 .N TITLES
"RTN","C9CMODND",29,0)
 .D RPCAF(.TITLES)
"RTN","C9CMODND",30,0)
 .;remove trailing spaces since some titles seem to have them
"RTN","C9CMODND",31,0)
 .N TX
"RTN","C9CMODND",32,0)
 .S TX=0 F  S TX=$O(TITLES(TX)) Q:TX'>0  D
"RTN","C9CMODND",33,0)
 ..N TL
"RTN","C9CMODND",34,0)
 ..S TL=$L(TITLES(TX))
"RTN","C9CMODND",35,0)
 ..I $E(TITLES(TX),TL)=" " S TITLES(TX)=$E(TITLES(TX),1,TL-1)
"RTN","C9CMODND",36,0)
 .N RP
"RTN","C9CMODND",37,0)
 .S RP=0 F  S RP=$O(TITLES(RP)) Q:RP'>0  D
"RTN","C9CMODND",38,0)
 ..S FILTERS(RP-1)=TITLES(RP)
"RTN","C9CMODND",39,0)
 Q:($G(FILTERS(0)))=""
"RTN","C9CMODND",40,0)
 ;For each of these titles compare ward patients against cohort rules, then ward, then unit, then hospital
"RTN","C9CMODND",41,0)
 N CIEN
"RTN","C9CMODND",42,0)
 S CIEN=$O(^TIU(8925.6,"B","COMPLETED",0)) ;note status
"RTN","C9CMODND",43,0)
 Q:CIEN'>0
"RTN","C9CMODND",44,0)
 ;start with titles to be sure that they are included in user's filter
"RTN","C9CMODND",45,0)
 N FX
"RTN","C9CMODND",46,0)
 N WARDIEN
"RTN","C9CMODND",47,0)
 S WARDIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CMODND",48,0)
 Q:WARDIEN'>0
"RTN","C9CMODND",49,0)
 N UNIT ;bedsection in file 42
"RTN","C9CMODND",50,0)
 S UNIT=$P($G(^DIC(42,WARDIEN,0)),"^",2)
"RTN","C9CMODND",51,0)
 Q:UNIT=""
"RTN","C9CMODND",52,0)
 N DIV
"RTN","C9CMODND",53,0)
 S DIV=DUZ(2)
"RTN","C9CMODND",54,0)
 Q:DIV'>0
"RTN","C9CMODND",55,0)
 N RNOW
"RTN","C9CMODND",56,0)
 S RNOW=$$NOW^XLFDT
"RTN","C9CMODND",57,0)
 N YEAR ;year
"RTN","C9CMODND",58,0)
 S YEAR=$E(RNOW,2,3)
"RTN","C9CMODND",59,0)
 N CENTURY
"RTN","C9CMODND",60,0)
 S CENTURY=$E(RNOW,1,1)
"RTN","C9CMODND",61,0)
 N DHMS; month day hour minutes seconds
"RTN","C9CMODND",62,0)
 S DHMS=$E(RNOW,4,99)
"RTN","C9CMODND",63,0)
 S FX="" F  S FX=$O(FILTERS(FX)) Q:FX=""  D ;if included in filters (this is a zero-based array)
"RTN","C9CMODND",64,0)
 .;go through each formula
"RTN","C9CMODND",65,0)
 .;find this title in C9C RULES ENGINE FILE
"RTN","C9CMODND",66,0)
 .N OFFSET ;CRH JHT 2019 - for override logic
"RTN","C9CMODND",67,0)
 .S OFFSET=0 ;CRH JHT 2019 - for override logic
"RTN","C9CMODND",68,0)
 .N TITLIEN,TITLNAME
"RTN","C9CMODND",69,0)
 .S TITLIEN=$P(FILTERS(FX),"^",1)
"RTN","C9CMODND",70,0)
 .S TITLNAME=$P(FILTERS(FX),"^",2)
"RTN","C9CMODND",71,0)
 .N REIEN S REIEN=$O(^C9C(300890,"B",TITLIEN_";TIU(8925.1,",0))
"RTN","C9CMODND",72,0)
 .I (REIEN>0) I ($P($G(^C9C(300890,REIEN,4)),"^",1)'>0) D ;not inactive
"RTN","C9CMODND",73,0)
 ..;check for required health factor
"RTN","C9CMODND",74,0)
 ..N HFACTIEN ;health factor check
"RTN","C9CMODND",75,0)
 ..S HFACTIEN=$P($G(^C9C(300890,REIEN,5)),"^",1) ;health factor check
"RTN","C9CMODND",76,0)
 ..;see if any of the rules involve special orderable item cohorts as this is the most granular case
"RTN","C9CMODND",77,0)
 ..N OCOHORT ;FORMULA IEN^RULE IEN^ORDERABLE ITEM IEN
"RTN","C9CMODND",78,0)
 ..N OCNT ;OCOHORT counter
"RTN","C9CMODND",79,0)
 ..S OCNT=0
"RTN","C9CMODND",80,0)
 ..N WF ;ward formula
"RTN","C9CMODND",81,0)
 ..S WF=0 F  S WF=$O(^C9C(300890,REIEN,1,WF)) Q:WF'>0  D
"RTN","C9CMODND",82,0)
 ...;check formula wards to see if applicable
"RTN","C9CMODND",83,0)
 ...I $O(^C9C(300890,REIEN,1,WF,2,"B",WARDIEN,0))>0 D ;ward included in this formula
"RTN","C9CMODND",84,0)
 ....N FR ;formula rule
"RTN","C9CMODND",85,0)
 ....S FR=0 F  S FR=$O(^C9C(300890,REIEN,1,WF,1,FR)) Q:FR'>0  D
"RTN","C9CMODND",86,0)
 .....N RP ;rule pointer value
"RTN","C9CMODND",87,0)
 .....S RP=$P($G(^C9C(300890,REIEN,1,WF,1,FR,0)),"^",1)
"RTN","C9CMODND",88,0)
 .....I RP>0 D
"RTN","C9CMODND",89,0)
 ......N ORIEN ;orderable item ien
"RTN","C9CMODND",90,0)
 ......S ORIEN=$P($G(^C9C(300890,REIEN,1,WF,1,FR,7)),"^",1)
"RTN","C9CMODND",91,0)
 ......I ORIEN>0 D ;orderable item cohort found
"RTN","C9CMODND",92,0)
 .......S OCNT=OCNT+1
"RTN","C9CMODND",93,0)
 .......S OCOHORT("WARD",OCNT)=WF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CMODND",94,0)
 ..N UF ;unit formula
"RTN","C9CMODND",95,0)
 ..S UF=0 F  S UF=$O(^C9C(300890,REIEN,2,UF)) Q:UF'>0  D
"RTN","C9CMODND",96,0)
 ...;check formula units to see if applicable
"RTN","C9CMODND",97,0)
 ...I $O(^C9C(300890,REIEN,2,UF,2,"B",UNIT,0))>0 D ;unit included in this formula
"RTN","C9CMODND",98,0)
 ....N FR ;formula rule
"RTN","C9CMODND",99,0)
 ....S FR=0 F  S FR=$O(^C9C(300890,REIEN,2,UF,1,FR)) Q:FR'>0  D
"RTN","C9CMODND",100,0)
 .....N RP ;rule pointer value
"RTN","C9CMODND",101,0)
 .....S RP=$P($G(^C9C(300890,REIEN,2,UF,1,FR,0)),"^",1)
"RTN","C9CMODND",102,0)
 .....I RP>0 D
"RTN","C9CMODND",103,0)
 ......N ORIEN ;orderable item ien
"RTN","C9CMODND",104,0)
 ......S ORIEN=$P($G(^C9C(300890,REIEN,2,UF,1,FR,7)),"^",1)
"RTN","C9CMODND",105,0)
 ......I ORIEN>0 D ;orderable item cohort found
"RTN","C9CMODND",106,0)
 .......S OCNT=OCNT+1
"RTN","C9CMODND",107,0)
 .......S OCOHORT("UNIT",OCNT)=UF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CMODND",108,0)
 ..N HF ;hospital formula
"RTN","C9CMODND",109,0)
 ..S HF=0 F  S HF=$O(^C9C(300890,REIEN,3,HF)) Q:HF'>0  D
"RTN","C9CMODND",110,0)
 ...;check formula hospital to see if applicable using DUZ(2)
"RTN","C9CMODND",111,0)
 ...I $O(^C9C(300890,REIEN,3,HF,2,"B",DIV,0))>0 D ;hospital included in this formula
"RTN","C9CMODND",112,0)
 ....N FR ;formula rule
"RTN","C9CMODND",113,0)
 ....S FR=0 F  S FR=$O(^C9C(300890,REIEN,3,HF,1,FR)) Q:FR'>0  D
"RTN","C9CMODND",114,0)
 .....N RP ;rule pointer value
"RTN","C9CMODND",115,0)
 .....S RP=$P($G(^C9C(300890,REIEN,3,HF,1,FR,0)),"^",1)
"RTN","C9CMODND",116,0)
 .....I RP>0 D
"RTN","C9CMODND",117,0)
 ......N ORIEN ;orderable item ien
"RTN","C9CMODND",118,0)
 ......S ORIEN=$P($G(^C9C(300890,REIEN,3,HF,1,FR,7)),"^",1)
"RTN","C9CMODND",119,0)
 ......I ORIEN>0 D ;orderable item cohort found
"RTN","C9CMODND",120,0)
 .......S OCNT=OCNT+1
"RTN","C9CMODND",121,0)
 .......S OCOHORT("HOSPITAL",OCNT)=HF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CMODND",122,0)
 ..;now loop through the patients on this ward and check each note 
"RTN","C9CMODND",123,0)
 ..N PAT
"RTN","C9CMODND",124,0)
 ..S PAT=0 F  S PAT=$O(^DPT("ACN",WARD,PAT)) Q:PAT'>0  D ;go through patients on the ward
"RTN","C9CMODND",125,0)
 ...;use the APT cross-reference ^TIU(8925,"APT",PAT,TITLIEN,DOCSTATUS(zero node, piece 5 P:8925.6),INVERSE DATE(node 13, piece 1)
"RTN","C9CMODND",126,0)
 ...;check the resolution for reminder cohort
"RTN","C9CMODND",127,0)
 ...N RESOLU
"RTN","C9CMODND",128,0)
 ...S RESOLU=1 ;assume in cohort unless proven otherwise below
"RTN","C9CMODND",129,0)
 ...N CLEVEL ;cohort level, 0=no cohort, 1=in cohort, 2=not in cohort ;mar 3,2020
"RTN","C9CMODND",130,0)
 ...S CLEVEL=0 ;start by assuming no cohort ;mar 3,2020
"RTN","C9CMODND",131,0)
 ...N REMIEN
"RTN","C9CMODND",132,0)
 ...S REMIEN=$P($G(^C9C(300890,REIEN,6)),"^",1) ;reminder cohort to check
"RTN","C9CMODND",133,0)
 ...N DEFARR
"RTN","C9CMODND",134,0)
 ...I REMIEN>0 D
"RTN","C9CMODND",135,0)
 ....S CLEVEL=1 ;start by assuming in cohort ;mar 3,2020
"RTN","C9CMODND",136,0)
 ....N DATE ;must be newed but not populated to return current value
"RTN","C9CMODND",137,0)
 ....N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CMODND",138,0)
 ....S PXRMDEBG=1
"RTN","C9CMODND",139,0)
 ....D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CMODND",140,0)
 ....N FIEVAL
"RTN","C9CMODND",141,0)
 ....D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CMODND",142,0)
 ....I $G(PXRMID)'="" D
"RTN","C9CMODND",143,0)
 .....N RESULT
"RTN","C9CMODND",144,0)
 .....S RESULT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CMODND",145,0)
 .....I RESULT=0 D
"RTN","C9CMODND",146,0)
 ......S RESOLU=0
"RTN","C9CMODND",147,0)
 ......S CLEVEL=2 ;not in cohort ;mar 3,2020
"RTN","C9CMODND",148,0)
 ......;check to see if we need to process pass-through reminders anyway
"RTN","C9CMODND",149,0)
 ......I $P($G(^C9C(300890,REIEN,7)),"^",1)>0 D
"RTN","C9CMODND",150,0)
 .......S RESOLU=2 ;yes, process pass-thru rules only
"RTN","C9CMODND",151,0)
 .....K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CMODND",152,0)
 ...Q:RESOLU=0 ;patient not in reminder cohort for this title
"RTN","C9CMODND",153,0)
 ...N PTONLY
"RTN","C9CMODND",154,0)
 ...S PTONLY=0
"RTN","C9CMODND",155,0)
 ...I RESOLU=2 S PTONLY=1 ;pass-throughs only
"RTN","C9CMODND",156,0)
 ...N DUEDATE ;next note due date
"RTN","C9CMODND",157,0)
 ...S DUEDATE=0
"RTN","C9CMODND",158,0)
 ...N FNOTEIEN ;found note ien
"RTN","C9CMODND",159,0)
 ...S FNOTEIEN=""
"RTN","C9CMODND",160,0)
 ...N ROWCOLOR
"RTN","C9CMODND",161,0)
 ...S ROWCOLOR=""
"RTN","C9CMODND",162,0)
 ...N ADATE ;latest patient admit date
"RTN","C9CMODND",163,0)
 ...S ADATE=0
"RTN","C9CMODND",164,0)
 ...N ADIEN ;movement ien
"RTN","C9CMODND",165,0)
 ...S ADIEN=$G(^DPT(PAT,.105))
"RTN","C9CMODND",166,0)
 ...I ADIEN>0 D
"RTN","C9CMODND",167,0)
 ....S ADATE=$P($G(^DGPM(ADIEN,0)),"^",1)
"RTN","C9CMODND",168,0)
 ...N NONOTE ;set to one if this note has not been completed during this visit or within two days before
"RTN","C9CMODND",169,0)
 ...S NONOTE=1 ;set to one for now, will check for completed note below
"RTN","C9CMODND",170,0)
 ...;get the latest note (will also need to check to be sure it is during this visit)
"RTN","C9CMODND",171,0)
 ...N NOTEOK ;has the health factor if required
"RTN","C9CMODND",172,0)
 ...S NOTEOK=0
"RTN","C9CMODND",173,0)
 ...N INVDATE
"RTN","C9CMODND",174,0)
 ...S INVDATE=0
"RTN","C9CMODND",175,0)
 ...N NDATE ;inverse note date for note ien being checked
"RTN","C9CMODND",176,0)
 ...S NDATE=0 F  S NDATE=$O(^TIU(8925,"APT",PAT,TITLIEN,CIEN,NDATE)) Q:((NDATE'>0)!(NOTEOK>0))  D ;if found, there has been a note with this title, check health factor if required
"RTN","C9CMODND",177,0)
 ....N NIEN
"RTN","C9CMODND",178,0)
 ....S NIEN=0 F  S NIEN=$O(^TIU(8925,"APT",PAT,TITLIEN,CIEN,NDATE,NIEN)) Q:NIEN'>0  D
"RTN","C9CMODND",179,0)
 .....;we now have the latest note ien, now check visit and rules
"RTN","C9CMODND",180,0)
 .....;note - what if event based, but event happened last visit?
"RTN","C9CMODND",181,0)
 .....S FNOTEIEN=NIEN
"RTN","C9CMODND",182,0)
 .....I (((9999999-NDATE)'<$$FMADD^XLFDT(ADATE,-2))&($P($G(^TIU(8925,FNOTEIEN,15)),"^",2)>0)) D ;this means that the note was during this visit or within two days before - should cover notes written in SAU and it is a signed note
"RTN","C9CMODND",183,0)
 ......I (HFACTIEN'>0) D
"RTN","C9CMODND",184,0)
 .......S NONOTE=0 ;has a completed note this admission for this title
"RTN","C9CMODND",185,0)
 .......S INVDATE=NDATE
"RTN","C9CMODND",186,0)
 .......S NOTEOK=1 ;july 2
"RTN","C9CMODND",187,0)
 ......E  D ;need to check the health factor required
"RTN","C9CMODND",188,0)
 .......N HFDATE
"RTN","C9CMODND",189,0)
 .......S HFDATE=9999999-NDATE
"RTN","C9CMODND",190,0)
 .......S HFDATE=HFDATE\1
"RTN","C9CMODND",191,0)
 .......S HFDATE=9999999-HFDATE
"RTN","C9CMODND",192,0)
 .......N ENTRYD S ENTRYD=$P($G(^TIU(8925,FNOTEIEN,12)),"^",1)
"RTN","C9CMODND",193,0)
 .......S ENTRYD=ENTRYD\1
"RTN","C9CMODND",194,0)
 .......S ENTRYD=9999999-ENTRYD
"RTN","C9CMODND",195,0)
 .......I (($D(^AUPNVHF("AA",PAT,HFACTIEN,HFDATE)))!($D(^AUPNVHF("AA",PAT,HFACTIEN,NDATE)))!($D(^AUPNVHF("AA",PAT,HFACTIEN,ENTRYD)))) D ;health factor exists for this note
"RTN","C9CMODND",196,0)
 ........S NONOTE=0
"RTN","C9CMODND",197,0)
 ........S INVDATE=NDATE
"RTN","C9CMODND",198,0)
 ........S NOTEOK=1 ;july 2
"RTN","C9CMODND",199,0)
 .......E  D
"RTN","C9CMODND",200,0)
 ........N VPTR
"RTN","C9CMODND",201,0)
 ........S VPTR=$P($G(^TIU(8925,FNOTEIEN,0)),"^",3) 
"RTN","C9CMODND",202,0)
 ........I VPTR>0 D
"RTN","C9CMODND",203,0)
 .........N VDATE
"RTN","C9CMODND",204,0)
 .........S VDATE=$P($G(^AUPNVSIT(VPTR,0)),"^",1)
"RTN","C9CMODND",205,0)
 .........I VDATE>0 D
"RTN","C9CMODND",206,0)
 ..........S VDATE=VDATE\1
"RTN","C9CMODND",207,0)
 ..........S VDATE=9999999-VDATE
"RTN","C9CMODND",208,0)
 ..........I $D(^AUPNVHF("AA",PAT,HFACTIEN,VDATE)) D
"RTN","C9CMODND",209,0)
 ...........S NONOTE=0
"RTN","C9CMODND",210,0)
 ...........S INVDATE=NDATE
"RTN","C9CMODND",211,0)
 ...........S NOTEOK=1
"RTN","C9CMODND",212,0)
 ...I INVDATE'>0 D
"RTN","C9CMODND",213,0)
 ....S INVDATE=9999999
"RTN","C9CMODND",214,0)
 ...;check all the rules and find the next one due
"RTN","C9CMODND",215,0)
 ...;first check the cohort rules
"RTN","C9CMODND",216,0)
 ...N ACR ;applicable cohort rules
"RTN","C9CMODND",217,0)
 ...N EVNTDATE
"RTN","C9CMODND",218,0)
 ...I PTONLY'>0 ;but not if we're just checking pass-through reminders
"RTN","C9CMODND",219,0)
 ....N CH
"RTN","C9CMODND",220,0)
 ....S CH=0 F  S CH=$O(OCOHORT("WARD",CH)) Q:CH'>0  D
"RTN","C9CMODND",221,0)
 .....N ACNT ;applicable cohort rules counter
"RTN","C9CMODND",222,0)
 .....S ACNT=0
"RTN","C9CMODND",223,0)
 .....N OIEN
"RTN","C9CMODND",224,0)
 .....S OIEN=$P(OCOHORT("WARD",CH),"^",3)
"RTN","C9CMODND",225,0)
 .....I OIEN>0 D
"RTN","C9CMODND",226,0)
 ......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CMODND",227,0)
 ......;allowing it for now
"RTN","C9CMODND",228,0)
 ......N HASIT ;set to one if active order found
"RTN","C9CMODND",229,0)
 ......S HASIT=0
"RTN","C9CMODND",230,0)
 ......S EVNTDATE=0
"RTN","C9CMODND",231,0)
 ......N RPNTR
"RTN","C9CMODND",232,0)
 ......S RPNTR=$P(OCOHORT("WARD",CH),"^",2)
"RTN","C9CMODND",233,0)
 ......N ID ;inverse date
"RTN","C9CMODND",234,0)
 ......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CMODND",235,0)
 .......N TN ;order ien
"RTN","C9CMODND",236,0)
 .......S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CMODND",237,0)
 ........N IN ;instance
"RTN","C9CMODND",238,0)
 ........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CMODND",239,0)
 .........N OIF
"RTN","C9CMODND",240,0)
 .........S OIF=0 ;orderable item not found
"RTN","C9CMODND",241,0)
 .........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CMODND",242,0)
 ..........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CMODND",243,0)
 ...........S OIF=1
"RTN","C9CMODND",244,0)
 .........I OIF=1 D
"RTN","C9CMODND",245,0)
 ..........N STOPD ;stopdate
"RTN","C9CMODND",246,0)
 ..........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CMODND",247,0)
 ..........N STRTD
"RTN","C9CMODND",248,0)
 ..........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CMODND",249,0)
 ..........I ((STRTD<$$NOW^XLFDT)&((STOPD="")!(STOPD'<$$NOW^XLFDT))) D
"RTN","C9CMODND",250,0)
 ...........S HASIT=1 ;has active orderable item
"RTN","C9CMODND",251,0)
 ...........S EVNTDATE=STRTD
"RTN","C9CMODND",252,0)
 ...........S ACNT=ACNT+1
"RTN","C9CMODND",253,0)
 ...........S ACR("WARD",ACNT)=OCOHORT("WARD",CH)_"^"_TN_"^"_EVNTDATE ;Now OCOHORT("WARD",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CMODND",254,0)
 ....S CH=0 F  S CH=$O(OCOHORT("UNIT",CH)) Q:CH'>0  D
"RTN","C9CMODND",255,0)
 .....N ACNT ;applicable cohort rules counter
"RTN","C9CMODND",256,0)
 .....S ACNT=0
"RTN","C9CMODND",257,0)
 .....N OIEN
"RTN","C9CMODND",258,0)
 .....S OIEN=$P(OCOHORT("UNIT",CH),"^",3)
"RTN","C9CMODND",259,0)
 .....I OIEN>0 D
"RTN","C9CMODND",260,0)
 ......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CMODND",261,0)
 ......;allowing it for now
"RTN","C9CMODND",262,0)
 ......N HASIT ;set to one if active order found
"RTN","C9CMODND",263,0)
 ......S HASIT=0
"RTN","C9CMODND",264,0)
 ......S EVNTDATE=0
"RTN","C9CMODND",265,0)
 ......N RPNTR
"RTN","C9CMODND",266,0)
 ......S RPNTR=$P(OCOHORT("UNIT",CH),"^",2)
"RTN","C9CMODND",267,0)
 ......N ID ;inverse date
"RTN","C9CMODND",268,0)
 ......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CMODND",269,0)
 .......N TN ;order ien
"RTN","C9CMODND",270,0)
 .......S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CMODND",271,0)
 ........N IN ;instance
"RTN","C9CMODND",272,0)
 ........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CMODND",273,0)
 .........N OIF
"RTN","C9CMODND",274,0)
 .........S OIF=0 ;orderable item not found
"RTN","C9CMODND",275,0)
 .........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CMODND",276,0)
 ..........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CMODND",277,0)
 ...........S OIF=1
"RTN","C9CMODND",278,0)
 .........I OIF=1 D
"RTN","C9CMODND",279,0)
 ..........N STOPD ;stopdate
"RTN","C9CMODND",280,0)
 ..........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CMODND",281,0)
 ..........N STRTD
"RTN","C9CMODND",282,0)
 ..........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CMODND",283,0)
 ..........I ((STRTD<$$NOW^XLFDT)&((STOPD="")!(STOPD'<$$NOW^XLFDT))) D
"RTN","C9CMODND",284,0)
 ...........S HASIT=1 ;has active orderable item
"RTN","C9CMODND",285,0)
 ...........S EVNTDATE=STRTD
"RTN","C9CMODND",286,0)
 ...........S ACNT=ACNT+1
"RTN","C9CMODND",287,0)
 ...........S ACR("UNIT",ACNT)=OCOHORT("UNIT",CH)_"^"_TN_"^"_EVNTDATE ;;Now OCOHORT("UNIT",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CMODND",288,0)
 ....S CH=0 F  S CH=$O(OCOHORT("HOSPITAL",CH)) Q:CH'>0  D
"RTN","C9CMODND",289,0)
 .....N ACNT ;applicable cohort rules counter
"RTN","C9CMODND",290,0)
 .....S ACNT=0
"RTN","C9CMODND",291,0)
 .....N OIEN
"RTN","C9CMODND",292,0)
 .....S OIEN=$P(OCOHORT("HOSPITAL",CH),"^",3)
"RTN","C9CMODND",293,0)
 .....I OIEN>0 D
"RTN","C9CMODND",294,0)
 ......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CMODND",295,0)
 ......;allowing it for now
"RTN","C9CMODND",296,0)
 ......N HASIT ;set to one if active order found
"RTN","C9CMODND",297,0)
 ......S HASIT=0
"RTN","C9CMODND",298,0)
 ......S EVNTDATE=0
"RTN","C9CMODND",299,0)
 ......N RPNTR
"RTN","C9CMODND",300,0)
 ......S RPNTR=$P(OCOHORT("HOSPITAL",CH),"^",2)
"RTN","C9CMODND",301,0)
 ......N ID ;inverse date
"RTN","C9CMODND",302,0)
 ......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CMODND",303,0)
 .......N TN ;order ien
"RTN","C9CMODND",304,0)
 .......S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CMODND",305,0)
 ........N IN ;instance
"RTN","C9CMODND",306,0)
 ........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CMODND",307,0)
 .........N OIF
"RTN","C9CMODND",308,0)
 .........S OIF=0 ;orderable item not found
"RTN","C9CMODND",309,0)
 .........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CMODND",310,0)
 ..........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CMODND",311,0)
 ...........S OIF=1
"RTN","C9CMODND",312,0)
 .........I OIF=1 D
"RTN","C9CMODND",313,0)
 ..........N STOPD ;stopdate
"RTN","C9CMODND",314,0)
 ..........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CMODND",315,0)
 ..........N STRTD
"RTN","C9CMODND",316,0)
 ..........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CMODND",317,0)
 ..........I ((STRTD<$$NOW^XLFDT)&((STOPD="")!(STOPD'<$$NOW^XLFDT))) D
"RTN","C9CMODND",318,0)
 ...........S HASIT=1 ;has active orderable item
"RTN","C9CMODND",319,0)
 ...........S EVNTDATE=STRTD
"RTN","C9CMODND",320,0)
 ...........S ACNT=ACNT+1
"RTN","C9CMODND",321,0)
 ...........S ACR("HOSPITAL",ACNT)=OCOHORT("HOSPITAL",CH)_"^"_TN_"^"_EVNTDATE ;;Now OCOHORT("HOSPITAL",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CMODND",322,0)
 ....;ACR() now contains cohort rules applicable to this patient
"RTN","C9CMODND",323,0)
 ....;cohort rules trump everything - no other rules are considered if these are present!
"RTN","C9CMODND",324,0)
 ....;like the other rules, ward cohort trumps unit cohort trumps hospital cohort
"RTN","C9CMODND",325,0)
 ....;all three levels are contained in ACR, but they may be for varying orderable item iens
"RTN","C9CMODND",326,0)
 ...;so for each orderable item ien, use only the most granular, i.e. ward,unit,hospital
"RTN","C9CMODND",327,0)
 ...N APRULE ;applicable rule definition pointer
"RTN","C9CMODND",328,0)
 ...S APRULE=0
"RTN","C9CMODND",329,0)
 ...N RULELEVELFOUND ;use to track whether an applicable granular rule was found
"RTN","C9CMODND",330,0)
 ...S RULELEVELFOUND="" ;WARD, UNIT, or HOSPITAL
"RTN","C9CMODND",331,0)
 ...I $D(ACR) D
"RTN","C9CMODND",332,0)
 ....;use only these cohort rules - ward, unit, or hospital in that order
"RTN","C9CMODND",333,0)
 ....N BASEDATE
"RTN","C9CMODND",334,0)
 ....S BASEDATE=0
"RTN","C9CMODND",335,0)
 ....D ACRWUH(1,WARDIEN,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic
"RTN","C9CMODND",336,0)
 ....I RULELEVELFOUND="" D
"RTN","C9CMODND",337,0)
 .....D ACRWUH(2,UNIT,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic
"RTN","C9CMODND",338,0)
 .....I RULELEVELFOUND="" D
"RTN","C9CMODND",339,0)
 ......D ACRWUH(3,DIV,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic
"RTN","C9CMODND",340,0)
 ...I '$D(ACR) D 
"RTN","C9CMODND",341,0)
 ....;use ward, unit, or hospital rules in that order
"RTN","C9CMODND",342,0)
 ....S APRULE=0
"RTN","C9CMODND",343,0)
 ....D NAFWUH(1,WARDIEN,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,TITLIEN,REIEN,.OFFSET,PTONLY,CLEVEL) ;ward rules ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic ;CRH JHT 2020 - added PTONLY to allow pass-through only processing; CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODND",344,0)
 ....I RULELEVELFOUND="" D
"RTN","C9CMODND",345,0)
 .....D NAFWUH(2,UNIT,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,TITLIEN,REIEN,.OFFSET,PTONLY,CLEVEL) ;unit rules ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODND",346,0)
 .....I RULELEVELFOUND="" D
"RTN","C9CMODND",347,0)
 ......D NAFWUH(3,DIV,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,TITLIEN,REIEN,.OFFSET,PTONLY,CLEVEL) ;hospital rules ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 -added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODND",348,0)
 ...I ((DUEDATE>0)&(+APRULE>0)) D
"RTN","C9CMODND",349,0)
 ....;show this entry
"RTN","C9CMODND",350,0)
 ....;find out what color to display the row
"RTN","C9CMODND",351,0)
 ....S BASEDATE=DUEDATE
"RTN","C9CMODND",352,0)
 ....;begin CRH JHT 2019 - for override logic
"RTN","C9CMODND",353,0)
 ....N RPOINT
"RTN","C9CMODND",354,0)
 ....S RPOINT=+APRULE
"RTN","C9CMODND",355,0)
 ....;end CRH JHT 2019 - for override logic
"RTN","C9CMODND",356,0)
 ....N AHEAD
"RTN","C9CMODND",357,0)
 ....S AHEAD=$P(APRULE,"^",2)
"RTN","C9CMODND",358,0)
 ....I AHEAD'="" D
"RTN","C9CMODND",359,0)
 .....S C9CCHECK=$$ALMOST^C9CPTR(AHEAD,BASEDATE) ;for reminder logic only
"RTN","C9CMODND",360,0)
 ....E  D
"RTN","C9CMODND",361,0)
 .....S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,+APRULE,4)) I CKCODE'="" X CKCODE
"RTN","C9CMODND",362,0)
 ....I C9CCHECK>0 S ROWCOLOR="Yellow"
"RTN","C9CMODND",363,0)
 ....I C9CCHECK=0 D
"RTN","C9CMODND",364,0)
 .....S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,+APRULE,6)) I CKCODE'="" X CKCODE
"RTN","C9CMODND",365,0)
 .....I C9CCHECK>0 S ROWCOLOR="LightCoral"
"RTN","C9CMODND",366,0)
 ....N PATNAME
"RTN","C9CMODND",367,0)
 ....S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CMODND",368,0)
 ....N MRN
"RTN","C9CMODND",369,0)
 ....S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CMODND",370,0)
 ....N NOTEDATE
"RTN","C9CMODND",371,0)
 ....S NOTEDATE=(9999999-INVDATE)
"RTN","C9CMODND",372,0)
 ....I $P(NOTEDATE,".",1)>0 I $P(NOTEDATE,".",2)="" S NOTEDATE=NOTEDATE_".2359"
"RTN","C9CMODND",373,0)
 ....S NOTEDATE=$$FMTE^XLFDT(NOTEDATE)
"RTN","C9CMODND",374,0)
 ....I NOTEDATE=0 S NOTEDATE=""
"RTN","C9CMODND",375,0)
 ....I $P(DUEDATE,".",1)>0 I $P(DUEDATE,".",2)="" S DUEDATE=DUEDATE_".2359"
"RTN","C9CMODND",376,0)
 ....S DUEDATE=$$FMTE^XLFDT(DUEDATE)
"RTN","C9CMODND",377,0)
 ....I DUEDATE=0 S DUEDATE=""
"RTN","C9CMODND",378,0)
 ....N NOTEIEN
"RTN","C9CMODND",379,0)
 ....S NOTEIEN=$G(FNOTEIEN)
"RTN","C9CMODND",380,0)
 ....N OUTADMIT
"RTN","C9CMODND",381,0)
 ....S OUTADMIT=$$FMTE^XLFDT(ADATE)
"RTN","C9CMODND",382,0)
 ....N ATTEND
"RTN","C9CMODND",383,0)
 ....S ATTEND=$G(^DPT(PAT,.1041)) I ATTEND S ATTEND=$P($G(^VA(200,ATTEND,0)),U)
"RTN","C9CMODND",384,0)
 ....N ABBREV
"RTN","C9CMODND",385,0)
 ....S ABBREV=""
"RTN","C9CMODND",386,0)
 ....I $G(RPOINT)>0 D
"RTN","C9CMODND",387,0)
 .....S ABBREV=$P($G(^C9C(300892,RPOINT,0)),"^",3)
"RTN","C9CMODND",388,0)
 .....N OPOS
"RTN","C9CMODND",389,0)
 .....I $G(OFFSET)'=0 D
"RTN","C9CMODND",390,0)
 ......I $F(ABBREV,"X DAYS")>1 D
"RTN","C9CMODND",391,0)
 .......S OPOS=$F(ABBREV,"X DAYS")
"RTN","C9CMODND",392,0)
 .......I OPOS>7 D
"RTN","C9CMODND",393,0)
 ........S ABBREV=$E(ABBREV,1,(OPOS-7))_OFFSET_$E(ABBREV,(OPOS-5),50)
"RTN","C9CMODND",394,0)
 ......I $F(ABBREV,"X HOURS")>1 D
"RTN","C9CMODND",395,0)
 .......S OPOS=$F(ABBREV,"X HOURS")
"RTN","C9CMODND",396,0)
 .......I OPOS>8 D
"RTN","C9CMODND",397,0)
 ........S ABBREV=$E(ABBREV,1,(OPOS-8))_OFFSET_$E(ABBREV,(OPOS-6),50)
"RTN","C9CMODND",398,0)
 ....S C9CI=C9CI+1
"RTN","C9CMODND",399,0)
 ....S C9CRET(C9CI)=PAT_"^"_PATNAME_"^"_MRN_"^"_OUTADMIT_"^"_ATTEND_"^"_TITLIEN_"^"_TITLNAME_"^"_NOTEDATE_"^"_WARD_"^"_NOTEIEN_"^"_DUEDATE_"^"_ROWCOLOR_"^"_ABBREV_"^"_RPOINT
"RTN","C9CMODND",400,0)
 Q
"RTN","C9CMODND",401,0)
 ;ACRWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ARRACR,NONOTE,INVDATE,BASEDATE)
"RTN","C9CMODND",402,0)
ACRWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ARRACR,NONOTE,INVDATE,BASEDATE,TITLIEN,REIEN,OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override logic
"RTN","C9CMODND",403,0)
 ;SEPAR - 1 for ward, 2 for unit, 3 for hospital
"RTN","C9CMODND",404,0)
 ;LEVPTR - ward ien, bedsection, or DUZ(2)
"RTN","C9CMODND",405,0)
 Q:SEPAR'>0
"RTN","C9CMODND",406,0)
 N LEVEL
"RTN","C9CMODND",407,0)
 S LEVEL=""
"RTN","C9CMODND",408,0)
 I SEPAR=1 S LEVEL="WARD"
"RTN","C9CMODND",409,0)
 I SEPAR=2 S LEVEL="UNIT"
"RTN","C9CMODND",410,0)
 I SEPAR=3 S LEVEL="HOSPITAL"
"RTN","C9CMODND",411,0)
 N WL
"RTN","C9CMODND",412,0)
 S WL=0 F  S WL=$O(ARRACR(LEVEL,WL)) Q:WL'>0  D ;check ward rules first
"RTN","C9CMODND",413,0)
 .S BASEDATE=+$P(ARRACR(LEVEL,WL),"^",6)
"RTN","C9CMODND",414,0)
 .N EDATE ;event date
"RTN","C9CMODND",415,0)
 .S EDATE=BASEDATE
"RTN","C9CMODND",416,0)
 .I BASEDATE>0 D
"RTN","C9CMODND",417,0)
 ..N RULETEXT
"RTN","C9CMODND",418,0)
 ..S RULETEXT=""
"RTN","C9CMODND",419,0)
 ..N RPOINT ;changed RPTR to RPOINT this subroutine for override coding
"RTN","C9CMODND",420,0)
 ..S RPOINT=$P(ARRACR(LEVEL,WL),"^",4)
"RTN","C9CMODND",421,0)
 ..I RPOINT>0 D
"RTN","C9CMODND",422,0)
 ...N RUACT ;rule active?
"RTN","C9CMODND",423,0)
 ...S RUACT=$P($G(^C9C(300892,RPOINT,0)),"^",2)
"RTN","C9CMODND",424,0)
 ...I RUACT>0 D
"RTN","C9CMODND",425,0)
 ....S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CMODND",426,0)
 ....;begin CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CMODND",427,0)
 ....;N OFFSET ;offset in days or hours - do not new this here as it is passed in by reference
"RTN","C9CMODND",428,0)
 ....S OFFSET=0
"RTN","C9CMODND",429,0)
 ....N FIEN
"RTN","C9CMODND",430,0)
 ....S FIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CMODND",431,0)
 ....I FIEN>0 D
"RTN","C9CMODND",432,0)
 .....N RFIEN
"RTN","C9CMODND",433,0)
 .....S RFIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CMODND",434,0)
 .....I RFIEN>0 D
"RTN","C9CMODND",435,0)
 ......I $F(RULETEXT,"X DAYS")>0 D
"RTN","C9CMODND",436,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FIEN,1,RFIEN,8)),"^",1)
"RTN","C9CMODND",437,0)
 ......I $F(RULETEXT,"X HOURS")>0 D
"RTN","C9CMODND",438,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FIEN,1,RFIEN,9)),"^",1)
"RTN","C9CMODND",439,0)
 ....N ABD ;ACCEPTABLE BASEDATE DELTA formatted as DAYS.HOURS
"RTN","C9CMODND",440,0)
 ....N MABD ;mumps code
"RTN","C9CMODND",441,0)
 ....S MABD=$G(^C9C(300892,RPOINT,7))
"RTN","C9CMODND",442,0)
 ....;was S ABD=$P($G(^C9C(300892,RPOINT,7)),"^",1)
"RTN","C9CMODND",443,0)
 ....I MABD'="" X MABD
"RTN","C9CMODND",444,0)
 ....I ABD'>0 S ABD="2.2" ;default if code does not return proper value
"RTN","C9CMODND",445,0)
 ....;end CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CMODND",446,0)
 ....N ABDAYS S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",447,0)
 ....N ABHOURS S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",448,0)
 ....;start X DAYS
"RTN","C9CMODND",449,0)
 ....I $F(RULETEXT,"EVERY X DAYS FROM EVENT DATE")>0 D
"RTN","C9CMODND",450,0)
 .....N FORMIEN
"RTN","C9CMODND",451,0)
 .....S FORMIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CMODND",452,0)
 .....I FORMIEN>0 D
"RTN","C9CMODND",453,0)
 ......N RUIEN
"RTN","C9CMODND",454,0)
 ......S RUIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CMODND",455,0)
 ......I RUIEN>0 D
"RTN","C9CMODND",456,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FORMIEN,1,RUIEN,8)),"^",1)
"RTN","C9CMODND",457,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODND",458,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODND",459,0)
 ........I BASEDATE>0 D
"RTN","C9CMODND",460,0)
 .........I OFFSET>0 D
"RTN","C9CMODND",461,0)
 ..........N NUMDAYS
"RTN","C9CMODND",462,0)
 ..........S NUMDAYS=OFFSET
"RTN","C9CMODND",463,0)
 ..........N DSAD ;days since event date
"RTN","C9CMODND",464,0)
 ..........S DSAD=$$FMDIFF^XLFDT(RNOW,BASEDATE,1) ;difference in days
"RTN","C9CMODND",465,0)
 ..........N MDSAD
"RTN","C9CMODND",466,0)
 ..........S MDSAD=DSAD#NUMDAYS
"RTN","C9CMODND",467,0)
 ..........S BASEDATE=$$FMADD^XLFDT(RNOW\1,MDSAD)_.2359
"RTN","C9CMODND",468,0)
 ..........I BASEDATE'=0 D
"RTN","C9CMODND",469,0)
 ...........S RULELEVELFOUND=LEVEL
"RTN","C9CMODND",470,0)
 ...........N C9CCHECK
"RTN","C9CMODND",471,0)
 ...........S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODND",472,0)
 ...........I C9CCHECK>0 D
"RTN","C9CMODND",473,0)
 ............;check to see if there is a completed note in this range or after
"RTN","C9CMODND",474,0)
 ............I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CMODND",475,0)
 .............I DUEDATE<BASEDATE D
"RTN","C9CMODND",476,0)
 ..............S DUEDATE=BASEDATE
"RTN","C9CMODND",477,0)
 ..............S APRULE=RUIEN ;applicable rule
"RTN","C9CMODND",478,0)
 ............I NONOTE=0 D
"RTN","C9CMODND",479,0)
 .............;check to see if there is a completed note of this title within or after this time period
"RTN","C9CMODND",480,0)
 .............;first check within the time period
"RTN","C9CMODND",481,0)
 .............N LASTDATE
"RTN","C9CMODND",482,0)
 .............S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CMODND",483,0)
 .............I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CMODND",484,0)
 ..............I DUEDATE<BASEDATE D
"RTN","C9CMODND",485,0)
 ...............S APRULE=RUIEN
"RTN","C9CMODND",486,0)
 ...............S DUEDATE=BASEDATE
"RTN","C9CMODND",487,0)
 ....;end X DAYS
"RTN","C9CMODND",488,0)
 ....;start X HOURS
"RTN","C9CMODND",489,0)
 ....I $F(RULETEXT,"EVERY X HOURS FROM EVENT DATE")>0 D
"RTN","C9CMODND",490,0)
 .....N FORMIEN
"RTN","C9CMODND",491,0)
 .....S FORMIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CMODND",492,0)
 .....I FORMIEN>0 D
"RTN","C9CMODND",493,0)
 ......N RUIEN
"RTN","C9CMODND",494,0)
 ......S RUIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CMODND",495,0)
 ......I RUIEN>0 D
"RTN","C9CMODND",496,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FORMIEN,1,RUIEN,9)),"^",1)
"RTN","C9CMODND",497,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODND",498,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,,OFFSET)
"RTN","C9CMODND",499,0)
 ........I BASEDATE>0 D
"RTN","C9CMODND",500,0)
 .........I OFFSET>0 D
"RTN","C9CMODND",501,0)
 ..........N NUMHOURS
"RTN","C9CMODND",502,0)
 ..........S NUMHOURS=OFFSET
"RTN","C9CMODND",503,0)
 ..........N SSAD ;seconds since event date
"RTN","C9CMODND",504,0)
 ..........S SSAD=$$FMDIFF^XLFDT(RNOW,EDATE,2) ;difference in seconds
"RTN","C9CMODND",505,0)
 ..........I SSAD>0 D
"RTN","C9CMODND",506,0)
 ...........N HSAD ;hours since event date
"RTN","C9CMODND",507,0)
 ...........S HSAD=SSAD\3600
"RTN","C9CMODND",508,0)
 ...........N MHSAD
"RTN","C9CMODND",509,0)
 ...........S MHSAD=HSAD#NUMHOURS ;how many whole hours till next due time
"RTN","C9CMODND",510,0)
 ...........S BASEDATE=$$FMADD^XLFDT(EDATE,,HSAD+MHSAD) ;next due time
"RTN","C9CMODND",511,0)
 ...........I BASEDATE'=0 D
"RTN","C9CMODND",512,0)
 ............S RULELEVELFOUND=LEVEL
"RTN","C9CMODND",513,0)
 ............N C9CCHECK
"RTN","C9CMODND",514,0)
 ............S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODND",515,0)
 ............I C9CCHECK>0 D
"RTN","C9CMODND",516,0)
 .............;check to see if there is a completed note in this range or after
"RTN","C9CMODND",517,0)
 .............I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CMODND",518,0)
 ..............I DUEDATE<BASEDATE D
"RTN","C9CMODND",519,0)
 ...............S DUEDATE=BASEDATE
"RTN","C9CMODND",520,0)
 ...............S APRULE=RUIEN ;applicable rule
"RTN","C9CMODND",521,0)
 .............I NONOTE=0 D
"RTN","C9CMODND",522,0)
 ..............;check to see if there is a completed note of this title within or after this time period
"RTN","C9CMODND",523,0)
 ..............;first check within the time period
"RTN","C9CMODND",524,0)
 ..............N LASTDATE
"RTN","C9CMODND",525,0)
 ..............S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CMODND",526,0)
 ..............I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CMODND",527,0)
 ...............I DUEDATE<BASEDATE D
"RTN","C9CMODND",528,0)
 ................S APRULE=RUIEN
"RTN","C9CMODND",529,0)
 ................S DUEDATE=BASEDATE
"RTN","C9CMODND",530,0)
 ....;end X HOURS 
"RTN","C9CMODND",531,0)
 Q
"RTN","C9CMODND",532,0)
NAFWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ADATE,NONOTE,TITLIEN,REIEN,OFST,PTONLY,CLEVEL) ;CRH JHT 2019 - added TITLIEN and REIEN and OFST for override logic ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 -added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODND",533,0)
 ;SEPAR - 1 for ward, 2 for unit, 3 for hospital
"RTN","C9CMODND",534,0)
 ;LEVPTR - ward ien, bedsection, or DUZ(2)
"RTN","C9CMODND",535,0)
 Q:SEPAR'>0
"RTN","C9CMODND",536,0)
 N LEVEL
"RTN","C9CMODND",537,0)
 S LEVEL=""
"RTN","C9CMODND",538,0)
 I SEPAR=1 S LEVEL="WARD"
"RTN","C9CMODND",539,0)
 I SEPAR=2 S LEVEL="UNIT"
"RTN","C9CMODND",540,0)
 I SEPAR=3 S LEVEL="HOSPITAL"
"RTN","C9CMODND",541,0)
 ;----------------------
"RTN","C9CMODND",542,0)
 N WF 
"RTN","C9CMODND",543,0)
 S WF=0 F  S WF=$O(^C9C(300890,REIEN,SEPAR,WF)) Q:WF'>0  D
"RTN","C9CMODND",544,0)
 .;check each formula included to see if LEVPTR included
"RTN","C9CMODND",545,0)
 .I $O(^C9C(300890,REIEN,SEPAR,WF,2,"B",LEVPTR,0))>0 D ;LEVPTR included in this formula
"RTN","C9CMODND",546,0)
 ..N C9CCHECK ;this will be set as 0 or 1 from the mumps code fields in C9C RULES file
"RTN","C9CMODND",547,0)
 ..S C9CCHECK=0
"RTN","C9CMODND",548,0)
 ..N BASEDATE
"RTN","C9CMODND",549,0)
 ..S BASEDATE=0
"RTN","C9CMODND",550,0)
 ..N PREVADAYS ;to track multiple ADMIT DATE + X DAYS rules
"RTN","C9CMODND",551,0)
 ..S PREVADAYS=0
"RTN","C9CMODND",552,0)
 ..N PREVAHOURS ;to track multiple ADMIT DATE + X HOURS rules
"RTN","C9CMODND",553,0)
 ..S PREVAHOURS=0
"RTN","C9CMODND",554,0)
 ..N RTRACK ;track whether to keep processing rules in this formula ;mar 3,2020
"RTN","C9CMODND",555,0)
 ..S RTRACK=0 ;mar 3,2020
"RTN","C9CMODND",556,0)
 ..I CLEVEL=0 S RTRACK=1 ;there is no cohort defined, process all ;mar 3,2020
"RTN","C9CMODND",557,0)
 ..I CLEVEL=1 S RTRACK=2 ;in cohort, process up to, but not including first pass-through ;mar 3,2020
"RTN","C9CMODND",558,0)
 ..I CLEVEL=2 I PTONLY=1 S RTRACK=3 ;not in cohort, PTONLY checked, start processing pass-throughs ;mar 3,2020 
"RTN","C9CMODND",559,0)
 ..I CLEVEL=2 I PTONLY=0 S RTRACK=0 ;not in cohort, PTONLY not checked, process nothing ;mar 3,2020
"RTN","C9CMODND",560,0)
 ..;RTRACK: 0=stop no matter what, 1=process no matter what, 2=process up to but not including first pass-through, 3=stop until next pass-through, 4=process all rules until next pass-through ;mar 3,2020
"RTN","C9CMODND",561,0)
 ..N FR ;formula rule
"RTN","C9CMODND",562,0)
 ..S FR=0 F  S FR=$O(^C9C(300890,REIEN,SEPAR,WF,1,FR)) Q:((FR'>0)!(C9CCHECK>0)!(RTRACK=0))  D ;for each rule in the formula ;added RTRACK mar 3,2020
"RTN","C9CMODND",563,0)
 ...N RPOINT ;rule pointer
"RTN","C9CMODND",564,0)
 ...S RPOINT=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,0)),"^",1)
"RTN","C9CMODND",565,0)
 ...I RPOINT>0 D
"RTN","C9CMODND",566,0)
 ....N RTEXT
"RTN","C9CMODND",567,0)
 ....S RTEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CMODND",568,0)
 ....I RTEXT'="" I $F(RTEXT,"PASS-THROUGH REMINDER")>0 I RTRACK=2 S RTRACK=0 ;found the first pass-through, so stop processing all rules ;mar 3,2020
"RTN","C9CMODND",569,0)
 ....I RTEXT'="" I $F(RTEXT,"PASS-THROUGH REMINDER")>0 I RTRACK=4 S RTRACK=0 ;finished processing rules after resolved pass-through ;mar 3,2020
"RTN","C9CMODND",570,0)
 ....I RTEXT'="" I (RTRACK=1)!(RTRACK=2)!(RTRACK=4)!((RTRACK=3)&($F(RTEXT,"PASS-THROUGH REMINDER")>0)) D ;mar 5,2020 more complex reminder processing
"RTN","C9CMODND",571,0)
 .....;begin CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CMODND",572,0)
 .....N OFFSET ;offset in days or hours
"RTN","C9CMODND",573,0)
 .....S OFFSET=0
"RTN","C9CMODND",574,0)
 .....I $F(RTEXT,"X DAYS")>0 D
"RTN","C9CMODND",575,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODND",576,0)
 .....I $F(RTEXT,"X HOURS")>0 D
"RTN","C9CMODND",577,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODND",578,0)
 .....N ABD ;ACCEPTABLE BASEDATE DELTA formatted as DAYS.HOURS
"RTN","C9CMODND",579,0)
 .....N MABD ;mumps code
"RTN","C9CMODND",580,0)
 .....S MABD=$G(^C9C(300892,RPOINT,7))
"RTN","C9CMODND",581,0)
 .....;was S ABD=$P($G(^C9C(300892,RPOINT,7)),"^",1)
"RTN","C9CMODND",582,0)
 .....I MABD'="" X MABD
"RTN","C9CMODND",583,0)
 .....I ABD'>0 S ABD="2.2" ;default if code does not return proper value
"RTN","C9CMODND",584,0)
 .....;end CRH JHT 2019 - change delta to mumps code
"RTN","C9CMODND",585,0)
 .....N ABDAYS S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",586,0)
 .....N ABHOURS S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",587,0)
 .....N ABMINS ;august 1
"RTN","C9CMODND",588,0)
 .....S ABMINS=0 ;august 1
"RTN","C9CMODND",589,0)
 .....S BASEDATE=0
"RTN","C9CMODND",590,0)
 .....;begin reminder pass-through logic
"RTN","C9CMODND",591,0)
 .....N REMIEN ;expose this for show/color checking
"RTN","C9CMODND",592,0)
 .....I $F(RTEXT,"PASS-THROUGH REMINDER")>0 D
"RTN","C9CMODND",593,0)
 ......S BASEDATE=0
"RTN","C9CMODND",594,0)
 ......I $G(TITLIEN)>0 D
"RTN","C9CMODND",595,0)
 .......S REMIEN=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,10)),"^",1)
"RTN","C9CMODND",596,0)
 .......N DEFARR
"RTN","C9CMODND",597,0)
 .......I REMIEN'>0 I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CMODND",598,0)
 .......I REMIEN>0 D
"RTN","C9CMODND",599,0)
 ........N DEFNAME
"RTN","C9CMODND",600,0)
 ........S DEFNAME=$P($G(^PXD(811.9,REMIEN,0)),"^",3) ;has to be print name, not name
"RTN","C9CMODND",601,0)
 ........I DEFNAME="" I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CMODND",602,0)
 ........I DEFNAME'="" D
"RTN","C9CMODND",603,0)
 .........N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CMODND",604,0)
 .........S PXRMDEBG=1
"RTN","C9CMODND",605,0)
 .........N DATE ;must be newed but not populated to return current value
"RTN","C9CMODND",606,0)
 .........D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CMODND",607,0)
 .........N FIEVAL
"RTN","C9CMODND",608,0)
 .........D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CMODND",609,0)
 .........I $G(PXRMID)="" I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CMODND",610,0)
 .........I $G(PXRMID)'="" D
"RTN","C9CMODND",611,0)
 ..........N RESOLU,COHORT
"RTN","C9CMODND",612,0)
 ..........S RESOLU=+$P($G(^TMP(PXRMID,$J,REMIEN,"RESOLUTION LOGIC")),"^",1)
"RTN","C9CMODND",613,0)
 ..........S COHORT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CMODND",614,0)
 ..........K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CMODND",615,0)
 ..........I (COHORT=0) I (RTRACK=4) S RTRACK=3 ;skip to next pass-through ;mar 3,2020
"RTN","C9CMODND",616,0)
 ..........I (COHORT=1) D 
"RTN","C9CMODND",617,0)
 ...........I RESOLU=1 I ((RTRACK=3)!(RTRACK=4)) S RTRACK=0 ;process no more rules ;mar 3,2020
"RTN","C9CMODND",618,0)
 ...........I RESOLU=0 I ((RTRACK=3)!(RTRACK=4)) S RTRACK=2 ;process until next pass-through ;mar 3,2020
"RTN","C9CMODND",619,0)
 ...........I CLEVEL=0 D ;only allow this to set a date if no reminder cohort is set ;mar 9,2020
"RTN","C9CMODND",620,0)
 ............N RSTATUS
"RTN","C9CMODND",621,0)
 ............S RSTATUS=$P($G(^TMP("PXRHM",$J,REMIEN,DEFNAME)),"^",1)
"RTN","C9CMODND",622,0)
 ............N RDATEDUE
"RTN","C9CMODND",623,0)
 ............S RDATEDUE=$P($G(^TMP("PXRHM",$J,REMIEN,DEFNAME)),"^",2)
"RTN","C9CMODND",624,0)
 ............I RSTATUS="N/A" S BASEDATE=0
"RTN","C9CMODND",625,0)
 ............E  I (((RSTATUS="DUE SOON")!(RESOLU=0))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODND",626,0)
 ............E  I (((RSTATUS="DUE SOON")!(RESOLU=0))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CMODND",627,0)
 ............E  I (((RSTATUS="DUE SOON")&(RESOLU=1))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODND",628,0)
 ............E  I (((RSTATUS="DUE SOON")&(RESOLU=1))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CMODND",629,0)
 ............E  I (((RSTATUS="DUE NOW")&(RESOLU=1))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODND",630,0)
 ............E  I (((RSTATUS="DUE NOW")&(RESOLU=1))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CMODND",631,0)
 ...........K ^TMP("PXRHM",$J,REMIEN) 
"RTN","C9CMODND",632,0)
 ...........K FIEVAL ;needs to be new each time
"RTN","C9CMODND",633,0)
 .....;end reminder pass-through logic
"RTN","C9CMODND",634,0)
 .....;start due now logic
"RTN","C9CMODND",635,0)
 .....I RTEXT="DUE NOW" D
"RTN","C9CMODND",636,0)
 ......S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODND",637,0)
 .....;end due now logic
"RTN","C9CMODND",638,0)
 .....;start annually based on admission day
"RTN","C9CMODND",639,0)
 .....I $F(RTEXT,"ANNUALLY BASED ON ADMISSION DAY")>0 D
"RTN","C9CMODND",640,0)
 ......S BASEDATE=ADATE
"RTN","C9CMODND",641,0)
 ......I ($F(RTEXT,"X DAYS")>0) D
"RTN","C9CMODND",642,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODND",643,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODND",644,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODND",645,0)
 ........I OFFSET>(ABDAYS+2) D
"RTN","C9CMODND",646,0)
 .........I PREVADAYS=0 D ;if this is the first X DAYS rule for this title/patient
"RTN","C9CMODND",647,0)
 ..........S PREVADAYS=OFFSET
"RTN","C9CMODND",648,0)
 ..........S ABDAYS=OFFSET+2 ;we need to cover two days prior to admission as well 
"RTN","C9CMODND",649,0)
 ......I ABD="" S ABD="14.0"
"RTN","C9CMODND",650,0)
 ......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",651,0)
 ......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",652,0)
 ......N YY S YY=YEAR ;$E(BASEDATE,2,3)
"RTN","C9CMODND",653,0)
 ......N CC S CC=CENTURY ;$E(BASEDATE,1,1)
"RTN","C9CMODND",654,0)
 ......N MONT S MONT=$E(BASEDATE,4,5)
"RTN","C9CMODND",655,0)
 ......N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CMODND",656,0)
 ......N THEREST S THEREST=".1200" ;noon for this rule
"RTN","C9CMODND",657,0)
 ......I ((($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))>(CENTURY_YEAR_DHMS))&(($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))<(CENTURY_YEAR_DHMS))) D ;are we currently in this years cycle ;mar 11,2020
"RTN","C9CMODND",658,0)
 .......S BASEDATE=CENTURY_YEAR_THEREST ;mar 11,2020
"RTN","C9CMODND",659,0)
 ......I (($$FMADD^XLFDT(CENTURY_YEAR_MONT_DD_THEREST,ABDAYS,ABHOURS))<(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we past this year's cycle? 
"RTN","C9CMODND",660,0)
 .......S BASEDATE=CENTURY_YEAR_MONT_DD_THEREST ;try this year
"RTN","C9CMODND",661,0)
 .......S YY=YY+1 ;removed a dot mar 6,2020
"RTN","C9CMODND",662,0)
 .......I YY=100 S YY="00" S CC=CC+1 ;removed a dot mar 6,2020
"RTN","C9CMODND",663,0)
 .......I (($$FMADD^XLFDT(CC_YY_MONT_DD_THEREST,-ABDAYS,-ABHOURS)))<RNOW D ;are we in next years cycle yet ;JHT 7/1/2019 ;removed a dot mar 6,2020
"RTN","C9CMODND",664,0)
 ........S BASEDATE=CC_YY_MONT_DD_THEREST ;set to next years cycle ;removed a dot mar 6,2020
"RTN","C9CMODND",665,0)
 ......I (($$FMADD^XLFDT(CENTURY_YEAR_MONT_DD_THEREST,-ABDAYS,-ABHOURS))>(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we not yet in this year's cycle? ;mar 6,2020
"RTN","C9CMODND",666,0)
 .......;if not, try last year ;mar 6,2020
"RTN","C9CMODND",667,0)
 .......S YY=YY-1 ;mar 6,2020
"RTN","C9CMODND",668,0)
 .......I YY=-1 S YY=99 S CC=CC-1 ;mar 6,2020
"RTN","C9CMODND",669,0)
 .......S BASEDATE=CC_YY_MONT_DD_THEREST ;set to last year's cycle ;mar 6,2020
"RTN","C9CMODND",670,0)
 ......I (BASEDATE\1)'>(ADATE\1) S BASEDATE=0 ;not due same day as admission in this case
"RTN","C9CMODND",671,0)
 .....;end annually based on admission day
"RTN","C9CMODND",672,0)
 .....I $F(RTEXT,"ADMIT DATE")>0 D
"RTN","C9CMODND",673,0)
 ......S BASEDATE=ADATE
"RTN","C9CMODND",674,0)
 ......I (($F(RTEXT,"X DAYS")>0)&($F(RTEXT,"EVERY")'>0)) D
"RTN","C9CMODND",675,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODND",676,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODND",677,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODND",678,0)
 ........I OFFSET>(ABDAYS+2) D
"RTN","C9CMODND",679,0)
 .........I PREVADAYS=0 D ;if this is the first X DAYS rule for this title/patient ;july 12, 2019
"RTN","C9CMODND",680,0)
 ..........S PREVADAYS=OFFSET ;july 12, 2019
"RTN","C9CMODND",681,0)
 ..........S ABDAYS=OFFSET+2 ;we need to cover two days prior to admission as well ;july 12, 2019
"RTN","C9CMODND",682,0)
 ......;start annually
"RTN","C9CMODND",683,0)
 ......I $F(RTEXT,"ANNUALLY")>0 D
"RTN","C9CMODND",684,0)
 .......I ABD="" S ABD="14.0"
"RTN","C9CMODND",685,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",686,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",687,0)
 .......N YY S YY=YEAR ;$E(BASEDATE,2,3) ;JHT 7/1/2019
"RTN","C9CMODND",688,0)
 .......N CC S CC=CENTURY ;$E(BASEDATE,1,1) ;JHT 7/1/2019
"RTN","C9CMODND",689,0)
 .......N THEREST S THEREST=$E(BASEDATE,4,99)
"RTN","C9CMODND",690,0)
 .......I ((($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))>(CENTURY_YEAR_DHMS))&(($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))<(CENTURY_YEAR_DHMS))) D ;are we currently in this years cycle ;mar 11,2020
"RTN","C9CMODND",691,0)
 ........S BASEDATE=CENTURY_YEAR_THEREST ;mar 11,2020
"RTN","C9CMODND",692,0)
 .......I (($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))<(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we past this year's cycle? ;added mar 6,2020
"RTN","C9CMODND",693,0)
 ........S BASEDATE=CENTURY_YEAR_THEREST ;try this year
"RTN","C9CMODND",694,0)
 ........S YY=YY+1 ;deleted a dot mar 6,2020
"RTN","C9CMODND",695,0)
 ........I YY=100 S YY="00" S CC=CC+1 ;deleted a dot mar 6,2020
"RTN","C9CMODND",696,0)
 ........I (($$FMADD^XLFDT(CC_YY_THEREST,-ABDAYS,-ABHOURS)))<RNOW D ;are we in next years cycle yet ;JHT 7/1/2019 ;deleted a dot mar 6,2020
"RTN","C9CMODND",697,0)
 .........S BASEDATE=CC_YY_THEREST ;set to next years cycle ;deleted a dot mar 6,2020
"RTN","C9CMODND",698,0)
 .......I (($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))>(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we in this year's cycle? ;mar 6,2020
"RTN","C9CMODND",699,0)
 ........;if not, try last year ;mar 6,2020
"RTN","C9CMODND",700,0)
 ........S YY=YY-1 ;mar 6,2020
"RTN","C9CMODND",701,0)
 ........I YY=-1 S YY=99 S CC=CC-1 ;mar 6,2020
"RTN","C9CMODND",702,0)
 ........S BASEDATE=CC_YY_THEREST ;set to last year's cycle ;mar 6,2020
"RTN","C9CMODND",703,0)
 .......I BASEDATE'>ADATE S BASEDATE=0 ;not due same day as admission or before in this case
"RTN","C9CMODND",704,0)
 ......;end annually
"RTN","C9CMODND",705,0)
 ......;start each month based on admit date starting month 3 skip each month 12
"RTN","C9CMODND",706,0)
 ......I $F(RTEXT,"EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12") D
"RTN","C9CMODND",707,0)
 .......I $$FMADD^XLFDT(ADATE,82)<RNOW D ;start on the third month but leave some room prior to due
"RTN","C9CMODND",708,0)
 ........I ABD="" S ABD="2.0"
"RTN","C9CMODND",709,0)
 ........S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",710,0)
 ........S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",711,0)
 ........N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CMODND",712,0)
 ........N HMS S HMS=$P(RNOW,".",2)
"RTN","C9CMODND",713,0)
 ........N THEREST S THEREST=$P(BASEDATE,".",2)
"RTN","C9CMODND",714,0)
 ........S THEREST="1200" ;changed during override coding - noon for this rule
"RTN","C9CMODND",715,0)
 ........N MONT S MONT=$E(RNOW,4,5)
"RTN","C9CMODND",716,0)
 ........N MOA ;month of admission
"RTN","C9CMODND",717,0)
 ........S MOA=$E(ADATE,4,5)
"RTN","C9CMODND",718,0)
 ........;start by checking the current month
"RTN","C9CMODND",719,0)
 ........N YEA S YEA=YEAR
"RTN","C9CMODND",720,0)
 ........N CEN S CEN=CENTURY
"RTN","C9CMODND",721,0)
 ........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODND",722,0)
 ........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",723,0)
 ........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",724,0)
 ........;begin CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODND",725,0)
 ........I ((MONT=MOA)!($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODND",726,0)
 .........I ((MONT=MOA)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODND",727,0)
 ..........;try next month first
"RTN","C9CMODND",728,0)
 ..........S MONT=MONT+1
"RTN","C9CMODND",729,0)
 ..........I MONT=13 S MONT=1 S YEA=YEA+1 I YEA=100 S YEA=0 S CEN=CEN+1
"RTN","C9CMODND",730,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODND",731,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODND",732,0)
 ..........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",733,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",734,0)
 .........I ($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW) D
"RTN","C9CMODND",735,0)
 ..........;not in this or next month's cycle yet, so try last month
"RTN","C9CMODND",736,0)
 ..........S MONT=MONT-1
"RTN","C9CMODND",737,0)
 ..........I MONT=0 D
"RTN","C9CMODND",738,0)
 ...........S MONT=12
"RTN","C9CMODND",739,0)
 ...........S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODND",740,0)
 ............S YEA=99 S CEN=CEN-1
"RTN","C9CMODND",741,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODND",742,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODND",743,0)
 ..........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODND",744,0)
 ..........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",745,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",746,0)
 ..........I (MONT=MOA) D
"RTN","C9CMODND",747,0)
 ...........;go to the previous month
"RTN","C9CMODND",748,0)
 ...........S MONT=MONT-1
"RTN","C9CMODND",749,0)
 ...........I MONT=0 D
"RTN","C9CMODND",750,0)
 ............S MONT=12
"RTN","C9CMODND",751,0)
 ............S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODND",752,0)
 .............S YEA=99 S CEN=CEN-1
"RTN","C9CMODND",753,0)
 ...........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODND",754,0)
 ...........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODND",755,0)
 ...........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODND",756,0)
 ...........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",757,0)
 ...........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",758,0)
 .........;end CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODND",759,0)
 ......;end each month based on admit date starting month 3 skip each month 12
"RTN","C9CMODND",760,0)
 ......;start monthly
"RTN","C9CMODND",761,0)
 ......I $F(RTEXT,"MONTHLY")>0 D
"RTN","C9CMODND",762,0)
 .......I ABD="" S ABD="2.0"
"RTN","C9CMODND",763,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",764,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",765,0)
 .......N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CMODND",766,0)
 .......N HMS S HMS=$P(RNOW,".",2)
"RTN","C9CMODND",767,0)
 .......N THEREST S THEREST=$P(BASEDATE,".",2)
"RTN","C9CMODND",768,0)
 .......N MONT S MONT=$E(RNOW,4,5)
"RTN","C9CMODND",769,0)
 .......N MOA ;month of admission
"RTN","C9CMODND",770,0)
 .......S MOA=$E(ADATE,4,5)
"RTN","C9CMODND",771,0)
 .......;start by checking the current month
"RTN","C9CMODND",772,0)
 .......N YEA S YEA=YEAR
"RTN","C9CMODND",773,0)
 .......N CEN S CEN=CENTURY
"RTN","C9CMODND",774,0)
 .......; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODND",775,0)
 .......I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",776,0)
 .......S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",777,0)
 .......;begin CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODND",778,0)
 .......I ((($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA))!($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODND",779,0)
 ........I ((($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA))!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODND",780,0)
 .........;try next month first
"RTN","C9CMODND",781,0)
 .........S MONT=MONT+1
"RTN","C9CMODND",782,0)
 .........I MONT=13 S MONT=1 S YEA=YEA+1 I YEA=100 S YEA=0 S CEN=CEN+1
"RTN","C9CMODND",783,0)
 .........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODND",784,0)
 .........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODND",785,0)
 .........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",786,0)
 .........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",787,0)
 .........I ($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW) D
"RTN","C9CMODND",788,0)
 ..........;not in this or next month's cycle yet, so try last month
"RTN","C9CMODND",789,0)
 ..........S MONT=MONT-1
"RTN","C9CMODND",790,0)
 ..........I MONT=0 D
"RTN","C9CMODND",791,0)
 ...........S MONT=12
"RTN","C9CMODND",792,0)
 ...........S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODND",793,0)
 ............S YEA=99 S CEN=CEN-1
"RTN","C9CMODND",794,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODND",795,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODND",796,0)
 ..........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODND",797,0)
 ..........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",798,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",799,0)
 ..........I (($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA)) D
"RTN","C9CMODND",800,0)
 ...........;go to the previous month
"RTN","C9CMODND",801,0)
 ...........S MONT=MONT-1
"RTN","C9CMODND",802,0)
 ...........I MONT=0 D
"RTN","C9CMODND",803,0)
 ............S MONT=12
"RTN","C9CMODND",804,0)
 ............S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODND",805,0)
 .............S YEA=99 S CEN=CEN-1
"RTN","C9CMODND",806,0)
 ...........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODND",807,0)
 ...........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODND",808,0)
 ...........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODND",809,0)
 ...........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODND",810,0)
 ...........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODND",811,0)
 ...........;end CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODND",812,0)
 ......;end monthly
"RTN","C9CMODND",813,0)
 ......;start weekly
"RTN","C9CMODND",814,0)
 ......I $F(RTEXT,"WEEKLY")>0 D
"RTN","C9CMODND",815,0)
 .......I ABD="" S ABD="2.0"
"RTN","C9CMODND",816,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",817,0)
 .......S ABHOURS=23 ;in this case we allow the full two days before ;august 1
"RTN","C9CMODND",818,0)
 .......S ABMINS=59 ;august 1
"RTN","C9CMODND",819,0)
 .......I BASEDATE>0 D
"RTN","C9CMODND",820,0)
 ........N NUMDAYS
"RTN","C9CMODND",821,0)
 ........S NUMDAYS=7
"RTN","C9CMODND",822,0)
 ........N DSAD
"RTN","C9CMODND",823,0)
 ........S DSAD=$$FMDIFF^XLFDT(RNOW,BASEDATE,1) ;difference in days
"RTN","C9CMODND",824,0)
 ........I DSAD>0 D
"RTN","C9CMODND",825,0)
 .........N MDSAD
"RTN","C9CMODND",826,0)
 .........S MDSAD=DSAD#NUMDAYS
"RTN","C9CMODND",827,0)
 .........S BASEDATE=$$FMADD^XLFDT(RNOW\1,7-MDSAD)_.2359
"RTN","C9CMODND",828,0)
 .........I ((DSAD>7)&((MDSAD=0)!(MDSAD>ABD))) D ;still within last week's cycle
"RTN","C9CMODND",829,0)
 ..........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-7)
"RTN","C9CMODND",830,0)
 .........I $F(RTEXT,"SKIP ADMISSION ANNIVERSAY WEEK")>0 D
"RTN","C9CMODND",831,0)
 ..........N YY S YY=YEAR 
"RTN","C9CMODND",832,0)
 ..........N CC S CC=CENTURY 
"RTN","C9CMODND",833,0)
 ..........N THEREST S THEREST=$E(BASEDATE,4,99)
"RTN","C9CMODND",834,0)
 ..........N ANNDATE
"RTN","C9CMODND",835,0)
 ..........S ANNDATE=CENTURY_YEAR_THEREST ;admission anniversary date
"RTN","C9CMODND",836,0)
 ..........I ((ANNDATE>$$FMADD^XLFDT(BASEDATE,-ABDAYS))&(ANNDATE<$$FMADD^XLFDT(BASEDATE,ABDAYS))) D
"RTN","C9CMODND",837,0)
 ...........;skip this week since it is the anniversary week
"RTN","C9CMODND",838,0)
 ...........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-7) ;go to the previous week if this is anniversary week
"RTN","C9CMODND",839,0)
 ......;end weekly
"RTN","C9CMODND",840,0)
 ......I (RULELEVELFOUND="")&(($F(RTEXT,"X HOURS")>0)&($F(RTEXT,"EVERY")'>0)) D
"RTN","C9CMODND",841,0)
 .......I ABD="" S ABD="0.8"
"RTN","C9CMODND",842,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODND",843,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODND",844,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODND",845,0)
 .......I OFFSET>(ABHOURS+48) D
"RTN","C9CMODND",846,0)
 ........I PREVAHOURS=0 D ;july 12, 2019
"RTN","C9CMODND",847,0)
 .........S PREVAHOURS=OFFSET ;july 12, 2019
"RTN","C9CMODND",848,0)
 .........S ABHOURS=OFFSET+48 ;we need to cover two days prior to admission as well ;july 12, 2019
"RTN","C9CMODND",849,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODND",850,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,,OFFSET)
"RTN","C9CMODND",851,0)
 .....;start CRH JHT 2019 new rules during override logic coding
"RTN","C9CMODND",852,0)
 .....;start ONE TIME - ADMISSION DAY PLUS X DAYS
"RTN","C9CMODND",853,0)
 .....I RTEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CMODND",854,0)
 ......S BASEDATE=ADATE
"RTN","C9CMODND",855,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODND",856,0)
 ......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODND",857,0)
 .......S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODND",858,0)
 .......I BASEDATE>0 S BASEDATE=(BASEDATE\1)_".1200" ;set due time to noon
"RTN","C9CMODND",859,0)
 .......;will have to set overdue logic to offset plus 12 hours to give the whole day
"RTN","C9CMODND",860,0)
 .....;end ONE TIME - ADMISSION DAY PLUS X DAYS 
"RTN","C9CMODND",861,0)
 .....;end CRH JHT 2019 new rules during override logic coding
"RTN","C9CMODND",862,0)
 .....;start every X hours based on admit date
"RTN","C9CMODND",863,0)
 .....I RTEXT="EVERY X HOURS BASED ON ADMIT DATE" D
"RTN","C9CMODND",864,0)
 ......S BASEDATE=$G(ADATE)
"RTN","C9CMODND",865,0)
 ......I BASEDATE>0 D
"RTN","C9CMODND",866,0)
 .......N NUMHOURS
"RTN","C9CMODND",867,0)
 .......S NUMHOURS=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODND",868,0)
 .......I NUMHOURS>0 D
"RTN","C9CMODND",869,0)
 ........N SSAD ;seconds since admit date
"RTN","C9CMODND",870,0)
 ........S SSAD=$$FMDIFF^XLFDT(RNOW,ADATE,2) ;difference in seconds
"RTN","C9CMODND",871,0)
 ........I SSAD>0 D
"RTN","C9CMODND",872,0)
 .........N HSAD ;hours since admit date
"RTN","C9CMODND",873,0)
 .........S HSAD=SSAD\3600
"RTN","C9CMODND",874,0)
 .........N MHSAD
"RTN","C9CMODND",875,0)
 .........S MHSAD=HSAD#NUMHOURS ;how many whole hours till next due time
"RTN","C9CMODND",876,0)
 .........S BASEDATE=$$FMADD^XLFDT(ADATE,,HSAD+MHSAD) ;next due time
"RTN","C9CMODND",877,0)
 .....;end every X hours based on admit date
"RTN","C9CMODND",878,0)
 .....;start every X days based on admit date
"RTN","C9CMODND",879,0)
 .....I RTEXT="EVERY X DAYS BASED ON ADMIT DATE" D
"RTN","C9CMODND",880,0)
 ......S BASEDATE=$G(ADATE)
"RTN","C9CMODND",881,0)
 ......I BASEDATE>0 D
"RTN","C9CMODND",882,0)
 .......N NUMDAYS
"RTN","C9CMODND",883,0)
 .......S NUMDAYS=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODND",884,0)
 .......I NUMDAYS>0 D
"RTN","C9CMODND",885,0)
 ........N DSAD ;days since admit date
"RTN","C9CMODND",886,0)
 ........S DSAD=$$FMDIFF^XLFDT(RNOW,BASEDATE,1) ;difference in days
"RTN","C9CMODND",887,0)
 ........I DSAD>0 D
"RTN","C9CMODND",888,0)
 .........N MDSAD
"RTN","C9CMODND",889,0)
 .........S MDSAD=DSAD#NUMDAYS
"RTN","C9CMODND",890,0)
 .........S BASEDATE=$$FMADD^XLFDT(RNOW\1,MDSAD)_.2359
"RTN","C9CMODND",891,0)
 .........S ABHOURS=23 ;august 1
"RTN","C9CMODND",892,0)
 .........S ABMINS=59 ;august 1
"RTN","C9CMODND",893,0)
 .....;end every X days based on admit date
"RTN","C9CMODND",894,0)
 .....I (RTEXT="DATE OF YEAR") D
"RTN","C9CMODND",895,0)
 ......;use CENTURY and YEAR from above
"RTN","C9CMODND",896,0)
 ......S BASEDATE=CENTURY_YEAR_$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,3)),"^",1)
"RTN","C9CMODND",897,0)
 .....;start DAILY AT 0830
"RTN","C9CMODND",898,0)
 .....I (RTEXT="DAILY AT 0830") D
"RTN","C9CMODND",899,0)
 ......S BASEDATE=$P(RNOW,".",1)_".0830"
"RTN","C9CMODND",900,0)
 .....;end DAILY AT 0830
"RTN","C9CMODND",901,0)
 .....;start DAY OF WEEK
"RTN","C9CMODND",902,0)
 .....I (RTEXT="DAY OF WEEK") D
"RTN","C9CMODND",903,0)
 ......N NDOW S NDOW=$$DOW^XLFDT(RNOW)
"RTN","C9CMODND",904,0)
 ......I NDOW'="" D
"RTN","C9CMODND",905,0)
 .......N DOW S DOW=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,5)),"^",1)
"RTN","C9CMODND",906,0)
 .......I DOW'="" D
"RTN","C9CMODND",907,0)
 ........;first find the most recent day that matches DOW
"RTN","C9CMODND",908,0)
 ........S BASEDATE=RNOW
"RTN","C9CMODND",909,0)
 ........I NDOW'=DOW  D ;today doesn't match - check most recent to see if within range
"RTN","C9CMODND",910,0)
 .........N DFOUND
"RTN","C9CMODND",911,0)
 .........S DFOUND=0
"RTN","C9CMODND",912,0)
 .........N DTX
"RTN","C9CMODND",913,0)
 .........N SAVEDATE
"RTN","C9CMODND",914,0)
 .........S SAVEDATE=BASEDATE
"RTN","C9CMODND",915,0)
 .........F DTX=1:1:7 Q:(DFOUND=1)  D
"RTN","C9CMODND",916,0)
 ..........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-1)
"RTN","C9CMODND",917,0)
 ..........I $$DOW^XLFDT(BASEDATE)=DOW D
"RTN","C9CMODND",918,0)
 ...........S DFOUND=1
"RTN","C9CMODND",919,0)
 .........I DFOUND=1 D
"RTN","C9CMODND",920,0)
 ..........;check to see if within range
"RTN","C9CMODND",921,0)
 ..........;I $$FMADD^XLFDT(BASEDATE,ABD)<RNOW D ;most recent no good, find next
"RTN","C9CMODND",922,0)
 ..........I $$FMADD^XLFDT(BASEDATE,ABDAYS)<RNOW D ;most recent no good, find next ;changed ABD to ABDAYS during override coding
"RTN","C9CMODND",923,0)
 ...........S BASEDATE=SAVEDATE
"RTN","C9CMODND",924,0)
 ...........S DFOUND=0
"RTN","C9CMODND",925,0)
 ...........F DTX=1:1:7 Q:(DFOUND=1)  D
"RTN","C9CMODND",926,0)
 ............S BASEDATE=$$FMADD^XLFDT(BASEDATE,1)
"RTN","C9CMODND",927,0)
 ............I $$DOW^XLFDT(BASEDATE)=DOW D
"RTN","C9CMODND",928,0)
 .............S DFOUND=1
"RTN","C9CMODND",929,0)
 .........S SAVEDATE=""
"RTN","C9CMODND",930,0)
 ........S BASEDATE=$P(BASEDATE,".",1)_".2359"
"RTN","C9CMODND",931,0)
 ........S ABHOURS=23 ;august 1
"RTN","C9CMODND",932,0)
 ........S ABMINS=59 ;august 1
"RTN","C9CMODND",933,0)
 .....;end DAY OF WEEK
"RTN","C9CMODND",934,0)
 .....I (RTEXT="DATE OF MONTH") D
"RTN","C9CMODND",935,0)
 ......N DOM S DOM=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,4)),"^",1)
"RTN","C9CMODND",936,0)
 ......I DOM'="" D
"RTN","C9CMODND",937,0)
 .......I $L(DOM)=1 S DOM="0"_DOM
"RTN","C9CMODND",938,0)
 .......I $L(DOM)=2 D
"RTN","C9CMODND",939,0)
 ........N DNOW S DNOW=$E(DHMS,3,4) ;day now
"RTN","C9CMODND",940,0)
 ........N MNOW S MNOW=$E(DHMS,1,2) ;month now
"RTN","C9CMODND",941,0)
 ........N REMA S REMA=$P(DHMS,".",2) ;hours, minutes, and seconds
"RTN","C9CMODND",942,0)
 ........;adjust for days in month
"RTN","C9CMODND",943,0)
 ........I (DOM>28) D
"RTN","C9CMODND",944,0)
 .........I (MNOW="02") D ;february
"RTN","C9CMODND",945,0)
 ..........S DOM="28"
"RTN","C9CMODND",946,0)
 .........I (DOM>30) D
"RTN","C9CMODND",947,0)
 ..........I ((MNOW="04")!(MNOW="06")!(MNOW="09")!(MNOW="11")) D
"RTN","C9CMODND",948,0)
 ...........S DOM="30"
"RTN","C9CMODND",949,0)
 ........;check the acceptable range
"RTN","C9CMODND",950,0)
 ........N ADAYS S ADAYS=$P(ABD,".",1)
"RTN","C9CMODND",951,0)
 ........N CKD S CKD=CENTURY_YEAR_MNOW_DOM_"."_REMA
"RTN","C9CMODND",952,0)
 ........I ((RNOW>$$FMADD^XLFDT(CKD,(-1*ADAYS)))&(RNOW<$$FMADD^XLFDT(CKD,ADAYS))) D
"RTN","C9CMODND",953,0)
 .........S BASEDATE=CKD
"RTN","C9CMODND",954,0)
 ........E  D
"RTN","C9CMODND",955,0)
 .........I MNOW<12 S MNOW=MNOW+1
"RTN","C9CMODND",956,0)
 .........I MNOW=12 S MNOW="01" S YEAR=YEAR+1
"RTN","C9CMODND",957,0)
 .........I $L(YEAR)=1 S YEAR="0"_YEAR
"RTN","C9CMODND",958,0)
 .........I $L(MNOW)=1 S MNOW="0"_MNOW
"RTN","C9CMODND",959,0)
 .........I YEAR=100 S YEAR="00" S CENTURY=CENTURY+1
"RTN","C9CMODND",960,0)
 .........S BASEDATE=CENTURY_YEAR_MNOW_DOM_"."_2359
"RTN","C9CMODND",961,0)
 .........S ABHOURS=23 ;august 1
"RTN","C9CMODND",962,0)
 .........S ABMINS=59 ;august 1
"RTN","C9CMODND",963,0)
 .....I (RTEXT="ONE TIME - CALENDAR DATE") D
"RTN","C9CMODND",964,0)
 ......S BASEDATE=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,2)),"^",1)
"RTN","C9CMODND",965,0)
 .....I ((BASEDATE'=ADATE)&(BASEDATE'=0)&($F(RTEXT,"PASS-THROUGH REMINDER")'>0)) D ;not a pass-through reminder ;added basedate'=adate during override coding - never due exactly at admit time and shows that no rules were applicable
"RTN","C9CMODND",966,0)
 ......S RULELEVELFOUND=LEVEL
"RTN","C9CMODND",967,0)
 ......N C9CCHECK
"RTN","C9CMODND",968,0)
 ......S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODND",969,0)
 ......I C9CCHECK>0 D
"RTN","C9CMODND",970,0)
 .......;check to see if there is a completed note in this range or after
"RTN","C9CMODND",971,0)
 .......I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CMODND",972,0)
 ........I DUEDATE<BASEDATE D
"RTN","C9CMODND",973,0)
 .........S DUEDATE=BASEDATE
"RTN","C9CMODND",974,0)
 .........S APRULE=RPOINT ;applicable rule
"RTN","C9CMODND",975,0)
 .........I $F(RTEXT,"X DAYS")>0 D
"RTN","C9CMODND",976,0)
 ..........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODND",977,0)
 ..........S OFST=OFFSET ;added during override coding
"RTN","C9CMODND",978,0)
 .........I $F(RTEXT,"X HOURS")>0 D
"RTN","C9CMODND",979,0)
 ..........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODND",980,0)
 ..........S OFST=OFFSET ;added during override coding
"RTN","C9CMODND",981,0)
 .......I NONOTE=0 D
"RTN","C9CMODND",982,0)
 ........;check to see if there is a completed note of this title within or after this time period
"RTN","C9CMODND",983,0)
 ........;first check within the time period
"RTN","C9CMODND",984,0)
 ........N LASTDATE
"RTN","C9CMODND",985,0)
 ........S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CMODND",986,0)
 ........I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS,-ABMINS)) D  ;this means a note has not been done during or after the time period ;added ABMINS august 1
"RTN","C9CMODND",987,0)
 .........I DUEDATE<BASEDATE D
"RTN","C9CMODND",988,0)
 ..........S APRULE=RPOINT
"RTN","C9CMODND",989,0)
 ..........S DUEDATE=BASEDATE
"RTN","C9CMODND",990,0)
 ..........I $F(RTEXT,"X DAYS")>0 D ;added during override coding
"RTN","C9CMODND",991,0)
 ...........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1) ;added during override coding
"RTN","C9CMODND",992,0)
 ...........S OFST=OFFSET ;added during override coding
"RTN","C9CMODND",993,0)
 ..........I $F(RTEXT,"X HOURS")>0 D ;added during override coding
"RTN","C9CMODND",994,0)
 ...........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1) ;added during override coding
"RTN","C9CMODND",995,0)
 ...........S OFST=OFFSET ;added during override coding
"RTN","C9CMODND",996,0)
 .....E  D ;pass through reminder
"RTN","C9CMODND",997,0)
 ......I ((BASEDATE'=0)&($F(RTEXT,"PASS-THROUGH REMINDER")>0)) D ;added find text during override coding to help eliminate due at exact admit time bug
"RTN","C9CMODND",998,0)
 .......S RULELEVELFOUND=LEVEL
"RTN","C9CMODND",999,0)
 .......N PHRASE
"RTN","C9CMODND",1000,0)
 .......S PHRASE=""
"RTN","C9CMODND",1001,0)
 .......I $G(REMIEN)>0 D
"RTN","C9CMODND",1002,0)
 ........S PHRASE=$P($G(^PXD(811.9,REMIEN,0)),"^",4)
"RTN","C9CMODND",1003,0)
 .......N C9CCHECK
"RTN","C9CMODND",1004,0)
 .......I PHRASE'="" D
"RTN","C9CMODND",1005,0)
 ........S C9CCHECK=$$SHOW^C9CPTR(PHRASE,BASEDATE)
"RTN","C9CMODND",1006,0)
 .......E  D
"RTN","C9CMODND",1007,0)
 ........S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODND",1008,0)
 .......I C9CCHECK>0 D
"RTN","C9CMODND",1009,0)
 ........I DUEDATE<BASEDATE D
"RTN","C9CMODND",1010,0)
 .........S APRULE=RPOINT_"^"_$G(PHRASE)
"RTN","C9CMODND",1011,0)
 .........S DUEDATE=BASEDATE
"RTN","C9CMODND",1012,0)
 ;----------------------
"RTN","C9CMODND",1013,0)
 Q
"RTN","C9CMODND",1014,0)
FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years - RMS for CRH 20191016
"RTN","C9CMODND",1015,0)
 Q:DD<29 DD
"RTN","C9CMODND",1016,0)
 I (MONT="02"),(DD>28) S DD=28+$$LEAP^%DTC(1700+(CEN_YEAR))  ; 1 if leap year, 0 if not
"RTN","C9CMODND",1017,0)
 I (DD>30),((MONT="04")!(MONT="06")!(MONT="09")!(MONT="11")) S DD=30
"RTN","C9CMODND",1018,0)
 Q DD
"RTN","C9CMODND",1019,0)
RPCGNOTE(C9CRET,NOTEIEN) ;RPC to bring back text of note
"RTN","C9CMODND",1020,0)
 Q:$G(NOTEIEN)'>0
"RTN","C9CMODND",1021,0)
 N GRET
"RTN","C9CMODND",1022,0)
 N CNT
"RTN","C9CMODND",1023,0)
 S CNT=0
"RTN","C9CMODND",1024,0)
 D TGET^TIUSRVR1(.GRET,+NOTEIEN)
"RTN","C9CMODND",1025,0)
 I GRET'="" D
"RTN","C9CMODND",1026,0)
 .N PATIEN
"RTN","C9CMODND",1027,0)
 .S PATIEN=$P($G(^TIU(8925,+NOTEIEN,0)),"^",2)
"RTN","C9CMODND",1028,0)
 .I PATIEN>0 D
"RTN","C9CMODND",1029,0)
 ..N PATNAME
"RTN","C9CMODND",1030,0)
 ..S PATNAME=$P($G(^DPT(PATIEN,0)),"^",1)
"RTN","C9CMODND",1031,0)
 ..S CNT=CNT+1
"RTN","C9CMODND",1032,0)
 ..S C9CRET(CNT)="Patient: "_PATNAME        
"RTN","C9CMODND",1033,0)
 ..N NX
"RTN","C9CMODND",1034,0)
 ..S NX=0 F  S NX=$O(@GRET@(NX)) Q:NX'>0  D
"RTN","C9CMODND",1035,0)
 ...S CNT=CNT+1
"RTN","C9CMODND",1036,0)
 ...S C9CRET(CNT)=(@GRET@(NX))
"RTN","C9CMODND",1037,0)
 Q
"RTN","C9CMODND",1038,0)
RPCAF(C9CRET) ;get all possible filter values - in this case, note titles that have rules engine rules
"RTN","C9CMODND",1039,0)
 ;RPC-C9C NOTES DUE ALL FILTER VALUES
"RTN","C9CMODND",1040,0)
 N CNT
"RTN","C9CMODND",1041,0)
 S CNT=0
"RTN","C9CMODND",1042,0)
 N RX
"RTN","C9CMODND",1043,0)
 S RX=0 F  S RX=$O(^C9C(300890,RX)) Q:RX'>0  D
"RTN","C9CMODND",1044,0)
 .I $P($G(^C9C(300890,RX,4)),"^",1)'>0 D ;not inactive
"RTN","C9CMODND",1045,0)
 ..N INCLUDE
"RTN","C9CMODND",1046,0)
 ..S INCLUDE=0
"RTN","C9CMODND",1047,0)
 ..N FX
"RTN","C9CMODND",1048,0)
 ..S FX=0 F  S FX=$O(^C9C(300890,RX,1,FX)) Q:FX'>0  D ;check for ward rules
"RTN","C9CMODND",1049,0)
 ...N AX
"RTN","C9CMODND",1050,0)
 ...S AX=$O(^C9C(300890,RX,1,FX,1,0))
"RTN","C9CMODND",1051,0)
 ...I AX>0 S INCLUDE=1
"RTN","C9CMODND",1052,0)
 ..I INCLUDE=0 D
"RTN","C9CMODND",1053,0)
 ...S FX=0 F  S FX=$O(^C9C(300890,RX,2,FX)) Q:FX'>0  D ;check for unit rules
"RTN","C9CMODND",1054,0)
 ....N AX
"RTN","C9CMODND",1055,0)
 ....S AX=$O(^C9C(300890,RX,2,FX,1,0))
"RTN","C9CMODND",1056,0)
 ....I AX>0 S INCLUDE=1
"RTN","C9CMODND",1057,0)
 ..I INCLUDE=0 D
"RTN","C9CMODND",1058,0)
 ...S FX=0 F  S FX=$O(^C9C(300890,RX,3,FX)) Q:FX'>0  D ;check for hospital rules
"RTN","C9CMODND",1059,0)
 ....N AX
"RTN","C9CMODND",1060,0)
 ....S AX=$O(^C9C(300890,RX,3,FX,1,0))
"RTN","C9CMODND",1061,0)
 ....I AX>0 S INCLUDE=1
"RTN","C9CMODND",1062,0)
 ..I INCLUDE=1 D ;include this formula in returned data
"RTN","C9CMODND",1063,0)
 ...N VPTR
"RTN","C9CMODND",1064,0)
 ...S VPTR=$P($G(^C9C(300890,RX,0)),"^",1)
"RTN","C9CMODND",1065,0)
 ...I VPTR'="" D
"RTN","C9CMODND",1066,0)
 ....N ENTRY S ENTRY=$P(VPTR,";",1)
"RTN","C9CMODND",1067,0)
 ....N FILEG S FILEG=$P(VPTR,";",2)
"RTN","C9CMODND",1068,0)
 ....I ((ENTRY'="")&(FILEG'="")) D
"RTN","C9CMODND",1069,0)
 .....N FN S FN="^"_FILEG_ENTRY_",0)"
"RTN","C9CMODND",1070,0)
 .....N ENTNAME S ENTNAME=$P($G(@(FN)),"^",1)
"RTN","C9CMODND",1071,0)
 .....I ENTNAME'="" D
"RTN","C9CMODND",1072,0)
 ......S CNT=CNT+1
"RTN","C9CMODND",1073,0)
 ......S C9CRET(CNT)=ENTRY_"^"_ENTNAME
"RTN","C9CMODND",1074,0)
 Q
"RTN","C9CMODNT")
0^14^B8329003
"RTN","C9CMODNT",1,0)
C9CMODNT ;module RPCs for C9C DASHBOARD MODULE Notes Due by Team
"RTN","C9CMODNT",2,0)
 ; Bug Fix: Date issue RMS for CRH 20191017;;;;;Build 2
"RTN","C9CMODNT",3,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina]
"RTN","C9CMODNT",4,0)
 ;
"RTN","C9CMODNT",5,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODNT",6,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODNT",7,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODNT",8,0)
 ;
"RTN","C9CMODNT",9,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODNT",10,0)
 ;
"RTN","C9CMODNT",11,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODNT",12,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODNT",13,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODNT",14,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODNT",15,0)
 ;limitations under the License.
"RTN","C9CMODNT",16,0)
 Q ;no entry from top
"RTN","C9CMODNT",17,0)
RPCGT(C9CRET) ;get teams
"RTN","C9CMODNT",18,0)
 Q:DUZ'>0
"RTN","C9CMODNT",19,0)
 N TMS
"RTN","C9CMODNT",20,0)
 D PLTEAMS^ORWTPT(.TMS,DUZ)
"RTN","C9CMODNT",21,0)
 N CNT
"RTN","C9CMODNT",22,0)
 S CNT=0
"RTN","C9CMODNT",23,0)
 N TX
"RTN","C9CMODNT",24,0)
 S TX="" F  S TX=$O(TMS(TX)) Q:TX'>0  D
"RTN","C9CMODNT",25,0)
 .S CNT=CNT+1
"RTN","C9CMODNT",26,0)
 .S C9CRET(CNT)=$P(TMS(TX),"^",1)_"^"_$P(TMS(TX),"^",1)_": "_$P(TMS(TX),"^",2)
"RTN","C9CMODNT",27,0)
 Q
"RTN","C9CMODNT",28,0)
RPCGAT(C9CRET) ;get psychiatrist auto teams and subscribed teams
"RTN","C9CMODNT",29,0)
 Q:DUZ'>0
"RTN","C9CMODNT",30,0)
 Q:DUZ(2)'>0
"RTN","C9CMODNT",31,0)
 ;first get psychiatrist auto teams  TEAMIEN^TEAM
"RTN","C9CMODNT",32,0)
 N PTRET 
"RTN","C9CMODNT",33,0)
 N ARET,RX,HAVE,AIEN
"RTN","C9CMODNT",34,0)
 S RX=$$GETATTS^C9CALST(.ARET)
"RTN","C9CMODNT",35,0)
 I +RX>0 D
"RTN","C9CMODNT",36,0)
 .S RX=0 F  S RX=$O(ARET(RX)) Q:RX'>0  D
"RTN","C9CMODNT",37,0)
 ..S AIEN=$P(ARET(RX),"^",2)
"RTN","C9CMODNT",38,0)
 ..I AIEN>0 D
"RTN","C9CMODNT",39,0)
 ...N THISLIST
"RTN","C9CMODNT",40,0)
 ...S THISLIST=$$CHECK^C9CALST(AIEN)
"RTN","C9CMODNT",41,0)
 ...S HAVE=+THISLIST
"RTN","C9CMODNT",42,0)
 ...I HAVE>0 D
"RTN","C9CMODNT",43,0)
 ....I $$ACTIVE^XUSER(AIEN)>0 D ;active user
"RTN","C9CMODNT",44,0)
 .....I $P(THISLIST,"^",2)'="" D
"RTN","C9CMODNT",45,0)
 ......S PTRET($P(THISLIST,"^",2),$P(THISLIST,"^",1))=THISLIST ;TEAMIEN^TEAM
"RTN","C9CMODNT",46,0)
 N TMS
"RTN","C9CMODNT",47,0)
 D PLTEAMS^ORWTPT(.TMS,DUZ) ;gets user's subscribed teams TEAMIEN^TEAM
"RTN","C9CMODNT",48,0)
 ;now alphabetize these teams
"RTN","C9CMODNT",49,0)
 N AX
"RTN","C9CMODNT",50,0)
 S AX=0 F  S AX=$O(TMS(AX)) Q:AX'>0  D
"RTN","C9CMODNT",51,0)
 .I $P(TMS(AX),"^",2)'="" D
"RTN","C9CMODNT",52,0)
 ..S PTRET($P(TMS(AX),"^",2),$P(TMS(AX),"^",1))=TMS(AX)
"RTN","C9CMODNT",53,0)
 N CNT
"RTN","C9CMODNT",54,0)
 S CNT=0
"RTN","C9CMODNT",55,0)
 N TNAME
"RTN","C9CMODNT",56,0)
 S TNAME="" F  S TNAME=$O(PTRET(TNAME)) Q:TNAME=""  D
"RTN","C9CMODNT",57,0)
 .N TIEN
"RTN","C9CMODNT",58,0)
 .S TIEN=0 F  S TIEN=$O(PTRET(TNAME,TIEN)) Q:TIEN'>0  D
"RTN","C9CMODNT",59,0)
 ..S CNT=CNT+1
"RTN","C9CMODNT",60,0)
 ..S C9CRET(CNT)=TIEN_"^"_TNAME_"~"_TIEN
"RTN","C9CMODNT",61,0)
 Q
"RTN","C9CMODNT",62,0)
RPCND(C9CRET,TEAM,FILTERS) ;get notes due data
"RTN","C9CMODNT",63,0)
 ;C9CRET - return array
"RTN","C9CMODNT",64,0)
 ;TEAM - team name~team ien
"RTN","C9CMODNT",65,0)
 ;FILTERS - zero-based list of TIU DOCUMENT DEFINITION ien^Name to include in results
"RTN","C9CMODNT",66,0)
 ;Patient^Note Title^Due^Ward
"RTN","C9CMODNT",67,0)
 Q:$G(TEAM)=""
"RTN","C9CMODNT",68,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CMODNT",69,0)
 N C9CI
"RTN","C9CMODNT",70,0)
 S C9CI=0
"RTN","C9CMODNT",71,0)
 I $G(FILTERS(0))="" D ;no filters so use all titles that have rules
"RTN","C9CMODNT",72,0)
 .;First get all titles with rules engine rules defined
"RTN","C9CMODNT",73,0)
 .N TITLES
"RTN","C9CMODNT",74,0)
 .D RPCAF(.TITLES)
"RTN","C9CMODNT",75,0)
 .;remove trailing spaces since some titles seem to have them
"RTN","C9CMODNT",76,0)
 .N TX
"RTN","C9CMODNT",77,0)
 .S TX=0 F  S TX=$O(TITLES(TX)) Q:TX'>0  D
"RTN","C9CMODNT",78,0)
 ..N TL
"RTN","C9CMODNT",79,0)
 ..S TL=$L(TITLES(TX))
"RTN","C9CMODNT",80,0)
 ..I $E(TITLES(TX),TL)=" " S TITLES(TX)=$E(TITLES(TX),1,TL-1)
"RTN","C9CMODNT",81,0)
 .N RP
"RTN","C9CMODNT",82,0)
 .S RP=0 F  S RP=$O(TITLES(RP)) Q:RP'>0  D
"RTN","C9CMODNT",83,0)
 ..S FILTERS(RP-1)=TITLES(RP)
"RTN","C9CMODNT",84,0)
 Q:($G(FILTERS(0)))=""
"RTN","C9CMODNT",85,0)
 ;For each of these titles compare ward patients against cohort rules, then ward, then unit, then hospital
"RTN","C9CMODNT",86,0)
 N CIEN
"RTN","C9CMODNT",87,0)
 S CIEN=$O(^TIU(8925.6,"B","COMPLETED",0)) ;note status
"RTN","C9CMODNT",88,0)
 Q:CIEN'>0
"RTN","C9CMODNT",89,0)
 ;get patients on the team DFN^PATIENT NAME
"RTN","C9CMODNT",90,0)
CHKTEAM
"RTN","C9CMODNT",91,0)
 N TEAMIEN
"RTN","C9CMODNT",92,0)
 S TEAMIEN=$P($G(TEAM),"~",2)
"RTN","C9CMODNT",93,0)
 Q:TEAMIEN'>0
"RTN","C9CMODNT",94,0)
 N TPATS
"RTN","C9CMODNT",95,0)
 D TEAMPTS^ORQPTQ1(.TPATS,TEAMIEN)
"RTN","C9CMODNT",96,0)
 Q:'$D(TPATS(1))
"RTN","C9CMODNT",97,0)
 Q:TPATS(1)="^No patients found."
"RTN","C9CMODNT",98,0)
 ;only need the DFNs
"RTN","C9CMODNT",99,0)
 N TD
"RTN","C9CMODNT",100,0)
 S TD=0 F  S TD=$O(TPATS(TD)) Q:TD'>0  D
"RTN","C9CMODNT",101,0)
 .S TPATS(TD)=+TPATS(TD)
"RTN","C9CMODNT",102,0)
 N RNOW
"RTN","C9CMODNT",103,0)
 S RNOW=$$NOW^XLFDT
"RTN","C9CMODNT",104,0)
 N YEAR ;year
"RTN","C9CMODNT",105,0)
 S YEAR=$E(RNOW,2,3)
"RTN","C9CMODNT",106,0)
 N CENTURY
"RTN","C9CMODNT",107,0)
 S CENTURY=$E(RNOW,1,1)
"RTN","C9CMODNT",108,0)
 N DHMS; month day hour minutes seconds
"RTN","C9CMODNT",109,0)
 S DHMS=$E(RNOW,4,99)
"RTN","C9CMODNT",110,0)
 ;Now loop through the patients on the selected team
"RTN","C9CMODNT",111,0)
 N PX
"RTN","C9CMODNT",112,0)
 S PX=0 F  S PX=$O(TPATS(PX)) Q:PX'>0  D        
"RTN","C9CMODNT",113,0)
 .N PAT
"RTN","C9CMODNT",114,0)
 .S PAT=TPATS(PX)
"RTN","C9CMODNT",115,0)
 .Q:PAT'>0
"RTN","C9CMODNT",116,0)
 .;get the patient's ward and unit
"RTN","C9CMODNT",117,0)
 .N WARD
"RTN","C9CMODNT",118,0)
 .N WARDIEN
"RTN","C9CMODNT",119,0)
 .S WARDIEN=-1
"RTN","C9CMODNT",120,0)
 .S WARD=$P($G(^DPT(PAT,.1)),"^",1)
"RTN","C9CMODNT",121,0)
 .I WARD'="" D ;must be an inpatient 
"RTN","C9CMODNT",122,0)
 ..S WARDIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CMODNT",123,0)
 .I WARDIEN=-1 S WARD="Outpatient"
"RTN","C9CMODNT",124,0)
 .N FX	
"RTN","C9CMODNT",125,0)
 .N UNIT ;bedsection in file 42
"RTN","C9CMODNT",126,0)
 .S UNIT="Undefined"
"RTN","C9CMODNT",127,0)
 .I WARDIEN>0 D
"RTN","C9CMODNT",128,0)
 ..S UNIT=$P($G(^DIC(42,WARDIEN,0)),"^",2)
"RTN","C9CMODNT",129,0)
 .N DIV
"RTN","C9CMODNT",130,0)
 .S DIV=DUZ(2)
"RTN","C9CMODNT",131,0)
 .Q:DIV'>0
"RTN","C9CMODNT",132,0)
 .S FX="" F  S FX=$O(FILTERS(FX)) Q:FX=""  D ;if included in filters (this is a zero-based array)
"RTN","C9CMODNT",133,0)
 ..;go through each formula
"RTN","C9CMODNT",134,0)
 ..;find this title in C9C RULES ENGINE FILE
"RTN","C9CMODNT",135,0)
 ..N OFFSET ;CRH JHT 2019 - for override logic
"RTN","C9CMODNT",136,0)
 ..S OFFSET=0 ;CRH JHT 2019 - for override logic
"RTN","C9CMODNT",137,0)
 ..N TITLIEN,TITLNAME
"RTN","C9CMODNT",138,0)
 ..S TITLIEN=$P(FILTERS(FX),"^",1)
"RTN","C9CMODNT",139,0)
 ..S TITLNAME=$P(FILTERS(FX),"^",2)
"RTN","C9CMODNT",140,0)
 ..N REIEN S REIEN=$O(^C9C(300890,"B",TITLIEN_";TIU(8925.1,",0))
"RTN","C9CMODNT",141,0)
 ..I (REIEN>0) I ($P($G(^C9C(300890,REIEN,4)),"^",1)'>0) D ;not inactive
"RTN","C9CMODNT",142,0)
 ...;check for required health factor
"RTN","C9CMODNT",143,0)
 ...N HFACTIEN ;health factor check
"RTN","C9CMODNT",144,0)
 ...S HFACTIEN=$P($G(^C9C(300890,REIEN,5)),"^",1) ;health factor check
"RTN","C9CMODNT",145,0)
 ...;check for reminder cohort
"RTN","C9CMODNT",146,0)
 ...N REMIEN
"RTN","C9CMODNT",147,0)
 ...S REMIEN=$P($G(^C9C(300890,REIEN,6)),"^",1) ;reminder cohort to check
"RTN","C9CMODNT",148,0)
 ...N DEFARR
"RTN","C9CMODNT",149,0)
 ...N RESOLU
"RTN","C9CMODNT",150,0)
 ...S RESOLU=1 ;assume in cohort unless proven otherwise below
"RTN","C9CMODNT",151,0)
 ...N CLEVEL ;cohort level, 0=no cohort, 1=in cohort, 2=not in cohort ;mar 3,2020
"RTN","C9CMODNT",152,0)
 ...S CLEVEL=0 ;start by assuming no cohort ;mar 3,2020
"RTN","C9CMODNT",153,0)
 ...I REMIEN>0 D
"RTN","C9CMODNT",154,0)
 ....S CLEVEL=1 ;start by assuming in cohort ;mar 3,2020
"RTN","C9CMODNT",155,0)
 ....N DATE ;must be newed but not populated to return current value
"RTN","C9CMODNT",156,0)
 ....N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CMODNT",157,0)
 ....S PXRMDEBG=1
"RTN","C9CMODNT",158,0)
 ....D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CMODNT",159,0)
 ....N FIEVAL
"RTN","C9CMODNT",160,0)
 ....D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CMODNT",161,0)
 ....I $G(PXRMID)'="" D
"RTN","C9CMODNT",162,0)
 .....N RESULT
"RTN","C9CMODNT",163,0)
 .....S RESULT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CMODNT",164,0)
 .....I RESULT=0 D
"RTN","C9CMODNT",165,0)
 ......S RESOLU=0
"RTN","C9CMODNT",166,0)
 ......S CLEVEL=2 ;not in cohort ;mar 3,2020
"RTN","C9CMODNT",167,0)
 ......;check to see if we need to process pass-through reminders anyway
"RTN","C9CMODNT",168,0)
 ......I $P($G(^C9C(300890,REIEN,7)),"^",1)>0 D
"RTN","C9CMODNT",169,0)
 .......S RESOLU=2 ;yes, process pass-thru rules only
"RTN","C9CMODNT",170,0)
 .....K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CMODNT",171,0)
 ...Q:RESOLU=0 ;patient not in reminder cohort for this title
"RTN","C9CMODNT",172,0)
 ...N PTONLY
"RTN","C9CMODNT",173,0)
 ...S PTONLY=0
"RTN","C9CMODNT",174,0)
 ...I RESOLU=2 S PTONLY=1 ;pass-throughs only
"RTN","C9CMODNT",175,0)
 ...;see if any of the rules involve special orderable item cohorts as this is the most granular case
"RTN","C9CMODNT",176,0)
 ...N OCOHORT ;FORMULA IEN^RULE IEN^ORDERABLE ITEM IEN
"RTN","C9CMODNT",177,0)
 ...N OCNT ;OCOHORT counter
"RTN","C9CMODNT",178,0)
 ...S OCNT=0
"RTN","C9CMODNT",179,0)
 ...I WARDIEN>0 D
"RTN","C9CMODNT",180,0)
 ....N WF ;ward formula
"RTN","C9CMODNT",181,0)
 ....S WF=0 F  S WF=$O(^C9C(300890,REIEN,1,WF)) Q:WF'>0  D
"RTN","C9CMODNT",182,0)
 .....;check formula wards to see if applicable
"RTN","C9CMODNT",183,0)
 .....I $O(^C9C(300890,REIEN,1,WF,2,"B",WARDIEN,0))>0 D ;ward included in this formula
"RTN","C9CMODNT",184,0)
 ......N FR ;formula rule
"RTN","C9CMODNT",185,0)
 ......S FR=0 F  S FR=$O(^C9C(300890,REIEN,1,WF,1,FR)) Q:FR'>0  D
"RTN","C9CMODNT",186,0)
 .......N RP ;rule pointer value
"RTN","C9CMODNT",187,0)
 .......S RP=$P($G(^C9C(300890,REIEN,1,WF,1,FR,0)),"^",1)
"RTN","C9CMODNT",188,0)
 .......I RP>0 D
"RTN","C9CMODNT",189,0)
 ........N ORIEN ;orderable item ien
"RTN","C9CMODNT",190,0)
 ........S ORIEN=$P($G(^C9C(300890,REIEN,1,WF,1,FR,7)),"^",1)
"RTN","C9CMODNT",191,0)
 ........I ORIEN>0 D ;orderable item cohort found
"RTN","C9CMODNT",192,0)
 .........S OCNT=OCNT+1
"RTN","C9CMODNT",193,0)
 .........S OCOHORT("WARD",OCNT)=WF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CMODNT",194,0)
 ...I UNIT'="Undefined" D
"RTN","C9CMODNT",195,0)
 ....N UF ;unit formula
"RTN","C9CMODNT",196,0)
 ....S UF=0 F  S UF=$O(^C9C(300890,REIEN,2,UF)) Q:UF'>0  D
"RTN","C9CMODNT",197,0)
 .....;check formula units to see if applicable
"RTN","C9CMODNT",198,0)
 .....I $O(^C9C(300890,REIEN,2,UF,2,"B",UNIT,0))>0 D ;unit included in this formula
"RTN","C9CMODNT",199,0)
 ......N FR ;formula rule
"RTN","C9CMODNT",200,0)
 ......S FR=0 F  S FR=$O(^C9C(300890,REIEN,2,UF,1,FR)) Q:FR'>0  D
"RTN","C9CMODNT",201,0)
 .......N RP ;rule pointer value
"RTN","C9CMODNT",202,0)
 .......S RP=$P($G(^C9C(300890,REIEN,2,UF,1,FR,0)),"^",1)
"RTN","C9CMODNT",203,0)
 .......I RP>0 D
"RTN","C9CMODNT",204,0)
 ........N ORIEN ;orderable item ien
"RTN","C9CMODNT",205,0)
 ........S ORIEN=$P($G(^C9C(300890,REIEN,2,UF,1,FR,7)),"^",1)
"RTN","C9CMODNT",206,0)
 ........I ORIEN>0 D ;orderable item cohort found
"RTN","C9CMODNT",207,0)
 .........S OCNT=OCNT+1
"RTN","C9CMODNT",208,0)
 .........S OCOHORT("UNIT",OCNT)=UF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CMODNT",209,0)
 ...N HF ;hospital formula
"RTN","C9CMODNT",210,0)
 ...S HF=0 F  S HF=$O(^C9C(300890,REIEN,3,HF)) Q:HF'>0  D
"RTN","C9CMODNT",211,0)
 ....;check formula hospital to see if applicable using DUZ(2)
"RTN","C9CMODNT",212,0)
 ....I $O(^C9C(300890,REIEN,3,HF,2,"B",DIV,0))>0 D ;hospital included in this formula
"RTN","C9CMODNT",213,0)
 .....N FR ;formula rule
"RTN","C9CMODNT",214,0)
 .....S FR=0 F  S FR=$O(^C9C(300890,REIEN,3,HF,1,FR)) Q:FR'>0  D
"RTN","C9CMODNT",215,0)
 ......N RP ;rule pointer value
"RTN","C9CMODNT",216,0)
 ......S RP=$P($G(^C9C(300890,REIEN,3,HF,1,FR,0)),"^",1)
"RTN","C9CMODNT",217,0)
 ......I RP>0 D
"RTN","C9CMODNT",218,0)
 .......N ORIEN ;orderable item ien
"RTN","C9CMODNT",219,0)
 .......S ORIEN=$P($G(^C9C(300890,REIEN,3,HF,1,FR,7)),"^",1)
"RTN","C9CMODNT",220,0)
 .......I ORIEN>0 D ;orderable item cohort found
"RTN","C9CMODNT",221,0)
 ........S OCNT=OCNT+1
"RTN","C9CMODNT",222,0)
 ........S OCOHORT("HOSPITAL",OCNT)=HF_"^"_FR_"^"_ORIEN_"^"_RP
"RTN","C9CMODNT",223,0)
 ...;use the APT cross-reference ^TIU(8925,"APT",PAT,TITLIEN,DOCSTATUS(zero node, piece 5 P:8925.6),INVERSE DATE(node 13, piece 1)
"RTN","C9CMODNT",224,0)
 ...N DUEDATE ;next note due date
"RTN","C9CMODNT",225,0)
 ...S DUEDATE=0
"RTN","C9CMODNT",226,0)
 ...N FNOTEIEN ;found note ien
"RTN","C9CMODNT",227,0)
 ...S FNOTEIEN=""
"RTN","C9CMODNT",228,0)
 ...N ROWCOLOR
"RTN","C9CMODNT",229,0)
 ...S ROWCOLOR=""
"RTN","C9CMODNT",230,0)
 ...N ADATE ;latest patient admit date
"RTN","C9CMODNT",231,0)
 ...S ADATE=0
"RTN","C9CMODNT",232,0)
 ...N ADIEN ;movement ien
"RTN","C9CMODNT",233,0)
 ...S ADIEN=$G(^DPT(PAT,.105))
"RTN","C9CMODNT",234,0)
 ...I ADIEN>0 D
"RTN","C9CMODNT",235,0)
 ....S ADATE=$P($G(^DGPM(ADIEN,0)),"^",1)
"RTN","C9CMODNT",236,0)
 ...N NONOTE ;set to one if this note has not been completed during this visit or within two days before
"RTN","C9CMODNT",237,0)
 ...S NONOTE=1 ;set to one for now, will check for completed note below
"RTN","C9CMODNT",238,0)
 ...;get the latest note (will also need to check to be sure it is during this visit)
"RTN","C9CMODNT",239,0)
 ...N NOTEOK ;has the health factor if required
"RTN","C9CMODNT",240,0)
 ...S NOTEOK=0
"RTN","C9CMODNT",241,0)
 ...N INVDATE
"RTN","C9CMODNT",242,0)
 ...S INVDATE=0
"RTN","C9CMODNT",243,0)
 ...N NDATE ;inverse note date for note ien being checked
"RTN","C9CMODNT",244,0)
 ...S NDATE=0 F  S NDATE=$O(^TIU(8925,"APT",PAT,TITLIEN,CIEN,NDATE)) Q:((NDATE'>0)!(NOTEOK>0))  D ;if found, there has been a note with this title, check health factor if required
"RTN","C9CMODNT",245,0)
 ....N NIEN
"RTN","C9CMODNT",246,0)
 ....S NIEN=0 F  S NIEN=$O(^TIU(8925,"APT",PAT,TITLIEN,CIEN,NDATE,NIEN)) Q:NIEN'>0  D
"RTN","C9CMODNT",247,0)
 .....;we now have the latest note ien, now check visit and rules
"RTN","C9CMODNT",248,0)
 .....;note - what if event based, but event happened last visit?
"RTN","C9CMODNT",249,0)
 .....S FNOTEIEN=NIEN
"RTN","C9CMODNT",250,0)
 .....I (((9999999-NDATE)'<$$FMADD^XLFDT(ADATE,-2))&($P($G(^TIU(8925,FNOTEIEN,15)),"^",2)>0)) D ;this means that the note was during this visit or within two days before - should cover notes written in SAU and it is a signed note
"RTN","C9CMODNT",251,0)
 ......I (HFACTIEN'>0) D
"RTN","C9CMODNT",252,0)
 .......S NONOTE=0 ;has a completed note this admission for this title
"RTN","C9CMODNT",253,0)
 .......S INVDATE=NDATE
"RTN","C9CMODNT",254,0)
 .......S NOTEOK=1 ;july 2
"RTN","C9CMODNT",255,0)
 ......E  D ;need to check the health factor required
"RTN","C9CMODNT",256,0)
 .......N HFDATE
"RTN","C9CMODNT",257,0)
 .......S HFDATE=9999999-NDATE
"RTN","C9CMODNT",258,0)
 .......S HFDATE=HFDATE\1
"RTN","C9CMODNT",259,0)
 .......S HFDATE=9999999-HFDATE
"RTN","C9CMODNT",260,0)
 .......N ENTRYD S ENTRYD=$P($G(^TIU(8925,FNOTEIEN,12)),"^",1)
"RTN","C9CMODNT",261,0)
 .......S ENTRYD=ENTRYD\1
"RTN","C9CMODNT",262,0)
 .......S ENTRYD=9999999-ENTRYD
"RTN","C9CMODNT",263,0)
 .......I (($D(^AUPNVHF("AA",PAT,HFACTIEN,HFDATE)))!($D(^AUPNVHF("AA",PAT,HFACTIEN,NDATE)))!($D(^AUPNVHF("AA",PAT,HFACTIEN,ENTRYD)))) D ;health factor exists for this note
"RTN","C9CMODNT",264,0)
 ........S NONOTE=0
"RTN","C9CMODNT",265,0)
 ........S INVDATE=NDATE
"RTN","C9CMODNT",266,0)
 ........S NOTEOK=1 ;july 2
"RTN","C9CMODNT",267,0)
 .......E  D
"RTN","C9CMODNT",268,0)
 ........N VPTR
"RTN","C9CMODNT",269,0)
 ........S VPTR=$P($G(^TIU(8925,FNOTEIEN,0)),"^",3)
"RTN","C9CMODNT",270,0)
 ........I VPTR>0 D
"RTN","C9CMODNT",271,0)
 .........N VDATE
"RTN","C9CMODNT",272,0)
 .........S VDATE=$P($G(^AUPNVSIT(VPTR,0)),"^",1)
"RTN","C9CMODNT",273,0)
 .........I VDATE>0 D
"RTN","C9CMODNT",274,0)
 ..........S VDATE=VDATE\1
"RTN","C9CMODNT",275,0)
 ..........S VDATE=9999999-VDATE
"RTN","C9CMODNT",276,0)
 ..........I $D(^AUPNVHF("AA",PAT,HFACTIEN,VDATE)) D
"RTN","C9CMODNT",277,0)
 ...........S NONOTE=0
"RTN","C9CMODNT",278,0)
 ...........S INVDATE=NDATE
"RTN","C9CMODNT",279,0)
 ...........S NOTEOK=1
"RTN","C9CMODNT",280,0)
 ...I INVDATE'>0 D
"RTN","C9CMODNT",281,0)
 ....S INVDATE=9999999
"RTN","C9CMODNT",282,0)
 ...;check all the rules and find the next one due
"RTN","C9CMODNT",283,0)
 ...;first check the cohort rules
"RTN","C9CMODNT",284,0)
 ...N ACR ;applicable cohort rules
"RTN","C9CMODNT",285,0)
 ...N EVNTDATE
"RTN","C9CMODNT",286,0)
 ...I PTONLY'>0 ;but not if we're just checking pass-through reminders
"RTN","C9CMODNT",287,0)
 ....N CH
"RTN","C9CMODNT",288,0)
 ....I WARDIEN>0 D
"RTN","C9CMODNT",289,0)
 .....S CH=0 F  S CH=$O(OCOHORT("WARD",CH)) Q:CH'>0  D
"RTN","C9CMODNT",290,0)
 ......N ACNT ;applicable cohort rules counter
"RTN","C9CMODNT",291,0)
 ......S ACNT=0
"RTN","C9CMODNT",292,0)
 ......N OIEN
"RTN","C9CMODNT",293,0)
 ......S OIEN=$P(OCOHORT("WARD",CH),"^",3)
"RTN","C9CMODNT",294,0)
 ......I OIEN>0 D
"RTN","C9CMODNT",295,0)
 .......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CMODNT",296,0)
 .......;allowing it for now
"RTN","C9CMODNT",297,0)
 .......N HASIT ;set to one if active order found
"RTN","C9CMODNT",298,0)
 .......S HASIT=0
"RTN","C9CMODNT",299,0)
 .......S EVNTDATE=0
"RTN","C9CMODNT",300,0)
 .......N RPNTR
"RTN","C9CMODNT",301,0)
 .......S RPNTR=$P(OCOHORT("WARD",CH),"^",2)
"RTN","C9CMODNT",302,0)
 .......N ID ;inverse date
"RTN","C9CMODNT",303,0)
 .......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CMODNT",304,0)
 ........N TN ;order ien
"RTN","C9CMODNT",305,0)
 ........S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CMODNT",306,0)
 .........N IN ;instance
"RTN","C9CMODNT",307,0)
 .........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CMODNT",308,0)
 ..........N OIF
"RTN","C9CMODNT",309,0)
 ..........S OIF=0 ;orderable item not found
"RTN","C9CMODNT",310,0)
 ..........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CMODNT",311,0)
 ...........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CMODNT",312,0)
 ............S OIF=1
"RTN","C9CMODNT",313,0)
 ..........I OIF=1 D
"RTN","C9CMODNT",314,0)
 ...........N STOPD ;stopdate
"RTN","C9CMODNT",315,0)
 ...........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CMODNT",316,0)
 ...........N STRTD
"RTN","C9CMODNT",317,0)
 ...........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CMODNT",318,0)
 ...........I ((STRTD<$$NOW^XLFDT)&((STOPD="")!(STOPD'<$$NOW^XLFDT))) D
"RTN","C9CMODNT",319,0)
 ............S HASIT=1 ;has active orderable item
"RTN","C9CMODNT",320,0)
 ............S EVNTDATE=STRTD
"RTN","C9CMODNT",321,0)
 ............S ACNT=ACNT+1
"RTN","C9CMODNT",322,0)
 ............S ACR("WARD",ACNT)=OCOHORT("WARD",CH)_"^"_TN_"^"_EVNTDATE ;Now OCOHORT("WARD",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CMODNT",323,0)
 ....I UNIT'="Undefined" D
"RTN","C9CMODNT",324,0)
 .....S CH=0 F  S CH=$O(OCOHORT("UNIT",CH)) Q:CH'>0  D
"RTN","C9CMODNT",325,0)
 ......N ACNT ;applicable cohort rules counter
"RTN","C9CMODNT",326,0)
 ......S ACNT=0
"RTN","C9CMODNT",327,0)
 ......N OIEN
"RTN","C9CMODNT",328,0)
 ......S OIEN=$P(OCOHORT("UNIT",CH),"^",3)
"RTN","C9CMODNT",329,0)
 ......I OIEN>0 D
"RTN","C9CMODNT",330,0)
 .......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CMODNT",331,0)
 .......;allowing it for now
"RTN","C9CMODNT",332,0)
 .......N HASIT ;set to one if active order found
"RTN","C9CMODNT",333,0)
 .......S HASIT=0
"RTN","C9CMODNT",334,0)
 .......S EVNTDATE=0
"RTN","C9CMODNT",335,0)
 .......N RPNTR
"RTN","C9CMODNT",336,0)
 .......S RPNTR=$P(OCOHORT("UNIT",CH),"^",2)
"RTN","C9CMODNT",337,0)
 .......N ID ;inverse date
"RTN","C9CMODNT",338,0)
 .......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CMODNT",339,0)
 ........N TN ;order ien
"RTN","C9CMODNT",340,0)
 ........S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CMODNT",341,0)
 .........N IN ;instance
"RTN","C9CMODNT",342,0)
 .........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CMODNT",343,0)
 ..........N OIF
"RTN","C9CMODNT",344,0)
 ..........S OIF=0 ;orderable item not found
"RTN","C9CMODNT",345,0)
 ..........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CMODNT",346,0)
 ...........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CMODNT",347,0)
 ............S OIF=1
"RTN","C9CMODNT",348,0)
 ..........I OIF=1 D
"RTN","C9CMODNT",349,0)
 ...........N STOPD ;stopdate
"RTN","C9CMODNT",350,0)
 ...........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CMODNT",351,0)
 ...........N STRTD
"RTN","C9CMODNT",352,0)
 ...........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CMODNT",353,0)
 ...........I ((STRTD<$$NOW^XLFDT)&((STOPD="")!(STOPD'<$$NOW^XLFDT))) D
"RTN","C9CMODNT",354,0)
 ............S HASIT=1 ;has active orderable item
"RTN","C9CMODNT",355,0)
 ............S EVNTDATE=STRTD
"RTN","C9CMODNT",356,0)
 ............S ACNT=ACNT+1
"RTN","C9CMODNT",357,0)
 ............S ACR("UNIT",ACNT)=OCOHORT("UNIT",CH)_"^"_TN_"^"_EVNTDATE ;;Now OCOHORT("UNIT",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CMODNT",358,0)
 ....S CH=0 F  S CH=$O(OCOHORT("HOSPITAL",CH)) Q:CH'>0  D
"RTN","C9CMODNT",359,0)
 .....N ACNT ;applicable cohort rules counter
"RTN","C9CMODNT",360,0)
 .....S ACNT=0
"RTN","C9CMODNT",361,0)
 .....N OIEN
"RTN","C9CMODNT",362,0)
 .....S OIEN=$P(OCOHORT("HOSPITAL",CH),"^",3)
"RTN","C9CMODNT",363,0)
 .....I OIEN>0 D
"RTN","C9CMODNT",364,0)
 ......;note - what about items that were ordered on prior visits and are still active?
"RTN","C9CMODNT",365,0)
 ......;allowing it for now
"RTN","C9CMODNT",366,0)
 ......N HASIT ;set to one if active order found
"RTN","C9CMODNT",367,0)
 ......S HASIT=0
"RTN","C9CMODNT",368,0)
 ......S EVNTDATE=0
"RTN","C9CMODNT",369,0)
 ......N RPNTR
"RTN","C9CMODNT",370,0)
 ......S RPNTR=$P(OCOHORT("HOSPITAL",CH),"^",2)
"RTN","C9CMODNT",371,0)
 ......N ID ;inverse date
"RTN","C9CMODNT",372,0)
 ......S ID=0 F  S ID=$O(^OR(100,"AC",PAT_";DPT(",ID)) Q:((ID'>0)!(HASIT=1))  D
"RTN","C9CMODNT",373,0)
 .......N TN ;order ien
"RTN","C9CMODNT",374,0)
 .......S TN=0 F  S TN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN)) Q:((TN'>0)!(HASIT=1))  D
"RTN","C9CMODNT",375,0)
 ........N IN ;instance
"RTN","C9CMODNT",376,0)
 ........S IN=0 F  S IN=$O(^OR(100,"AC",PAT_";DPT(",ID,TN,IN)) Q:((IN'>0)!(HASIT=1))  D
"RTN","C9CMODNT",377,0)
 .........N OIF
"RTN","C9CMODNT",378,0)
 .........S OIF=0 ;orderable item not found
"RTN","C9CMODNT",379,0)
 .........N OX S OX=0 F  S OX=$O(^OR(100,TN,.1,OX)) Q:OX'>0  D
"RTN","C9CMODNT",380,0)
 ..........I $P($G(^OR(100,TN,.1,OX,0)),"^",1)=OIEN D
"RTN","C9CMODNT",381,0)
 ...........S OIF=1
"RTN","C9CMODNT",382,0)
 .........I OIF=1 D
"RTN","C9CMODNT",383,0)
 ..........N STOPD ;stopdate
"RTN","C9CMODNT",384,0)
 ..........S STOPD=$P($G(^OR(100,TN,0)),"^",9)
"RTN","C9CMODNT",385,0)
 ..........N STRTD
"RTN","C9CMODNT",386,0)
 ..........S STRTD=$P($G(^OR(100,TN,0)),"^",8)
"RTN","C9CMODNT",387,0)
 ..........I ((STRTD<$$NOW^XLFDT)&((STOPD="")!(STOPD'<$$NOW^XLFDT))) D
"RTN","C9CMODNT",388,0)
 ...........S HASIT=1 ;has active orderable item
"RTN","C9CMODNT",389,0)
 ...........S EVNTDATE=STRTD
"RTN","C9CMODNT",390,0)
 ...........S ACNT=ACNT+1
"RTN","C9CMODNT",391,0)
 ...........S ACR("HOSPITAL",ACNT)=OCOHORT("HOSPITAL",CH)_"^"_TN_"^"_EVNTDATE ;;Now OCOHORT("HOSPITAL",CH)=Formula IEN^Rule IEN^Orderable Item IEN^Rule Pointer^Order IEN^Order Start Date
"RTN","C9CMODNT",392,0)
 ....;ACR() now contains cohort rules applicable to this patient
"RTN","C9CMODNT",393,0)
 ....;cohort rules trump everything - no other rules are considered if these are present!
"RTN","C9CMODNT",394,0)
 ....;like the other rules, ward cohort trumps unit cohort trumps hospital cohort
"RTN","C9CMODNT",395,0)
 ....;all three levels are contained in ACR, but they may be for varying orderable item iens
"RTN","C9CMODNT",396,0)
 ...;so for each orderable item ien, use only the most granular, i.e. ward,unit,hospital
"RTN","C9CMODNT",397,0)
 ...N APRULE ;applicable rule definition pointer
"RTN","C9CMODNT",398,0)
 ...S APRULE=0
"RTN","C9CMODNT",399,0)
 ...N RULELEVELFOUND ;use to track whether an applicable granular rule was found
"RTN","C9CMODNT",400,0)
 ...S RULELEVELFOUND="" ;WARD, UNIT, or HOSPITAL
"RTN","C9CMODNT",401,0)
 ...I $D(ACR) D
"RTN","C9CMODNT",402,0)
 ....;use only these cohort rules - ward, unit, or hospital in that order
"RTN","C9CMODNT",403,0)
 ....N BASEDATE
"RTN","C9CMODNT",404,0)
 ....S BASEDATE=0
"RTN","C9CMODNT",405,0)
 ....I WARDIEN>0 D ACRWUH(1,WARDIEN,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding
"RTN","C9CMODNT",406,0)
 ....I RULELEVELFOUND="" D
"RTN","C9CMODNT",407,0)
 .....I UNIT'="Undefined" D ACRWUH(2,UNIT,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding
"RTN","C9CMODNT",408,0)
 .....I RULELEVELFOUND="" D
"RTN","C9CMODNT",409,0)
 ......D ACRWUH(3,DIV,.APRULE,.RULELEVELFOUND,.DUEDATE,.ACR,NONOTE,INVDATE,.BASEDATE,TITLIEN,REIEN,.OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding
"RTN","C9CMODNT",410,0)
 ...I '$D(ACR) D 
"RTN","C9CMODNT",411,0)
 ....;use ward, unit, or hospital rules in that order
"RTN","C9CMODNT",412,0)
 ....S APRULE=0
"RTN","C9CMODNT",413,0)
 ....I WARDIEN>0 D NAFWUH(1,WARDIEN,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,TITLIEN,REIEN,.OFFSET,PTONLY,CLEVEL) ;ward rules ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODNT",414,0)
 ....I RULELEVELFOUND="" D
"RTN","C9CMODNT",415,0)
 .....I UNIT'="Undefined" D NAFWUH(2,UNIT,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,TITLIEN,REIEN,.OFFSET,PTONLY,CLEVEL) ;unit rules ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODNT",416,0)
 .....I RULELEVELFOUND="" D
"RTN","C9CMODNT",417,0)
 ......D NAFWUH(3,DIV,.APRULE,.RULELEVELFOUND,.DUEDATE,$G(ADATE),NONOTE,TITLIEN,REIEN,.OFFSET,PTONLY,CLEVEL) ;hospital rules ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODNT",418,0)
 ...I ((DUEDATE>0)&(+APRULE>0)) D
"RTN","C9CMODNT",419,0)
 ....;show this entry
"RTN","C9CMODNT",420,0)
 ....;find out what color to display the row
"RTN","C9CMODNT",421,0)
 ....S BASEDATE=DUEDATE
"RTN","C9CMODNT",422,0)
 ....;begin CRH JHT 2019 - for override logic
"RTN","C9CMODNT",423,0)
 ....N RPOINT
"RTN","C9CMODNT",424,0)
 ....S RPOINT=+APRULE
"RTN","C9CMODNT",425,0)
 ....;end CRH JHT 2019 - for override logic
"RTN","C9CMODNT",426,0)
 ....N AHEAD
"RTN","C9CMODNT",427,0)
 ....S AHEAD=$P(APRULE,"^",2)
"RTN","C9CMODNT",428,0)
 ....I AHEAD'="" D
"RTN","C9CMODNT",429,0)
 .....S C9CCHECK=$$ALMOST^C9CPTR(AHEAD,BASEDATE)
"RTN","C9CMODNT",430,0)
 ....E  D
"RTN","C9CMODNT",431,0)
 .....S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,+APRULE,4)) I CKCODE'="" X CKCODE
"RTN","C9CMODNT",432,0)
 ....I C9CCHECK>0 S ROWCOLOR="Yellow"
"RTN","C9CMODNT",433,0)
 ....I C9CCHECK=0 D
"RTN","C9CMODNT",434,0)
 .....S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,+APRULE,6)) I CKCODE'="" X CKCODE
"RTN","C9CMODNT",435,0)
 .....I C9CCHECK>0 S ROWCOLOR="LightCoral"
"RTN","C9CMODNT",436,0)
 ....N PATNAME
"RTN","C9CMODNT",437,0)
 ....S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CMODNT",438,0)
 ....N MRN
"RTN","C9CMODNT",439,0)
 ....S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CMODNT",440,0)
 ....N NOTEDATE
"RTN","C9CMODNT",441,0)
 ....S NOTEDATE=(9999999-INVDATE)
"RTN","C9CMODNT",442,0)
 ....I $P(NOTEDATE,".",1)>0 I $P(NOTEDATE,".",2)="" S NOTEDATE=NOTEDATE_".2359"
"RTN","C9CMODNT",443,0)
 ....S NOTEDATE=$$FMTE^XLFDT(NOTEDATE)
"RTN","C9CMODNT",444,0)
 ....I NOTEDATE=0 S NOTEDATE=""
"RTN","C9CMODNT",445,0)
 ....I $P(DUEDATE,".",1)>0 I $P(DUEDATE,".",2)="" S DUEDATE=DUEDATE_".2359"
"RTN","C9CMODNT",446,0)
 ....S DUEDATE=$$FMTE^XLFDT(DUEDATE)
"RTN","C9CMODNT",447,0)
 ....I DUEDATE=0 S DUEDATE=""
"RTN","C9CMODNT",448,0)
 ....N NOTEIEN
"RTN","C9CMODNT",449,0)
 ....S NOTEIEN=$G(FNOTEIEN)
"RTN","C9CMODNT",450,0)
 ....N OUTADMIT
"RTN","C9CMODNT",451,0)
 ....S OUTADMIT=$$FMTE^XLFDT(ADATE)
"RTN","C9CMODNT",452,0)
 ....N ATTEND
"RTN","C9CMODNT",453,0)
 ....S ATTEND=$G(^DPT(PAT,.1041)) I ATTEND S ATTEND=$P($G(^VA(200,ATTEND,0)),U)
"RTN","C9CMODNT",454,0)
 ....I WARDIEN=-1 S WARD="Outpatient"
"RTN","C9CMODNT",455,0)
 ....N ABBREV
"RTN","C9CMODNT",456,0)
 ....S ABBREV=""
"RTN","C9CMODNT",457,0)
 ....I $G(RPOINT)>0 D
"RTN","C9CMODNT",458,0)
 .....S ABBREV=$P($G(^C9C(300892,RPOINT,0)),"^",3)
"RTN","C9CMODNT",459,0)
 .....N OPOS
"RTN","C9CMODNT",460,0)
 .....I $G(OFFSET)'=0 D
"RTN","C9CMODNT",461,0)
 ......I $F(ABBREV,"X DAYS")>1 D
"RTN","C9CMODNT",462,0)
 .......S OPOS=$F(ABBREV,"X DAYS")
"RTN","C9CMODNT",463,0)
 .......I OPOS>7 D
"RTN","C9CMODNT",464,0)
 ........S ABBREV=$E(ABBREV,1,(OPOS-7))_OFFSET_$E(ABBREV,(OPOS-5),50)
"RTN","C9CMODNT",465,0)
 ......I $F(ABBREV,"X HOURS")>1 D
"RTN","C9CMODNT",466,0)
 .......S OPOS=$F(ABBREV,"X HOURS")
"RTN","C9CMODNT",467,0)
 .......I OPOS>8 D
"RTN","C9CMODNT",468,0)
 ........S ABBREV=$E(ABBREV,1,(OPOS-8))_OFFSET_$E(ABBREV,(OPOS-6),50)
"RTN","C9CMODNT",469,0)
 ....S C9CI=C9CI+1
"RTN","C9CMODNT",470,0)
 ....S C9CRET(C9CI)=PAT_"^"_PATNAME_"^"_MRN_"^"_OUTADMIT_"^"_ATTEND_"^"_TITLIEN_"^"_TITLNAME_"^"_NOTEDATE_"^"_WARD_"^"_NOTEIEN_"^"_DUEDATE_"^"_ROWCOLOR_"^"_ABBREV_"^"_RPOINT
"RTN","C9CMODNT",471,0)
 Q
"RTN","C9CMODNT",472,0)
ACRWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ARRACR,NONOTE,INVDATE,BASEDATE,TITLIEN,REIEN,OFFSET) ;CRH JHT 2019 - added TITLIEN and REIEN and OFFSET for override coding
"RTN","C9CMODNT",473,0)
 ;SEPAR - 1 for ward, 2 for unit, 3 for hospital
"RTN","C9CMODNT",474,0)
 ;LEVPTR - ward ien, bedsection, or DUZ(2)
"RTN","C9CMODNT",475,0)
 Q:SEPAR'>0
"RTN","C9CMODNT",476,0)
 N LEVEL
"RTN","C9CMODNT",477,0)
 S LEVEL=""
"RTN","C9CMODNT",478,0)
 I SEPAR=1 S LEVEL="WARD"
"RTN","C9CMODNT",479,0)
 I SEPAR=2 S LEVEL="UNIT"
"RTN","C9CMODNT",480,0)
 I SEPAR=3 S LEVEL="HOSPITAL"
"RTN","C9CMODNT",481,0)
 N WL
"RTN","C9CMODNT",482,0)
 S WL=0 F  S WL=$O(ARRACR(LEVEL,WL)) Q:WL'>0  D ;check ward rules first
"RTN","C9CMODNT",483,0)
 .S BASEDATE=+$P(ARRACR(LEVEL,WL),"^",6)
"RTN","C9CMODNT",484,0)
 .N EDATE ;event date
"RTN","C9CMODNT",485,0)
 .S EDATE=BASEDATE
"RTN","C9CMODNT",486,0)
 .I BASEDATE>0 D
"RTN","C9CMODNT",487,0)
 ..N RULETEXT
"RTN","C9CMODNT",488,0)
 ..S RULETEXT=""
"RTN","C9CMODNT",489,0)
 ..N RPOINT ;changed RPTR to RPOINT this subroutine for override coding
"RTN","C9CMODNT",490,0)
 ..S RPOINT=$P(ARRACR(LEVEL,WL),"^",4)
"RTN","C9CMODNT",491,0)
 ..I RPOINT>0 D
"RTN","C9CMODNT",492,0)
 ...N RUACT ;rule active?
"RTN","C9CMODNT",493,0)
 ...S RUACT=$P($G(^C9C(300892,RPOINT,0)),"^",2)
"RTN","C9CMODNT",494,0)
 ...I RUACT>0 D
"RTN","C9CMODNT",495,0)
 ....S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CMODNT",496,0)
 ....;begin CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CMODNT",497,0)
 ....;N OFFSET ;offset in days or hours - do not new here as it is passed by reference
"RTN","C9CMODNT",498,0)
 ....S OFFSET=0
"RTN","C9CMODNT",499,0)
 ....N FIEN
"RTN","C9CMODNT",500,0)
 ....S FIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CMODNT",501,0)
 ....I FIEN>0 D
"RTN","C9CMODNT",502,0)
 .....N RFIEN
"RTN","C9CMODNT",503,0)
 .....S RFIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CMODNT",504,0)
 .....I RFIEN>0 D
"RTN","C9CMODNT",505,0)
 ......I $F(RULETEXT,"X DAYS")>0 D
"RTN","C9CMODNT",506,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FIEN,1,RFIEN,8)),"^",1)
"RTN","C9CMODNT",507,0)
 ......I $F(RULETEXT,"X HOURS")>0 D
"RTN","C9CMODNT",508,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FIEN,1,RFIEN,9)),"^",1)
"RTN","C9CMODNT",509,0)
 ....N ABD ;ACCEPTABLE BASEDATE DELTA formatted as DAYS.HOURS
"RTN","C9CMODNT",510,0)
 ....N MABD ;mumps code
"RTN","C9CMODNT",511,0)
 ....S MABD=$G(^C9C(300892,RPOINT,7))
"RTN","C9CMODNT",512,0)
 ....;was S ABD=$P($G(^C9C(300892,RPOINT,7)),"^",1)
"RTN","C9CMODNT",513,0)
 ....I MABD'="" X MABD
"RTN","C9CMODNT",514,0)
 ....I ABD'>0 S ABD="2.2" ;default if code does not return proper value
"RTN","C9CMODNT",515,0)
 ....;end CRH JHT 2019 - change delta to mumps code
"RTN","C9CMODNT",516,0)
 ....N ABDAYS S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",517,0)
 ....N ABHOURS S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",518,0)
 ....;start X DAYS
"RTN","C9CMODNT",519,0)
 ....I $F(RULETEXT,"EVERY X DAYS FROM EVENT DATE")>0 D
"RTN","C9CMODNT",520,0)
 .....N FORMIEN
"RTN","C9CMODNT",521,0)
 .....S FORMIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CMODNT",522,0)
 .....I FORMIEN>0 D
"RTN","C9CMODNT",523,0)
 ......N RUIEN
"RTN","C9CMODNT",524,0)
 ......S RUIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CMODNT",525,0)
 ......I RUIEN>0 D
"RTN","C9CMODNT",526,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FORMIEN,1,RUIEN,8)),"^",1)
"RTN","C9CMODNT",527,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODNT",528,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODNT",529,0)
 ........I BASEDATE>0 D
"RTN","C9CMODNT",530,0)
 .........I OFFSET>0 D
"RTN","C9CMODNT",531,0)
 ..........N NUMDAYS
"RTN","C9CMODNT",532,0)
 ..........S NUMDAYS=OFFSET
"RTN","C9CMODNT",533,0)
 ..........N DSAD ;days since event date
"RTN","C9CMODNT",534,0)
 ..........S DSAD=$$FMDIFF^XLFDT(RNOW,BASEDATE,1) ;difference in days
"RTN","C9CMODNT",535,0)
 ..........N MDSAD
"RTN","C9CMODNT",536,0)
 ..........S MDSAD=DSAD#NUMDAYS
"RTN","C9CMODNT",537,0)
 ..........S BASEDATE=$$FMADD^XLFDT(RNOW\1,MDSAD)_.2359
"RTN","C9CMODNT",538,0)
 ..........I BASEDATE'=0 D
"RTN","C9CMODNT",539,0)
 ...........S RULELEVELFOUND=LEVEL
"RTN","C9CMODNT",540,0)
 ...........N C9CCHECK
"RTN","C9CMODNT",541,0)
 ...........S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODNT",542,0)
 ...........I C9CCHECK>0 D
"RTN","C9CMODNT",543,0)
 ............;check to see if there is a completed note in this range or after
"RTN","C9CMODNT",544,0)
 ............I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CMODNT",545,0)
 .............I DUEDATE<BASEDATE D
"RTN","C9CMODNT",546,0)
 ..............S DUEDATE=BASEDATE
"RTN","C9CMODNT",547,0)
 ..............S APRULE=RUIEN ;applicable rule
"RTN","C9CMODNT",548,0)
 ............I NONOTE=0 D
"RTN","C9CMODNT",549,0)
 .............;check to see if there is a completed note of this title within or after this time period
"RTN","C9CMODNT",550,0)
 .............;first check within the time period
"RTN","C9CMODNT",551,0)
 .............N LASTDATE
"RTN","C9CMODNT",552,0)
 .............S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CMODNT",553,0)
 .............I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CMODNT",554,0)
 ..............I DUEDATE<BASEDATE D
"RTN","C9CMODNT",555,0)
 ...............S APRULE=RUIEN
"RTN","C9CMODNT",556,0)
 ...............S DUEDATE=BASEDATE
"RTN","C9CMODNT",557,0)
 ....;end X DAYS
"RTN","C9CMODNT",558,0)
 ....;start X HOURS
"RTN","C9CMODNT",559,0)
 ....I $F(RULETEXT,"EVERY X HOURS FROM EVENT DATE")>0 D
"RTN","C9CMODNT",560,0)
 .....N FORMIEN
"RTN","C9CMODNT",561,0)
 .....S FORMIEN=+$P(ARRACR(LEVEL,WL),"^",1)
"RTN","C9CMODNT",562,0)
 .....I FORMIEN>0 D
"RTN","C9CMODNT",563,0)
 ......N RUIEN
"RTN","C9CMODNT",564,0)
 ......S RUIEN=+$P(ARRACR(LEVEL,WL),"^",2)
"RTN","C9CMODNT",565,0)
 ......I RUIEN>0 D
"RTN","C9CMODNT",566,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,FORMIEN,1,RUIEN,9)),"^",1)
"RTN","C9CMODNT",567,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODNT",568,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,,OFFSET)
"RTN","C9CMODNT",569,0)
 ........I BASEDATE>0 D
"RTN","C9CMODNT",570,0)
 .........I OFFSET>0 D
"RTN","C9CMODNT",571,0)
 ..........N NUMHOURS
"RTN","C9CMODNT",572,0)
 ..........S NUMHOURS=OFFSET
"RTN","C9CMODNT",573,0)
 ..........N SSAD ;seconds since event date
"RTN","C9CMODNT",574,0)
 ..........S SSAD=$$FMDIFF^XLFDT(RNOW,EDATE,2) ;difference in seconds
"RTN","C9CMODNT",575,0)
 ..........I SSAD>0 D
"RTN","C9CMODNT",576,0)
 ...........N HSAD ;hours since event date
"RTN","C9CMODNT",577,0)
 ...........S HSAD=SSAD\3600
"RTN","C9CMODNT",578,0)
 ...........N MHSAD
"RTN","C9CMODNT",579,0)
 ...........S MHSAD=HSAD#NUMHOURS ;how many whole hours till next due time
"RTN","C9CMODNT",580,0)
 ...........S BASEDATE=$$FMADD^XLFDT(EDATE,,HSAD+MHSAD) ;next due time
"RTN","C9CMODNT",581,0)
 ...........I BASEDATE'=0 D
"RTN","C9CMODNT",582,0)
 ............S RULELEVELFOUND=LEVEL
"RTN","C9CMODNT",583,0)
 ............N C9CCHECK
"RTN","C9CMODNT",584,0)
 ............S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODNT",585,0)
 ............I C9CCHECK>0 D
"RTN","C9CMODNT",586,0)
 .............;check to see if there is a completed note in this range or after
"RTN","C9CMODNT",587,0)
 .............I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CMODNT",588,0)
 ..............I DUEDATE<BASEDATE D
"RTN","C9CMODNT",589,0)
 ...............S DUEDATE=BASEDATE
"RTN","C9CMODNT",590,0)
 ...............S APRULE=RUIEN ;applicable rule
"RTN","C9CMODNT",591,0)
 .............I NONOTE=0 D
"RTN","C9CMODNT",592,0)
 ..............;check to see if there is a completed note of this title within or after this time period
"RTN","C9CMODNT",593,0)
 ..............;first check within the time period
"RTN","C9CMODNT",594,0)
 ..............N LASTDATE
"RTN","C9CMODNT",595,0)
 ..............S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CMODNT",596,0)
 ..............I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CMODNT",597,0)
 ...............I DUEDATE<BASEDATE D
"RTN","C9CMODNT",598,0)
 ................S APRULE=RUIEN
"RTN","C9CMODNT",599,0)
 ................S DUEDATE=BASEDATE
"RTN","C9CMODNT",600,0)
 ....;end X HOURS 
"RTN","C9CMODNT",601,0)
 Q
"RTN","C9CMODNT",602,0)
NAFWUH(SEPAR,LEVPTR,APRULE,RULELEVELFOUND,DUEDATE,ADATE,NONOTE,TITLIEN,REIEN,OFST,PTONLY,CLEVEL) ;CRH JHT 2019 - added TITLIEN and REIEN and OFST for override coding ;CRH JHT 2020 - added PTONLY to allow pass-through only processing ;CRH JHT 2020 - added CLEVEL for cohort level mar 3,2020
"RTN","C9CMODNT",603,0)
 ;SEPAR - 1 for ward, 2 for unit, 3 for hospital
"RTN","C9CMODNT",604,0)
 ;LEVPTR - ward ien, bedsection, or DUZ(2)
"RTN","C9CMODNT",605,0)
 Q:SEPAR'>0
"RTN","C9CMODNT",606,0)
 N LEVEL
"RTN","C9CMODNT",607,0)
 S LEVEL=""
"RTN","C9CMODNT",608,0)
 I SEPAR=1 S LEVEL="WARD"
"RTN","C9CMODNT",609,0)
 I SEPAR=2 S LEVEL="UNIT"
"RTN","C9CMODNT",610,0)
 I SEPAR=3 S LEVEL="HOSPITAL"
"RTN","C9CMODNT",611,0)
 ;----------------------
"RTN","C9CMODNT",612,0)
 N WF 
"RTN","C9CMODNT",613,0)
 S WF=0 F  S WF=$O(^C9C(300890,REIEN,SEPAR,WF)) Q:WF'>0  D
"RTN","C9CMODNT",614,0)
 .;check each formula included to see if LEVPTR included
"RTN","C9CMODNT",615,0)
 .I $O(^C9C(300890,REIEN,SEPAR,WF,2,"B",LEVPTR,0))>0 D ;LEVPTR included in this formula
"RTN","C9CMODNT",616,0)
 ..N C9CCHECK ;this will be set as 0 or 1 from the mumps code fields in C9C RULES file
"RTN","C9CMODNT",617,0)
 ..S C9CCHECK=0
"RTN","C9CMODNT",618,0)
 ..N BASEDATE
"RTN","C9CMODNT",619,0)
 ..S BASEDATE=0
"RTN","C9CMODNT",620,0)
 ..N PREVADAYS
"RTN","C9CMODNT",621,0)
 ..S PREVADAYS=0
"RTN","C9CMODNT",622,0)
 ..N PREVAHOURS
"RTN","C9CMODNT",623,0)
 ..S PREVAHOURS=0
"RTN","C9CMODNT",624,0)
 ..N RTRACK ;track whether to keep processing rules in this formula ;mar 3,2020
"RTN","C9CMODNT",625,0)
 ..S RTRACK=0 ;mar 3,2020
"RTN","C9CMODNT",626,0)
 ..I CLEVEL=0 S RTRACK=1 ;there is no cohort defined, process all ;mar 3,2020
"RTN","C9CMODNT",627,0)
 ..I CLEVEL=1 S RTRACK=2 ;in cohort, process up to, but not including first pass-through ;mar 3,2020
"RTN","C9CMODNT",628,0)
 ..I CLEVEL=2 I PTONLY=1 S RTRACK=3 ;not in cohort, PTONLY checked, start processing pass-throughs ;mar 3,2020
"RTN","C9CMODNT",629,0)
 ..I CLEVEL=2 I PTONLY=0 S RTRACK=0 ;not in cohort, PTONLY not checked, process nothing ;mar 3,2020
"RTN","C9CMODNT",630,0)
 ..;RTRACK: 0=stop no matter what, 1=process no matter what, 2=process up to but not including first pass-through, 3=stop until next pass-through, 4=process all rules until next pass-through ;mar 3,2020
"RTN","C9CMODNT",631,0)
 ..N FR ;formula rule
"RTN","C9CMODNT",632,0)
 ..S FR=0 F  S FR=$O(^C9C(300890,REIEN,SEPAR,WF,1,FR)) Q:((FR'>0)!(C9CCHECK>0)!(RTRACK=0))  D ;for each rule in the formula ;added RTRACK mar 3,2020
"RTN","C9CMODNT",633,0)
 ...N RPOINT ;rule pointer
"RTN","C9CMODNT",634,0)
 ...S RPOINT=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,0)),"^",1)
"RTN","C9CMODNT",635,0)
 ...I RPOINT>0 D
"RTN","C9CMODNT",636,0)
 ....N RTEXT
"RTN","C9CMODNT",637,0)
 ....S RTEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CMODNT",638,0)
 ....I RTEXT'="" I $F(RTEXT,"PASS-THROUGH REMINDER")>0 I RTRACK=2 S RTRACK=0 ;found the first pass-through, so stop processing all rules ;mar 3,2020
"RTN","C9CMODNT",639,0)
 ....I RTEXT'="" I $F(RTEXT,"PASS-THROUGH REMINDER")>0 I RTRACK=4 S RTRACK=0 ;finished processing rules after resolved pass-through ;mar 3,2020
"RTN","C9CMODNT",640,0)
 ....I RTEXT'="" I (RTRACK=1)!(RTRACK=2)!(RTRACK=4)!((RTRACK=3)&($F(RTEXT,"PASS-THROUGH REMINDER")>0)) D ;mar 5,2020 more complex reminder processing
"RTN","C9CMODNT",641,0)
 .....;begin CRH JHT 2019 - change delta to mumps code for override coding
"RTN","C9CMODNT",642,0)
 .....N OFFSET
"RTN","C9CMODNT",643,0)
 .....S OFFSET=0
"RTN","C9CMODNT",644,0)
 .....I $F(RTEXT,"X DAYS")>0 D
"RTN","C9CMODNT",645,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODNT",646,0)
 .....I $F(RTEXT,"X HOURS")>0 D
"RTN","C9CMODNT",647,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODNT",648,0)
 .....N ABD ;ACCEPTABLE BASEDATE DELTA formatted as DAYS.HOURS
"RTN","C9CMODNT",649,0)
 .....N MABD ;mumps code
"RTN","C9CMODNT",650,0)
 .....S MABD=$G(^C9C(300892,RPOINT,7))
"RTN","C9CMODNT",651,0)
 .....;was S ABD=$P($G(^C9C(300892,RPOINT,7)),"^",1)
"RTN","C9CMODNT",652,0)
 .....I MABD'="" X MABD
"RTN","C9CMODNT",653,0)
 .....I ABD'>0 S ABD="2.2" ;default if code does not return proper value
"RTN","C9CMODNT",654,0)
 .....;end CRH JHT 2019 - change delta to mumps code
"RTN","C9CMODNT",655,0)
 .....N ABDAYS S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",656,0)
 .....N ABHOURS S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",657,0)
 .....N ABMINS
"RTN","C9CMODNT",658,0)
 .....S ABMINS=0
"RTN","C9CMODNT",659,0)
 .....S BASEDATE=0
"RTN","C9CMODNT",660,0)
 .....;begin reminder pass-through logic
"RTN","C9CMODNT",661,0)
 .....I $F(RTEXT,"PASS-THROUGH REMINDER")>0 D
"RTN","C9CMODNT",662,0)
 ......S BASEDATE=0
"RTN","C9CMODNT",663,0)
 ......I $G(TITLIEN)>0 D
"RTN","C9CMODNT",664,0)
 .......N REMIEN
"RTN","C9CMODNT",665,0)
 .......S REMIEN=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,10)),"^",1)
"RTN","C9CMODNT",666,0)
 .......N DEFARR
"RTN","C9CMODNT",667,0)
 .......I REMIEN'>0 I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CMODNT",668,0)
 .......I REMIEN>0 D
"RTN","C9CMODNT",669,0)
 ........N DEFNAME
"RTN","C9CMODNT",670,0)
 ........S DEFNAME=$P($G(^PXD(811.9,REMIEN,0)),"^",3) ;has to be print name, not name
"RTN","C9CMODNT",671,0)
 ........I DEFNAME="" I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CMODNT",672,0)
 ........I DEFNAME'="" D
"RTN","C9CMODNT",673,0)
 .........N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CMODNT",674,0)
 .........S PXRMDEBG=1
"RTN","C9CMODNT",675,0)
 .........N DATE ;must be newed but not populated to return current value
"RTN","C9CMODNT",676,0)
 .........D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CMODNT",677,0)
 .........N FIEVAL
"RTN","C9CMODNT",678,0)
 .........D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CMODNT",679,0)
 .........I $G(PXRMID)="" I RTRACK=4 S RTRACK=3 ;this one is bogus for some reason ;mar 3,2020
"RTN","C9CMODNT",680,0)
 .........I $G(PXRMID)'="" D
"RTN","C9CMODNT",681,0)
 ..........N RESOLU,COHORT
"RTN","C9CMODNT",682,0)
 ..........S RESOLU=+$P($G(^TMP(PXRMID,$J,REMIEN,"RESOLUTION LOGIC")),"^",1)
"RTN","C9CMODNT",683,0)
 ..........S COHORT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CMODNT",684,0)
 ..........K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CMODNT",685,0)
 ..........I (COHORT=0) I (RTRACK=4) S RTRACK=3 ;skip to next pass-through ;mar 3,2020
"RTN","C9CMODNT",686,0)
 ..........I (COHORT=1) D
"RTN","C9CMODNT",687,0)
 ...........I RESOLU=1 I ((RTRACK=3)!(RTRACK=4)) S RTRACK=0 ;process no more rules ;mar 3,2020
"RTN","C9CMODNT",688,0)
 ...........I RESOLU=0 I ((RTRACK=3)!(RTRACK=4)) S RTRACK=2 ;process until next pass-through ;mar 3,2020
"RTN","C9CMODNT",689,0)
 ...........I CLEVEL=0 D ;only allow this to set a date if no reminder cohort is set ;mar 9,2020
"RTN","C9CMODNT",690,0)
 ............N RSTATUS
"RTN","C9CMODNT",691,0)
 ............S RSTATUS=$P($G(^TMP("PXRHM",$J,REMIEN,DEFNAME)),"^",1)
"RTN","C9CMODNT",692,0)
 ............N RDATEDUE
"RTN","C9CMODNT",693,0)
 ............S RDATEDUE=$P($G(^TMP("PXRHM",$J,REMIEN,DEFNAME)),"^",2)
"RTN","C9CMODNT",694,0)
 ............I RSTATUS="N/A" S BASEDATE=0
"RTN","C9CMODNT",695,0)
 ............E  I (((RSTATUS="DUE SOON")!(RESOLU=0))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODNT",696,0)
 ............E  I (((RSTATUS="DUE SOON")!(RESOLU=0))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CMODNT",697,0)
 ............E  I (((RSTATUS="DUE SOON")&(RESOLU=1))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODNT",698,0)
 ............E  I (((RSTATUS="DUE SOON")&(RESOLU=1))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CMODNT",699,0)
 ............E  I (((RSTATUS="DUE NOW")&(RESOLU=1))&(RDATEDUE'>0)) S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODNT",700,0)
 ............E  I (((RSTATUS="DUE NOW")&(RESOLU=1))&(RDATEDUE>0)) S BASEDATE=RDATEDUE
"RTN","C9CMODNT",701,0)
 ...........K ^TMP("PXRHM",$J,REMIEN)
"RTN","C9CMODNT",702,0)
 ...........K FIEVAL ;needs to be new each time
"RTN","C9CMODNT",703,0)
 .....;end reminder pass-through logic
"RTN","C9CMODNT",704,0)
 .....;start due now logic
"RTN","C9CMODNT",705,0)
 .....I RTEXT="DUE NOW" D
"RTN","C9CMODNT",706,0)
 ......S BASEDATE=$P($$NOW^XLFDT,".",1)
"RTN","C9CMODNT",707,0)
 .....;end due now logic
"RTN","C9CMODNT",708,0)
 .....;start annually based on admission day
"RTN","C9CMODNT",709,0)
 .....I $F(RTEXT,"ANNUALLY BASED ON ADMISSION DAY")>0 D
"RTN","C9CMODNT",710,0)
 ......S BASEDATE=ADATE
"RTN","C9CMODNT",711,0)
 ......I ($F(RTEXT,"X DAYS")>0) D
"RTN","C9CMODNT",712,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODNT",713,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODNT",714,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODNT",715,0)
 ........I OFFSET>(ABDAYS+2) D
"RTN","C9CMODNT",716,0)
 .........I PREVADAYS=0 D ;if this is the first X DAYS rule for this title/patient
"RTN","C9CMODNT",717,0)
 ..........S PREVADAYS=OFFSET
"RTN","C9CMODNT",718,0)
 ..........S ABDAYS=OFFSET+2 ;we need to cover two days prior to admission as well
"RTN","C9CMODNT",719,0)
 ......I ABD="" S ABD="14.0"
"RTN","C9CMODNT",720,0)
 ......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",721,0)
 ......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",722,0)
 ......N YY S YY=YEAR ;$E(BASEDATE,2,3)
"RTN","C9CMODNT",723,0)
 ......N CC S CC=CENTURY ;$E(BASEDATE,1,1)
"RTN","C9CMODNT",724,0)
 ......N MONT S MONT=$E(BASEDATE,4,5)
"RTN","C9CMODNT",725,0)
 ......N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CMODNT",726,0)
 ......N THEREST S THEREST=".1200" ;noon for this rule
"RTN","C9CMODNT",727,0)
 ......I ((($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))>(CENTURY_YEAR_DHMS))&(($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))<(CENTURY_YEAR_DHMS))) D ;are we currently in this years cycle ;mar 11,2020
"RTN","C9CMODNT",728,0)
 .......S BASEDATE=CENTURY_YEAR_THEREST ;mar 11,2020
"RTN","C9CMODNT",729,0)
 ......I (($$FMADD^XLFDT(CENTURY_YEAR_MONT_DD_THEREST,ABDAYS,ABHOURS))<(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds
"RTN","C9CMODNT",730,0)
 .......S BASEDATE=CENTURY_YEAR_MONT_DD_THEREST ;try this year
"RTN","C9CMODNT",731,0)
 .......S YY=YY+1
"RTN","C9CMODNT",732,0)
 .......I YY=100 S YY="00" S CC=CC+1
"RTN","C9CMODNT",733,0)
 .......I (($$FMADD^XLFDT(CC_YY_MONT_DD_THEREST,-ABDAYS,-ABHOURS)))<RNOW D ;are we in next years cycle yet ;JHT 7/1/2019
"RTN","C9CMODNT",734,0)
 ........S BASEDATE=CC_YY_MONT_DD_THEREST ;set to next years cycle
"RTN","C9CMODNT",735,0)
 ......I (($$FMADD^XLFDT(CENTURY_YEAR_MONT_DD_THEREST,-ABDAYS,-ABHOURS))>(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we in this year's cycle? ;mar 6,2020
"RTN","C9CMODNT",736,0)
 .......;if not, try last year ;mar 6,2020
"RTN","C9CMODNT",737,0)
 .......S YY=YY-1 ;mar 6,2020
"RTN","C9CMODNT",738,0)
 .......I YY=-1 S YY=99 S CC=CC-1 ;mar 6,2020
"RTN","C9CMODNT",739,0)
 .......S BASEDATE=CC_YY_MONT_DD_THEREST ;set to last year's cycle ;mar 6,2020
"RTN","C9CMODNT",740,0)
 ......I (BASEDATE\1)'>(ADATE\1) S BASEDATE=0 ;not due same day as admission in this case
"RTN","C9CMODNT",741,0)
 .....;end annually based on admission day
"RTN","C9CMODNT",742,0)
 .....I $F(RTEXT,"ADMIT DATE")>0 D
"RTN","C9CMODNT",743,0)
 ......S BASEDATE=ADATE
"RTN","C9CMODNT",744,0)
 ......I (($F(RTEXT,"X DAYS")>0)&($F(RTEXT,"EVERY")'>0)) D
"RTN","C9CMODNT",745,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODNT",746,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODNT",747,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODNT",748,0)
 ........I OFFSET>(ABDAYS+2) D
"RTN","C9CMODNT",749,0)
  ........I PREVADAYS=0 D ;july 12, 2019
"RTN","C9CMODNT",750,0)
 .........S PREVADAYS=OFFSET ;july 12, 2019
"RTN","C9CMODNT",751,0)
 .........S ABDAYS=OFFSET+2 ;we need to cover two days prior to admission as well ;july 12, 2019
"RTN","C9CMODNT",752,0)
 ......;start annually
"RTN","C9CMODNT",753,0)
 ......I $F(RTEXT,"ANNUALLY")>0 D
"RTN","C9CMODNT",754,0)
 .......I ABD="" S ABD="14.0"
"RTN","C9CMODNT",755,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",756,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",757,0)
 .......N YY S YY=YEAR ;$E(BASEDATE,2,3) ;JHT 7/1/2019
"RTN","C9CMODNT",758,0)
 .......N CC S CC=CENTURY ;$E(BASEDATE,1,1) ;JHT 7/1/2019
"RTN","C9CMODNT",759,0)
 .......N THEREST S THEREST=$E(BASEDATE,4,99)
"RTN","C9CMODNT",760,0)
 .......I ((($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))>(CENTURY_YEAR_DHMS))&(($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))<(CENTURY_YEAR_DHMS))) D ;are we currently in this years cycle ;mar 11,2020
"RTN","C9CMODNT",761,0)
 ........S BASEDATE=CENTURY_YEAR_THEREST ;mar 11,2020
"RTN","C9CMODNT",762,0)
 .......I (($$FMADD^XLFDT(CENTURY_YEAR_THEREST,ABDAYS,ABHOURS))<(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we past this year's cycle? ;added mar 6,2020
"RTN","C9CMODNT",763,0)
 ........S BASEDATE=CENTURY_YEAR_THEREST ;try this year
"RTN","C9CMODNT",764,0)
 ........S YY=YY+1
"RTN","C9CMODNT",765,0)
 ........I YY=100 S YY="00" S CC=CC+1
"RTN","C9CMODNT",766,0)
 ........I (($$FMADD^XLFDT(CC_YY_THEREST,-ABDAYS,-ABHOURS)))<RNOW D ;are we in next years cycle yet ;JHT 7/1/2019
"RTN","C9CMODNT",767,0)
 .........S BASEDATE=CC_YY_THEREST ;set to next years cycle
"RTN","C9CMODNT",768,0)
 .......I (($$FMADD^XLFDT(CENTURY_YEAR_THEREST,-ABDAYS,-ABHOURS))>(CENTURY_YEAR_DHMS)) D ;DHMS=days hours minutes seconds ;are we in this year's cycle? ;mar 6,2020
"RTN","C9CMODNT",769,0)
 ........;if not, try last year ;mar 6,2020
"RTN","C9CMODNT",770,0)
 ........S YY=YY-1 ;mar 6,2020
"RTN","C9CMODNT",771,0)
 ........I YY=-1 S YY=99 S CC=CC-1 ;mar 6,2020
"RTN","C9CMODNT",772,0)
 ........S BASEDATE=CC_YY_THEREST ;set to last year's cycle ;mar 6,2020
"RTN","C9CMODNT",773,0)
 .......I BASEDATE'>ADATE S BASEDATE=0 ;not due same day as admission in this case
"RTN","C9CMODNT",774,0)
 ......;end annually
"RTN","C9CMODNT",775,0)
 ......;start each month based on admit date starting month 3 skip each month 12
"RTN","C9CMODNT",776,0)
 ......I $F(RTEXT,"EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12") D
"RTN","C9CMODNT",777,0)
 .......I $$FMADD^XLFDT(ADATE,82)<RNOW D ;start on the third month but leave some room prior to due
"RTN","C9CMODNT",778,0)
 ........I ABD="" S ABD="2.0"
"RTN","C9CMODNT",779,0)
 ........S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",780,0)
 ........S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",781,0)
 ........N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CMODNT",782,0)
 ........N HMS S HMS=$P(RNOW,".",2)
"RTN","C9CMODNT",783,0)
 ........N THEREST S THEREST=$P(BASEDATE,".",2)
"RTN","C9CMODNT",784,0)
 ........S THEREST="1200" ;changed during override coding - noon for this rule
"RTN","C9CMODNT",785,0)
 ........N MONT S MONT=$E(RNOW,4,5)
"RTN","C9CMODNT",786,0)
 ........N MOA ;month of admission
"RTN","C9CMODNT",787,0)
 ........S MOA=$E(ADATE,4,5)
"RTN","C9CMODNT",788,0)
 ........;start by checking the current month
"RTN","C9CMODNT",789,0)
 ........N YEA S YEA=YEAR
"RTN","C9CMODNT",790,0)
 ........N CEN S CEN=CENTURY
"RTN","C9CMODNT",791,0)
 ........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODNT",792,0)
 ........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",793,0)
 ........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",794,0)
 ........;begin CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODNT",795,0)
 ........I ((MONT=MOA)!($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODNT",796,0)
 .........I ((MONT=MOA)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODNT",797,0)
 ..........;try next month first
"RTN","C9CMODNT",798,0)
 ..........S MONT=MONT+1
"RTN","C9CMODNT",799,0)
 ..........I MONT=13 S MONT=1 S YEA=YEA+1 I YEA=100 S YEA=0 S CEN=CEN+1
"RTN","C9CMODNT",800,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODNT",801,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODNT",802,0)
 ..........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",803,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",804,0)
 .........I ($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW) D
"RTN","C9CMODNT",805,0)
 ..........;not in this or next month's cycle yet, so try last month
"RTN","C9CMODNT",806,0)
 ..........S MONT=MONT-1
"RTN","C9CMODNT",807,0)
 ..........I MONT=0 D
"RTN","C9CMODNT",808,0)
 ...........S MONT=12
"RTN","C9CMODNT",809,0)
 ...........S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODNT",810,0)
 ............S YEA=99 S CEN=CEN-1
"RTN","C9CMODNT",811,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODNT",812,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODNT",813,0)
 ..........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODNT",814,0)
 ..........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",815,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",816,0)
 ..........I (MONT=MOA) D
"RTN","C9CMODNT",817,0)
 ...........;go to the previous month
"RTN","C9CMODNT",818,0)
 ...........S MONT=MONT-1
"RTN","C9CMODNT",819,0)
 ...........I MONT=0 D
"RTN","C9CMODNT",820,0)
 ............S MONT=12
"RTN","C9CMODNT",821,0)
 ............S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODNT",822,0)
 .............S YEA=99 S CEN=CEN-1
"RTN","C9CMODNT",823,0)
 ...........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODNT",824,0)
 ...........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODNT",825,0)
 ...........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODNT",826,0)
 ...........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",827,0)
 ...........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",828,0)
 .........;end CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODNT",829,0)
 ......;end each month based on admit date starting month 3 skip each month 12
"RTN","C9CMODNT",830,0)
 ......;start monthly
"RTN","C9CMODNT",831,0)
 ......I $F(RTEXT,"MONTHLY")>0 D
"RTN","C9CMODNT",832,0)
 .......I ABD="" S ABD="2.0"
"RTN","C9CMODNT",833,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",834,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",835,0)
 .......N DD S DD=$E(BASEDATE,6,7)
"RTN","C9CMODNT",836,0)
 .......N HMS S HMS=$P(RNOW,".",2)
"RTN","C9CMODNT",837,0)
 .......N THEREST S THEREST=$P(BASEDATE,".",2)
"RTN","C9CMODNT",838,0)
 .......N MONT S MONT=$E(RNOW,4,5)
"RTN","C9CMODNT",839,0)
 .......N MOA ;month of admission
"RTN","C9CMODNT",840,0)
 .......S MOA=$E(ADATE,4,5)
"RTN","C9CMODNT",841,0)
 .......;start by checking the current month
"RTN","C9CMODNT",842,0)
 .......N YEA S YEA=YEAR
"RTN","C9CMODNT",843,0)
 .......N CEN S CEN=CENTURY
"RTN","C9CMODNT",844,0)
 .......; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODNT",845,0)
 .......I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",846,0)
 .......S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",847,0)
 .......;begin CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODNT",848,0)
 .......I ((($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA))!($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW)!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODNT",849,0)
 ........I ((($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA))!($$FMADD^XLFDT(BASEDATE,ABDAYS,ABHOURS)<RNOW)) D
"RTN","C9CMODNT",850,0)
 .........;try next month first
"RTN","C9CMODNT",851,0)
 .........S MONT=MONT+1
"RTN","C9CMODNT",852,0)
 .........I MONT=13 S MONT=1 S YEA=YEA+1 I YEA=100 S YEA=0 S CEN=CEN+1
"RTN","C9CMODNT",853,0)
 .........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODNT",854,0)
 .........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODNT",855,0)
 .........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",856,0)
 .........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",857,0)
 .........I ($$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS)>RNOW) D
"RTN","C9CMODNT",858,0)
 ..........;not in this or next month's cycle yet, so try last month
"RTN","C9CMODNT",859,0)
 ..........S MONT=MONT-1
"RTN","C9CMODNT",860,0)
 ..........I MONT=0 D
"RTN","C9CMODNT",861,0)
 ...........S MONT=12
"RTN","C9CMODNT",862,0)
 ...........S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODNT",863,0)
 ............S YEA=99 S CEN=CEN-1
"RTN","C9CMODNT",864,0)
 ..........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODNT",865,0)
 ..........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODNT",866,0)
 ..........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODNT",867,0)
 ..........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",868,0)
 ..........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",869,0)
 ..........I (($F(RTEXT,"SKIP MONTH 12"))&(MONT=MOA)) D
"RTN","C9CMODNT",870,0)
 ...........;go to the previous month
"RTN","C9CMODNT",871,0)
 ...........S MONT=MONT-1
"RTN","C9CMODNT",872,0)
 ...........I MONT=0 D
"RTN","C9CMODNT",873,0)
 ............S MONT=12
"RTN","C9CMODNT",874,0)
 ............S YEA=YEA-1 I YEA=-1 D
"RTN","C9CMODNT",875,0)
 .............S YEA=99 S CEN=CEN-1
"RTN","C9CMODNT",876,0)
 ...........I $L(YEA)=1 S YEA="0"_YEA
"RTN","C9CMODNT",877,0)
 ...........I $L(MONT)=1 S MONT="0"_MONT
"RTN","C9CMODNT",878,0)
 ...........; Following line added by RMS to fix uncaught date issues 20191015
"RTN","C9CMODNT",879,0)
 ...........I DD>28 S DD=$$FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years
"RTN","C9CMODNT",880,0)
 ...........S BASEDATE=CEN_YEA_MONT_DD_"."_THEREST
"RTN","C9CMODNT",881,0)
 ...........;end CRH JHT 2019 - bug fix during override coding
"RTN","C9CMODNT",882,0)
 ......;end monthly
"RTN","C9CMODNT",883,0)
 ......;start weekly
"RTN","C9CMODNT",884,0)
 ......;start weekly
"RTN","C9CMODNT",885,0)
 ......I $F(RTEXT,"WEEKLY")>0 D
"RTN","C9CMODNT",886,0)
 .......I ABD="" S ABD="2.0"
"RTN","C9CMODNT",887,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",888,0)
 .......S ABHOURS=23 ;in this case we allow the full two days before ;august 1
"RTN","C9CMODNT",889,0)
 .......S ABMINS=59 ;august 1
"RTN","C9CMODNT",890,0)
 .......I BASEDATE>0 D
"RTN","C9CMODNT",891,0)
 ........N NUMDAYS
"RTN","C9CMODNT",892,0)
 ........S NUMDAYS=7
"RTN","C9CMODNT",893,0)
 ........N DSAD
"RTN","C9CMODNT",894,0)
 ........S DSAD=$$FMDIFF^XLFDT(RNOW,BASEDATE,1) ;difference in days
"RTN","C9CMODNT",895,0)
 ........I DSAD>0 D
"RTN","C9CMODNT",896,0)
 .........N MDSAD
"RTN","C9CMODNT",897,0)
 .........S MDSAD=DSAD#NUMDAYS
"RTN","C9CMODNT",898,0)
 .........S BASEDATE=$$FMADD^XLFDT(RNOW\1,7-MDSAD)_.2359
"RTN","C9CMODNT",899,0)
 .........I ((DSAD>7)&((MDSAD=0)!(MDSAD>ABD))) D ;still within last week's cycle
"RTN","C9CMODNT",900,0)
 ..........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-7)
"RTN","C9CMODNT",901,0)
 .........I $F(RTEXT,"SKIP ADMISSION ANNIVERSAY WEEK")>0 D
"RTN","C9CMODNT",902,0)
 ..........N YY S YY=YEAR
"RTN","C9CMODNT",903,0)
 ..........N CC S CC=CENTURY
"RTN","C9CMODNT",904,0)
 ..........N THEREST S THEREST=$E(BASEDATE,4,99)
"RTN","C9CMODNT",905,0)
 ..........N ANNDATE
"RTN","C9CMODNT",906,0)
 ..........S ANNDATE=CENTURY_YEAR_THEREST ;admission anniversary date
"RTN","C9CMODNT",907,0)
 ..........I ((ANNDATE>$$FMADD^XLFDT(BASEDATE,-ABDAYS))&(ANNDATE<$$FMADD^XLFDT(BASEDATE,ABDAYS))) D
"RTN","C9CMODNT",908,0)
 ...........;skip this week since it is the anniversary week
"RTN","C9CMODNT",909,0)
 ...........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-7) ;go to the previous week if this is anniversary week
"RTN","C9CMODNT",910,0)
 ......;end weekly
"RTN","C9CMODNT",911,0)
 ......I (RULELEVELFOUND="")&(($F(RTEXT,"X HOURS")>0)&($F(RTEXT,"EVERY")'>0)) D
"RTN","C9CMODNT",912,0)
 .......I ABD="" S ABD="0.8"
"RTN","C9CMODNT",913,0)
 .......S ABDAYS=+$P(ABD,".",1)
"RTN","C9CMODNT",914,0)
 .......S ABHOURS=+$P(ABD,".",2)
"RTN","C9CMODNT",915,0)
 .......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODNT",916,0)
 .......I OFFSET>(ABHOURS+48) D
"RTN","C9CMODNT",917,0)
 ........I PREVAHOURS=0 D ;july 12, 2019
"RTN","C9CMODNT",918,0)
 .........S PREVAHOURS=OFFSET ;july 12, 2019
"RTN","C9CMODNT",919,0)
 .........S ABHOURS=OFFSET+48 ;we need to cover two days prior to admission as well ;july 12, 2019
"RTN","C9CMODNT",920,0)
 .......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODNT",921,0)
 ........S BASEDATE=$$FMADD^XLFDT(BASEDATE,,OFFSET)
"RTN","C9CMODNT",922,0)
 .....;start every X hours based on admit date
"RTN","C9CMODNT",923,0)
 .....I RTEXT="EVERY X HOURS BASED ON ADMIT DATE" D
"RTN","C9CMODNT",924,0)
 ......S BASEDATE=$G(ADATE)
"RTN","C9CMODNT",925,0)
 ......I BASEDATE>0 D
"RTN","C9CMODNT",926,0)
 .......N NUMHOURS
"RTN","C9CMODNT",927,0)
 .......S NUMHOURS=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1)
"RTN","C9CMODNT",928,0)
 .......I NUMHOURS>0 D
"RTN","C9CMODNT",929,0)
 ........N SSAD ;seconds since admit date
"RTN","C9CMODNT",930,0)
 ........S SSAD=$$FMDIFF^XLFDT(RNOW,ADATE,2) ;difference in seconds
"RTN","C9CMODNT",931,0)
 ........I SSAD>0 D
"RTN","C9CMODNT",932,0)
 .........N HSAD ;hours since admit date
"RTN","C9CMODNT",933,0)
 .........S HSAD=SSAD\3600
"RTN","C9CMODNT",934,0)
 .........N MHSAD
"RTN","C9CMODNT",935,0)
 .........S MHSAD=HSAD#NUMHOURS ;how many whole hours till next due time
"RTN","C9CMODNT",936,0)
 .........S BASEDATE=$$FMADD^XLFDT(ADATE,,HSAD+MHSAD) ;next due time
"RTN","C9CMODNT",937,0)
 .....;end every X hours based on admit date
"RTN","C9CMODNT",938,0)
 .....;start CRH JHT 2019 new rules during override logic coding
"RTN","C9CMODNT",939,0)
 .....;start ONE TIME - ADMISSION DAY PLUS X DAYS
"RTN","C9CMODNT",940,0)
 .....I RTEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CMODNT",941,0)
 ......S BASEDATE=ADATE
"RTN","C9CMODNT",942,0)
 ......S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODNT",943,0)
 ......I ((BASEDATE>0)&(OFFSET>0)) D
"RTN","C9CMODNT",944,0)
 .......S BASEDATE=$$FMADD^XLFDT(BASEDATE,OFFSET)
"RTN","C9CMODNT",945,0)
 .......I BASEDATE>0 S BASEDATE=(BASEDATE\1)_".1200" ;set due time to noon
"RTN","C9CMODNT",946,0)
 .......;will have to set overdue logic to offset plus 12 hours to give the whole day
"RTN","C9CMODNT",947,0)
 .....;end ONE TIME - ADMISSION DAY PLUS X DAYS
"RTN","C9CMODNT",948,0)
 .....;end CRH JHT 2019 new rules during override logic coding
"RTN","C9CMODNT",949,0)
 .....;start every X days based on admit date
"RTN","C9CMODNT",950,0)
 .....I RTEXT="EVERY X DAYS BASED ON ADMIT DATE" D
"RTN","C9CMODNT",951,0)
 ......S BASEDATE=$G(ADATE)
"RTN","C9CMODNT",952,0)
 ......I BASEDATE>0 D
"RTN","C9CMODNT",953,0)
 .......N NUMDAYS
"RTN","C9CMODNT",954,0)
 .......S NUMDAYS=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1)
"RTN","C9CMODNT",955,0)
 .......I NUMDAYS>0 D
"RTN","C9CMODNT",956,0)
 ........N DSAD ;days since admit date
"RTN","C9CMODNT",957,0)
 ........S DSAD=$$FMDIFF^XLFDT(RNOW,BASEDATE,1) ;difference in days
"RTN","C9CMODNT",958,0)
 ........I DSAD>0 D
"RTN","C9CMODNT",959,0)
 .........N MDSAD
"RTN","C9CMODNT",960,0)
 .........S MDSAD=DSAD#NUMDAYS
"RTN","C9CMODNT",961,0)
 .........S BASEDATE=$$FMADD^XLFDT(RNOW\1,MDSAD)_.2359
"RTN","C9CMODNT",962,0)
 .........S ABHOURS=23 ;august 1
"RTN","C9CMODNT",963,0)
 .........S ABMINS=59 ;august 1
"RTN","C9CMODNT",964,0)
 .....;end every X days based on admit date
"RTN","C9CMODNT",965,0)
 .....I (RTEXT="DATE OF YEAR") D
"RTN","C9CMODNT",966,0)
 ......;use CENTURY and YEAR from above
"RTN","C9CMODNT",967,0)
 ......S BASEDATE=CENTURY_YEAR_$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,3)),"^",1)
"RTN","C9CMODNT",968,0)
 .....;start DAILY AT 0830
"RTN","C9CMODNT",969,0)
 .....I (RTEXT="DAILY AT 0830") D
"RTN","C9CMODNT",970,0)
 ......S BASEDATE=$P(RNOW,".",1)_".0830"
"RTN","C9CMODNT",971,0)
 .....;end DAILY AT 0830
"RTN","C9CMODNT",972,0)
 .....;start DAY OF WEEK
"RTN","C9CMODNT",973,0)
 .....I (RTEXT="DAY OF WEEK") D
"RTN","C9CMODNT",974,0)
 ......N NDOW S NDOW=$$DOW^XLFDT(RNOW)
"RTN","C9CMODNT",975,0)
 ......I NDOW'="" D
"RTN","C9CMODNT",976,0)
 .......N DOW S DOW=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,5)),"^",1)
"RTN","C9CMODNT",977,0)
 .......I DOW'="" D
"RTN","C9CMODNT",978,0)
 ........;first find the most recent day that matches DOW
"RTN","C9CMODNT",979,0)
 ........S BASEDATE=RNOW
"RTN","C9CMODNT",980,0)
 ........I NDOW'=DOW  D ;today doesn't match - check most recent to see if within range
"RTN","C9CMODNT",981,0)
 .........N DFOUND
"RTN","C9CMODNT",982,0)
 .........S DFOUND=0
"RTN","C9CMODNT",983,0)
 .........N DTX
"RTN","C9CMODNT",984,0)
 .........N SAVEDATE
"RTN","C9CMODNT",985,0)
 .........S SAVEDATE=BASEDATE
"RTN","C9CMODNT",986,0)
 .........F DTX=1:1:7 Q:(DFOUND=1)  D
"RTN","C9CMODNT",987,0)
 ..........S BASEDATE=$$FMADD^XLFDT(BASEDATE,-1)
"RTN","C9CMODNT",988,0)
 ..........I $$DOW^XLFDT(BASEDATE)=DOW D
"RTN","C9CMODNT",989,0)
 ...........S DFOUND=1
"RTN","C9CMODNT",990,0)
 .........I DFOUND=1 D
"RTN","C9CMODNT",991,0)
 ..........;check to see if within range
"RTN","C9CMODNT",992,0)
 ..........;was I $$FMADD^XLFDT(BASEDATE,ABD)<RNOW D ;most recent no good, find next
"RTN","C9CMODNT",993,0)
 ..........I $$FMADD^XLFDT(BASEDATE,ABDAYS)<RNOW D ;most recent no good, find next ;changed ABD to ABDAYS during override coding
"RTN","C9CMODNT",994,0)
 ...........S BASEDATE=SAVEDATE
"RTN","C9CMODNT",995,0)
 ...........S DFOUND=0
"RTN","C9CMODNT",996,0)
 ...........F DTX=1:1:7 Q:(DFOUND=1)  D
"RTN","C9CMODNT",997,0)
 ............S BASEDATE=$$FMADD^XLFDT(BASEDATE,1)
"RTN","C9CMODNT",998,0)
 ............I $$DOW^XLFDT(BASEDATE)=DOW D
"RTN","C9CMODNT",999,0)
 .............S DFOUND=1
"RTN","C9CMODNT",1000,0)
 .........S SAVEDATE=""
"RTN","C9CMODNT",1001,0)
 ........S BASEDATE=$P(BASEDATE,".",1)_".2359"
"RTN","C9CMODNT",1002,0)
 ........S ABHOURS=23 ;august 1
"RTN","C9CMODNT",1003,0)
 ........S ABMINS=59 ;august 1
"RTN","C9CMODNT",1004,0)
 .....;end DAY OF WEEK
"RTN","C9CMODNT",1005,0)
 .....I (RTEXT="DATE OF MONTH") D
"RTN","C9CMODNT",1006,0)
 ......N DOM S DOM=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,4)),"^",1)
"RTN","C9CMODNT",1007,0)
 ......I DOM'="" D
"RTN","C9CMODNT",1008,0)
 .......I $L(DOM)=1 S DOM="0"_DOM
"RTN","C9CMODNT",1009,0)
 .......I $L(DOM)=2 D
"RTN","C9CMODNT",1010,0)
 ........N DNOW S DNOW=$E(DHMS,3,4) ;day now
"RTN","C9CMODNT",1011,0)
 ........N MNOW S MNOW=$E(DHMS,1,2) ;month now
"RTN","C9CMODNT",1012,0)
 ........N REMA S REMA=$P(DHMS,".",2) ;hours, minutes, and seconds
"RTN","C9CMODNT",1013,0)
 ........;adjust for days in month
"RTN","C9CMODNT",1014,0)
 ........I (DOM>28) D
"RTN","C9CMODNT",1015,0)
 .........I (MNOW="02") D ;february
"RTN","C9CMODNT",1016,0)
 ..........S DOM="28"
"RTN","C9CMODNT",1017,0)
 .........I (DOM>30) D
"RTN","C9CMODNT",1018,0)
 ..........I ((MNOW="04")!(MNOW="06")!(MNOW="09")!(MNOW="11")) D
"RTN","C9CMODNT",1019,0)
 ...........S DOM="30"
"RTN","C9CMODNT",1020,0)
 ........;check the acceptable range
"RTN","C9CMODNT",1021,0)
 ........N ADAYS S ADAYS=$P(ABD,".",1)
"RTN","C9CMODNT",1022,0)
 ........N CKD S CKD=CENTURY_YEAR_MNOW_DOM_"."_REMA
"RTN","C9CMODNT",1023,0)
 ........I ((RNOW>$$FMADD^XLFDT(CKD,(-1*ADAYS)))&(RNOW<$$FMADD^XLFDT(CKD,ADAYS))) D
"RTN","C9CMODNT",1024,0)
 .........S BASEDATE=CKD
"RTN","C9CMODNT",1025,0)
 ........E  D
"RTN","C9CMODNT",1026,0)
 .........I MNOW<12 S MNOW=MNOW+1
"RTN","C9CMODNT",1027,0)
 .........I MNOW=12 S MNOW="01" S YEAR=YEAR+1
"RTN","C9CMODNT",1028,0)
 .........I $L(YEAR)=1 S YEAR="0"_YEAR
"RTN","C9CMODNT",1029,0)
 .........I $L(MNOW)=1 S MNOW="0"_MNOW
"RTN","C9CMODNT",1030,0)
 .........I YEAR=100 S YEAR="00" S CENTURY=CENTURY+1
"RTN","C9CMODNT",1031,0)
 .........S BASEDATE=CENTURY_YEAR_MNOW_DOM_"."_2359
"RTN","C9CMODNT",1032,0)
 .........S ABHOURS=23 ;august 1
"RTN","C9CMODNT",1033,0)
 .........S ABMINS=59 ;august 1
"RTN","C9CMODNT",1034,0)
 .....I (RTEXT="ONE TIME - CALENDAR DATE") D
"RTN","C9CMODNT",1035,0)
 ......S BASEDATE=$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,2)),"^",1)
"RTN","C9CMODNT",1036,0)
 .....I ((BASEDATE'=ADATE)&(BASEDATE'=0)&($F(RTEXT,"PASS-THROUGH REMINDER")'>0)) D ;not a pass through reminder ;added basedate'=adate during override coding - never due exactly at admit time and shows that no rules were applicable
"RTN","C9CMODNT",1037,0)
 ......S RULELEVELFOUND=LEVEL
"RTN","C9CMODNT",1038,0)
 ......N C9CCHECK
"RTN","C9CMODNT",1039,0)
 ......S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODNT",1040,0)
 ......I C9CCHECK>0 D
"RTN","C9CMODNT",1041,0)
 .......;check to see if there is a completed note in this range or after
"RTN","C9CMODNT",1042,0)
 .......I NONOTE=1 D ;no completed notes of this title for this patient, this visit
"RTN","C9CMODNT",1043,0)
 ........I DUEDATE<BASEDATE D
"RTN","C9CMODNT",1044,0)
 .........S DUEDATE=BASEDATE
"RTN","C9CMODNT",1045,0)
 .........S APRULE=RPOINT ;applicable rule
"RTN","C9CMODNT",1046,0)
 .........I $F(RTEXT,"X DAYS")>0 D ;added during override coding
"RTN","C9CMODNT",1047,0)
 ..........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1) ;added during override coding
"RTN","C9CMODNT",1048,0)
 ..........S OFST=OFFSET ;added during override coding
"RTN","C9CMODNT",1049,0)
 .........I $F(RTEXT,"X HOURS")>0 D ;added during override coding
"RTN","C9CMODNT",1050,0)
 ..........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1) ;added during override coding
"RTN","C9CMODNT",1051,0)
 ..........S OFST=OFFSET ;added during override coding
"RTN","C9CMODNT",1052,0)
 .......I NONOTE=0 D
"RTN","C9CMODNT",1053,0)
 ........;check to see if there is a completed note of this title within or after this time period
"RTN","C9CMODNT",1054,0)
 ........;first check within the time period
"RTN","C9CMODNT",1055,0)
 ........N LASTDATE
"RTN","C9CMODNT",1056,0)
 ........S LASTDATE=(9999999-INVDATE) ;date of last completed note of this title
"RTN","C9CMODNT",1057,0)
 ........I (LASTDATE'>$$FMADD^XLFDT(BASEDATE,-ABDAYS,-ABHOURS,-ABMINS)) D  ;this means a note has not been done during or after the time period
"RTN","C9CMODNT",1058,0)
 .........I DUEDATE<BASEDATE D
"RTN","C9CMODNT",1059,0)
 ..........S APRULE=RPOINT
"RTN","C9CMODNT",1060,0)
 ..........S DUEDATE=BASEDATE
"RTN","C9CMODNT",1061,0)
 ..........I $F(RTEXT,"X DAYS")>0 D ;added during override coding
"RTN","C9CMODNT",1062,0)
 ...........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,1)),"^",1) ;added during override coding
"RTN","C9CMODNT",1063,0)
 ...........S OFST=OFFSET ;added during override coding
"RTN","C9CMODNT",1064,0)
 ..........I $F(RTEXT,"X HOURS")>0 D ;added during override coding
"RTN","C9CMODNT",1065,0)
 ...........S OFFSET=+$P($G(^C9C(300890,REIEN,SEPAR,WF,1,FR,6)),"^",1) ;added during override coding
"RTN","C9CMODNT",1066,0)
 ...........S OFST=OFFSET ;added during override coding
"RTN","C9CMODNT",1067,0)
 .....E  D ;pass through reminder
"RTN","C9CMODNT",1068,0)
 ......I ((BASEDATE'=0)&($F(RTEXT,"PASS-THROUGH REMINDER")>0)) D ;added find text during override coding to help eliminate due at exact admit time bug
"RTN","C9CMODNT",1069,0)
 .......S RULELEVELFOUND=LEVEL
"RTN","C9CMODNT",1070,0)
 .......N PHRASE
"RTN","C9CMODNT",1071,0)
 .......S PHRASE=""
"RTN","C9CMODNT",1072,0)
 .......I $G(REMIEN)>0 D
"RTN","C9CMODNT",1073,0)
 ........S PHRASE=$P($G(^PXD(811.9,REMIEN,0)),"^",4)
"RTN","C9CMODNT",1074,0)
 .......N C9CCHECK
"RTN","C9CMODNT",1075,0)
 .......I PHRASE'="" D
"RTN","C9CMODNT",1076,0)
 ........S C9CCHECK=$$SHOW^C9CPTR(PHRASE,BASEDATE)
"RTN","C9CMODNT",1077,0)
 .......E  D
"RTN","C9CMODNT",1078,0)
 ........S C9CCHECK=0 N CKCODE S CKCODE=$G(^C9C(300892,RPOINT,5)) I CKCODE'="" X CKCODE
"RTN","C9CMODNT",1079,0)
 .......I C9CCHECK>0 D
"RTN","C9CMODNT",1080,0)
 ........I DUEDATE<BASEDATE D
"RTN","C9CMODNT",1081,0)
 .........S APRULE=RPOINT_"^"_$G(PHRASE)
"RTN","C9CMODNT",1082,0)
 .........S DUEDATE=BASEDATE
"RTN","C9CMODNT",1083,0)
 ;----------------------
"RTN","C9CMODNT",1084,0)
 Q
"RTN","C9CMODNT",1085,0)
RPCGNOTE(C9CRET,NOTEIEN) ;RPC to bring back text of note
"RTN","C9CMODNT",1086,0)
 Q:$G(NOTEIEN)'>0
"RTN","C9CMODNT",1087,0)
 N GRET
"RTN","C9CMODNT",1088,0)
 N CNT
"RTN","C9CMODNT",1089,0)
 S CNT=0
"RTN","C9CMODNT",1090,0)
 D TGET^TIUSRVR1(.GRET,+NOTEIEN)
"RTN","C9CMODNT",1091,0)
 I GRET'="" D
"RTN","C9CMODNT",1092,0)
 .N PATIEN
"RTN","C9CMODNT",1093,0)
 .S PATIEN=$P($G(^TIU(8925,+NOTEIEN,0)),"^",2)
"RTN","C9CMODNT",1094,0)
 .I PATIEN>0 D
"RTN","C9CMODNT",1095,0)
 ..N PATNAME
"RTN","C9CMODNT",1096,0)
 ..S PATNAME=$P($G(^DPT(PATIEN,0)),"^",1)
"RTN","C9CMODNT",1097,0)
 ..S CNT=CNT+1
"RTN","C9CMODNT",1098,0)
 ..S C9CRET(CNT)="Patient: "_PATNAME        
"RTN","C9CMODNT",1099,0)
 ..N NX
"RTN","C9CMODNT",1100,0)
 ..S NX=0 F  S NX=$O(@GRET@(NX)) Q:NX'>0  D
"RTN","C9CMODNT",1101,0)
 ...S CNT=CNT+1
"RTN","C9CMODNT",1102,0)
 ...S C9CRET(CNT)=(@GRET@(NX))
"RTN","C9CMODNT",1103,0)
 Q
"RTN","C9CMODNT",1104,0)
RPCAF(C9CRET) ;get all possible filter values - in this case, note titles that have rules engine rules
"RTN","C9CMODNT",1105,0)
 ;RPC-C9C NOTES DUE ALL FILTER VALUES
"RTN","C9CMODNT",1106,0)
 N CNT
"RTN","C9CMODNT",1107,0)
 S CNT=0
"RTN","C9CMODNT",1108,0)
 N RX
"RTN","C9CMODNT",1109,0)
 S RX=0 F  S RX=$O(^C9C(300890,RX)) Q:RX'>0  D
"RTN","C9CMODNT",1110,0)
 .I $P($G(^C9C(300890,RX,4)),"^",1)'>0 D ;not inactive
"RTN","C9CMODNT",1111,0)
 ..N INCLUDE
"RTN","C9CMODNT",1112,0)
 ..S INCLUDE=0
"RTN","C9CMODNT",1113,0)
 ..N FX
"RTN","C9CMODNT",1114,0)
 ..S FX=0 F  S FX=$O(^C9C(300890,RX,1,FX)) Q:FX'>0  D ;check for ward rules
"RTN","C9CMODNT",1115,0)
 ...N AX
"RTN","C9CMODNT",1116,0)
 ...S AX=$O(^C9C(300890,RX,1,FX,1,0))
"RTN","C9CMODNT",1117,0)
 ...I AX>0 S INCLUDE=1
"RTN","C9CMODNT",1118,0)
 ..I INCLUDE=0 D
"RTN","C9CMODNT",1119,0)
 ...S FX=0 F  S FX=$O(^C9C(300890,RX,2,FX)) Q:FX'>0  D ;check for unit rules
"RTN","C9CMODNT",1120,0)
 ....N AX
"RTN","C9CMODNT",1121,0)
 ....S AX=$O(^C9C(300890,RX,2,FX,1,0))
"RTN","C9CMODNT",1122,0)
 ....I AX>0 S INCLUDE=1
"RTN","C9CMODNT",1123,0)
 ..I INCLUDE=0 D
"RTN","C9CMODNT",1124,0)
 ...S FX=0 F  S FX=$O(^C9C(300890,RX,3,FX)) Q:FX'>0  D ;check for hospital rules
"RTN","C9CMODNT",1125,0)
 ....N AX
"RTN","C9CMODNT",1126,0)
 ....S AX=$O(^C9C(300890,RX,3,FX,1,0))
"RTN","C9CMODNT",1127,0)
 ....I AX>0 S INCLUDE=1
"RTN","C9CMODNT",1128,0)
 ..I INCLUDE=1 D ;include this formula in returned data
"RTN","C9CMODNT",1129,0)
 ...N VPTR
"RTN","C9CMODNT",1130,0)
 ...S VPTR=$P($G(^C9C(300890,RX,0)),"^",1)
"RTN","C9CMODNT",1131,0)
 ...I VPTR'="" D
"RTN","C9CMODNT",1132,0)
 ....N ENTRY S ENTRY=$P(VPTR,";",1)
"RTN","C9CMODNT",1133,0)
 ....N FILEG S FILEG=$P(VPTR,";",2)
"RTN","C9CMODNT",1134,0)
 ....I ((ENTRY'="")&(FILEG'="")) D
"RTN","C9CMODNT",1135,0)
 .....N FN S FN="^"_FILEG_ENTRY_",0)"
"RTN","C9CMODNT",1136,0)
 .....N ENTNAME S ENTNAME=$P($G(@(FN)),"^",1)
"RTN","C9CMODNT",1137,0)
 .....I ENTNAME'="" D
"RTN","C9CMODNT",1138,0)
 ......S CNT=CNT+1
"RTN","C9CMODNT",1139,0)
 ......S C9CRET(CNT)=ENTRY_"^"_ENTNAME
"RTN","C9CMODNT",1140,0)
 Q
"RTN","C9CMODNT",1141,0)
FIXDAY(DD,MONT,YEA,CEN) ; Fix the day for non-31 day months including leap years - RMS for CRH 20191016
"RTN","C9CMODNT",1142,0)
 Q:DD<29 DD
"RTN","C9CMODNT",1143,0)
 I (MONT="02"),(DD>28) S DD=28+$$LEAP^%DTC(1700+(CEN_YEAR))  ; 1 if leap year, 0 if not
"RTN","C9CMODNT",1144,0)
 I (DD>30),((MONT="04")!(MONT="06")!(MONT="09")!(MONT="11")) S DD=30
"RTN","C9CMODNT",1145,0)
 Q DD
"RTN","C9CMODPG")
0^15^B7534372
"RTN","C9CMODPG",1,0)
C9CMODPG ;CRH JHT 2019 - dashboard module to display current and future covering psychologists
"RTN","C9CMODPG",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CMODPG",3,0)
 ;
"RTN","C9CMODPG",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODPG",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODPG",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODPG",7,0)
 ;
"RTN","C9CMODPG",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODPG",9,0)
 ;
"RTN","C9CMODPG",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODPG",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODPG",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODPG",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODPG",14,0)
 ;limitations under the License.
"RTN","C9CMODPG",15,0)
 Q ;no entry from top
"RTN","C9CMODPG",16,0)
RPC(C9CRET) ;RPC=C9C COVERING PSYCHOL MODULE
"RTN","C9CMODPG",17,0)
 N CNT
"RTN","C9CMODPG",18,0)
 S CNT=0
"RTN","C9CMODPG",19,0)
 N RNOW
"RTN","C9CMODPG",20,0)
 S RNOW=$$NOW^XLFDT
"RTN","C9CMODPG",21,0)
 N PIEN
"RTN","C9CMODPG",22,0)
 S PIEN=0 F  S PIEN=$O(^C9C(300006,PIEN)) Q:PIEN'>0  D
"RTN","C9CMODPG",23,0)
 .N CIEN
"RTN","C9CMODPG",24,0)
 .S CIEN=0 F  S CIEN=$O(^C9C(300006,PIEN,1,CIEN)) Q:CIEN'>0  D
"RTN","C9CMODPG",25,0)
 ..N EDATE
"RTN","C9CMODPG",26,0)
 ..S EDATE=RNOW F  S EDATE=$O(^C9C(300006,PIEN,1,CIEN,1,"C9CE",EDATE)) Q:EDATE'>0  D
"RTN","C9CMODPG",27,0)
 ...N SUBREC
"RTN","C9CMODPG",28,0)
 ...S SUBREC=0 F  S SUBREC=$O(^C9C(300006,PIEN,1,CIEN,1,"C9CE",EDATE,SUBREC)) Q:SUBREC'>0  D
"RTN","C9CMODPG",29,0)
 ....N DELETED
"RTN","C9CMODPG",30,0)
 ....S DELETED=$P($G(^C9C(300006,PIEN,1,CIEN,1,SUBREC,8)),"^",1)
"RTN","C9CMODPG",31,0)
 ....I DELETED'>0 D
"RTN","C9CMODPG",32,0)
 .....N PATIEN
"RTN","C9CMODPG",33,0)
 .....S PATIEN=$P($G(^C9C(300006,PIEN,0)),"^",1)
"RTN","C9CMODPG",34,0)
 .....I PATIEN>0 D
"RTN","C9CMODPG",35,0)
 ......N PATNAME
"RTN","C9CMODPG",36,0)
 ......S PATNAME=$P($G(^DPT(PATIEN,0)),"^",1)
"RTN","C9CMODPG",37,0)
 ......N COVIEN
"RTN","C9CMODPG",38,0)
 ......S COVIEN=$P($G(^C9C(300006,PIEN,1,CIEN,0)),"^",1)
"RTN","C9CMODPG",39,0)
 ......I COVIEN>0 D
"RTN","C9CMODPG",40,0)
 .......N COVNAME
"RTN","C9CMODPG",41,0)
 .......S COVNAME=$P($G(^VA(200,COVIEN,0)),"^",1)
"RTN","C9CMODPG",42,0)
 .......N BDATE
"RTN","C9CMODPG",43,0)
 .......S BDATE=$P($G(^C9C(300006,PIEN,1,CIEN,1,SUBREC,0)),"^",1)
"RTN","C9CMODPG",44,0)
 .......N ENTBYIEN
"RTN","C9CMODPG",45,0)
 .......S ENTBYIEN=$P($G(^C9C(300006,PIEN,1,CIEN,1,SUBREC,2)),"^",1)
"RTN","C9CMODPG",46,0)
 .......N ENTNAME
"RTN","C9CMODPG",47,0)
 .......S ENTNAME=""
"RTN","C9CMODPG",48,0)
 .......I ENTBYIEN>0 D
"RTN","C9CMODPG",49,0)
 ........S ENTNAME=$P($G(^VA(200,ENTBYIEN,0)),"^",1)
"RTN","C9CMODPG",50,0)
 .......N PATWARD
"RTN","C9CMODPG",51,0)
 .......S PATWARD=$P($G(^DPT(PATIEN,.1)),"^",1)
"RTN","C9CMODPG",52,0)
 .......;get the current psychologist
"RTN","C9CMODPG",53,0)
 .......N PSYNAME
"RTN","C9CMODPG",54,0)
 .......S PSYNAME=""
"RTN","C9CMODPG",55,0)
 .......N PATREC
"RTN","C9CMODPG",56,0)
 .......S PATREC=$O(^DIZ(300002,"B",PATIEN,0))
"RTN","C9CMODPG",57,0)
 .......I PATREC>0 D
"RTN","C9CMODPG",58,0)
 ........N PSYIEN
"RTN","C9CMODPG",59,0)
 ........S PSYIEN=$P($G(^DIZ(300002,PATREC,31)),"^",1)
"RTN","C9CMODPG",60,0)
 ........I PSYIEN>0 D
"RTN","C9CMODPG",61,0)
 .........S PSYNAME=$P($G(^VA(200,PSYIEN,0)),"^",1)
"RTN","C9CMODPG",62,0)
 .......N COLOR
"RTN","C9CMODPG",63,0)
 .......I BDATE<RNOW S COLOR="LightGreen"
"RTN","C9CMODPG",64,0)
 .......E  I ($$FMADD^XLFDT(BDATE,-3)<RNOW) S COLOR="LightYellow"
"RTN","C9CMODPG",65,0)
 .......E  S COLOR="White"
"RTN","C9CMODPG",66,0)
 .......S C9CRET($I(CNT))=PATIEN_"^"_PATNAME_"^"_PATWARD_"^"_PSYNAME_"^"_COVNAME_"^"_$$FMTE^XLFDT(BDATE)_"^"_$$FMTE^XLFDT(EDATE)_"^"_COLOR
"RTN","C9CMODPG",67,0)
 Q
"RTN","C9CMODRM")
0^16^B72352350
"RTN","C9CMODRM",1,0)
C9CMODRM ;CRH JHT 2019 - reminders module for dashboard
"RTN","C9CMODRM",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CMODRM",3,0)
 ;
"RTN","C9CMODRM",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODRM",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODRM",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODRM",7,0)
 ;
"RTN","C9CMODRM",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODRM",9,0)
 ;
"RTN","C9CMODRM",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODRM",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODRM",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODRM",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODRM",14,0)
 ;limitations under the License.
"RTN","C9CMODRM",15,0)
 Q ;no entry from top;;;;;Build 1
"RTN","C9CMODRM",16,0)
RPCFILT(C9CRET);RPC=C9C C AND R FILTERS
"RTN","C9CMODRM",17,0)
 ;C9CRET - return array of ien^name
"RTN","C9CMODRM",18,0)
 N CNT
"RTN","C9CMODRM",19,0)
 S CNT=0
"RTN","C9CMODRM",20,0)
 N ALL
"RTN","C9CMODRM",21,0)
 D GETCANDR(.ALL) ;returns RNAME^RIEN for each
"RTN","C9CMODRM",22,0)
 N AX
"RTN","C9CMODRM",23,0)
 S AX=0 F  S AX=$O(ALL(AX)) Q:AX'>0  D
"RTN","C9CMODRM",24,0)
 .S C9CRET($I(CNT))=$P(ALL(AX),"^",2)_"^"_$P(ALL(AX),"^",1) ;IEN^NAME
"RTN","C9CMODRM",25,0)
 Q
"RTN","C9CMODRM",26,0)
ALLINPTS(C9CRET,AVOIDBUG,FILTERS) ;check -C and -R reminders for all inpatients
"RTN","C9CMODRM",27,0)
 ;C9CRET - return array
"RTN","C9CMODRM",28,0)
 ;FILTERS - array of reminders to check
"RTN","C9CMODRM",29,0)
 Q:$G(DUZ)'>0
"RTN","C9CMODRM",30,0)
 Q:$G(DUZ(2))'>0 ;no division
"RTN","C9CMODRM",31,0)
 N REMS ;reminder array to check if no filters
"RTN","C9CMODRM",32,0)
 N CNT
"RTN","C9CMODRM",33,0)
 S CNT=0
"RTN","C9CMODRM",34,0)
 I $G(FILTERS(0))="" D ;no filters
"RTN","C9CMODRM",35,0)
 .D GETCANDR(.REMS) ;returns RNAME^RIEN for each
"RTN","C9CMODRM",36,0)
 .N FCNT
"RTN","C9CMODRM",37,0)
 .S FCNT=0
"RTN","C9CMODRM",38,0)
 .N FX
"RTN","C9CMODRM",39,0)
 .S FX=0 F  S FX=$O(REMS(FX)) Q:FX'>0  D
"RTN","C9CMODRM",40,0)
 ..S FCNT=FCNT+1
"RTN","C9CMODRM",41,0)
 ..S FILTERS(FCNT)=$P(REMS(FX),"^",2)_"^"_$P(REMS(FX),"^",1)
"RTN","C9CMODRM",42,0)
 N WARD ;from ward location file
"RTN","C9CMODRM",43,0)
 S WARD="" F  S WARD=$O(^DPT("ACN",WARD)) Q:WARD=""  D
"RTN","C9CMODRM",44,0)
 .I ((WARD'="ZZTESTWARD")&(WARD'="ZZBCMATRAIN")) D
"RTN","C9CMODRM",45,0)
 ..N WIEN ;ward ien
"RTN","C9CMODRM",46,0)
 ..S WIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CMODRM",47,0)
 ..I WIEN>0 D
"RTN","C9CMODRM",48,0)
 ...N MCD ;medical center division pointer
"RTN","C9CMODRM",49,0)
 ...S MCD=$P($G(^DIC(42,WIEN,0)),"^",11)
"RTN","C9CMODRM",50,0)
 ...I MCD>0 D
"RTN","C9CMODRM",51,0)
 ....N INST ;institution pointer
"RTN","C9CMODRM",52,0)
 ....S INST=$P($G(^DG(40.8,MCD,0)),"^",7)
"RTN","C9CMODRM",53,0)
 ....I INST>0 D
"RTN","C9CMODRM",54,0)
 .....I INST=DUZ(2) D ;matches user institution
"RTN","C9CMODRM",55,0)
 ......N PAT
"RTN","C9CMODRM",56,0)
 ......S PAT=0 F  S PAT=$O(^DPT("ACN",WARD,PAT)) Q:PAT'>0  D
"RTN","C9CMODRM",57,0)
 .......N THISREM
"RTN","C9CMODRM",58,0)
 .......N AX
"RTN","C9CMODRM",59,0)
 .......S AX="" F  S AX=$O(FILTERS(AX)) Q:AX=""  D
"RTN","C9CMODRM",60,0)
 ........N RNAME
"RTN","C9CMODRM",61,0)
 ........S RNAME=$P(FILTERS(AX),"^",2)
"RTN","C9CMODRM",62,0)
 ........S THISREM=$P(FILTERS(AX),"^",1)
"RTN","C9CMODRM",63,0)
 ........I THISREM>0 D
"RTN","C9CMODRM",64,0)
 .........N RET
"RTN","C9CMODRM",65,0)
 .........D REM(.RET,PAT,THISREM)
"RTN","C9CMODRM",66,0)
 .........I +RET>0 D ;if applicable and due
"RTN","C9CMODRM",67,0)
 ..........N PATNAME
"RTN","C9CMODRM",68,0)
 ..........S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CMODRM",69,0)
 ..........N DUEDATE
"RTN","C9CMODRM",70,0)
 ..........S DUEDATE=$$FMTE^XLFDT($P(RET,"^",2))
"RTN","C9CMODRM",71,0)
 ..........N WEBSITE
"RTN","C9CMODRM",72,0)
 ..........S WEBSITE=""
"RTN","C9CMODRM",73,0)
 ..........N WSIEN
"RTN","C9CMODRM",74,0)
 ..........S WSIEN=$O(^PXD(811.9,THISREM,50,0)) ;we only get the first one
"RTN","C9CMODRM",75,0)
 ..........I WSIEN>0 D
"RTN","C9CMODRM",76,0)
 ...........S WEBSITE=$P($G(^PXD(811.9,THISREM,50,WSIEN,0)),"^",1)
"RTN","C9CMODRM",77,0)
 ..........;DFN^PATNAME^WARD^REMINDERNAME^DUEDATE^COLOR^WEBSITE
"RTN","C9CMODRM",78,0)
 ..........S C9CRET($I(CNT))=PAT_"^"_PATNAME_"^"_WARD_"^"_RNAME_"^"_DUEDATE_"^"_$P(RET,"^",3)_"^"_WEBSITE
"RTN","C9CMODRM",79,0)
 .........K RET
"RTN","C9CMODRM",80,0)
 Q
"RTN","C9CMODRM",81,0)
WARDPATS(C9CRET,WARD,FILTERS) ;check -C and -R reminders for patients on one ward
"RTN","C9CMODRM",82,0)
 ;C9CRET - return array
"RTN","C9CMODRM",83,0)
 ;WARD - ward name from ward/location file
"RTN","C9CMODRM",84,0)
 ;FILTERS - array of reminders to check
"RTN","C9CMODRM",85,0)
 N REMS ;reminder array to check if no filters
"RTN","C9CMODRM",86,0)
 N CNT
"RTN","C9CMODRM",87,0)
 S CNT=0
"RTN","C9CMODRM",88,0)
 I $G(FILTERS(0))="" D ;no filters
"RTN","C9CMODRM",89,0)
 .D GETCANDR(.REMS) ;returns RNAME^RIEN for each
"RTN","C9CMODRM",90,0)
 .N FCNT
"RTN","C9CMODRM",91,0)
 .S FCNT=0
"RTN","C9CMODRM",92,0)
 .N FX
"RTN","C9CMODRM",93,0)
 .S FX=0 F  S FX=$O(REMS(FX)) Q:FX'>0  D
"RTN","C9CMODRM",94,0)
 ..S FCNT=FCNT+1
"RTN","C9CMODRM",95,0)
 ..S FILTERS(FCNT)=$P(REMS(FX),"^",2)_"^"_$P(REMS(FX),"^",1)
"RTN","C9CMODRM",96,0)
 N PAT
"RTN","C9CMODRM",97,0)
 S PAT=0 F  S PAT=$O(^DPT("ACN",WARD,PAT)) Q:PAT'>0  D
"RTN","C9CMODRM",98,0)
 .N THISREM
"RTN","C9CMODRM",99,0)
 .N AX
"RTN","C9CMODRM",100,0)
 .S AX="" F  S AX=$O(FILTERS(AX)) Q:AX=""  D
"RTN","C9CMODRM",101,0)
 ..N RNAME
"RTN","C9CMODRM",102,0)
 ..S RNAME=$P(FILTERS(AX),"^",2)
"RTN","C9CMODRM",103,0)
 ..S THISREM=$P(FILTERS(AX),"^",1)
"RTN","C9CMODRM",104,0)
 ..I THISREM>0 D
"RTN","C9CMODRM",105,0)
 ...N RET
"RTN","C9CMODRM",106,0)
 ...D REM(.RET,PAT,THISREM)
"RTN","C9CMODRM",107,0)
 ...I +RET>0 D ;if applicable and due
"RTN","C9CMODRM",108,0)
 ....N PATNAME
"RTN","C9CMODRM",109,0)
 ....S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CMODRM",110,0)
 ....N DUEDATE 
"RTN","C9CMODRM",111,0)
 ....S DUEDATE=$$FMTE^XLFDT($P(RET,"^",2))
"RTN","C9CMODRM",112,0)
 ....N WEBSITE
"RTN","C9CMODRM",113,0)
 ....S WEBSITE=""
"RTN","C9CMODRM",114,0)
 ....N WSIEN
"RTN","C9CMODRM",115,0)
 ....S WSIEN=$O(^PXD(811.9,THISREM,50,0)) ;we only get the first one
"RTN","C9CMODRM",116,0)
 ....I WSIEN>0 D
"RTN","C9CMODRM",117,0)
 .....S WEBSITE=$P($G(^PXD(811.9,THISREM,50,WSIEN,0)),"^",1)
"RTN","C9CMODRM",118,0)
 ....;DFN^PATNAME^REMINDERNAME^DUEDATE^COLOR^WEBSITE
"RTN","C9CMODRM",119,0)
 ....S C9CRET($I(CNT))=PAT_"^"_PATNAME_"^"_RNAME_"^"_DUEDATE_"^"_$P(RET,"^",3)_"^"_WEBSITE
"RTN","C9CMODRM",120,0)
 ...K RET
"RTN","C9CMODRM",121,0)
 Q
"RTN","C9CMODRM",122,0)
REM(C9CRET,PAT,REMIEN) ;check the resolution for one reminder
"RTN","C9CMODRM",123,0)
 ;C9CRET - piece 1 - returns 0 if not due, 1 if due
"RTN","C9CMODRM",124,0)
 ;         piece 2 - date due
"RTN","C9CMODRM",125,0)
 ;         piece 3 - color of row in dashboard if yellow or red
"RTN","C9CMODRM",126,0)
 ;PAT - patient dfn
"RTN","C9CMODRM",127,0)
 ;REMIEN - reminder ien
"RTN","C9CMODRM",128,0)
 ;once reminder name is retrieved, different logic will apply based on the name
"RTN","C9CMODRM",129,0)
 ;DASHBOARD-C - cohort logic only
"RTN","C9CMODRM",130,0)
 ;DASHBOARD-R - resolution logic only 
"RTN","C9CMODRM",131,0)
 S C9CRET="0^0" ;assume false unless proven otherwise below
"RTN","C9CMODRM",132,0)
 N DATEDUE
"RTN","C9CMODRM",133,0)
 S DATEDUE=0
"RTN","C9CMODRM",134,0)
 N DEFARR
"RTN","C9CMODRM",135,0)
 I REMIEN>0 D
"RTN","C9CMODRM",136,0)
 .N REMNAME
"RTN","C9CMODRM",137,0)
 .S REMNAME=$P($G(^PXD(811.9,REMIEN,0)),"^",1)
"RTN","C9CMODRM",138,0)
 .I $F(REMNAME,"DASHBOARD-C")=12 D ;cohort logic only
"RTN","C9CMODRM",139,0)
 ..N DATE ;must be newed but not populated to return current value
"RTN","C9CMODRM",140,0)
 ..N PXRMDEBG ;must be defined and set or PXRMID won't be set
"RTN","C9CMODRM",141,0)
 ..S PXRMDEBG=1
"RTN","C9CMODRM",142,0)
 ..D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CMODRM",143,0)
 ..N FIEVAL
"RTN","C9CMODRM",144,0)
 ..D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CMODRM",145,0)
 ..I $G(PXRMID)'="" D
"RTN","C9CMODRM",146,0)
 ...N RESULT
"RTN","C9CMODRM",147,0)
 ...S RESULT=$P($G(^TMP(PXRMID,$J,REMIEN,"PATIENT COHORT LOGIC")),"^",1)
"RTN","C9CMODRM",148,0)
 ...I RESULT>0 D
"RTN","C9CMODRM",149,0)
 ....S C9CRET="1^"_$P($$NOW^XLFDT,".",1)_".2359"_"^LightCoral"
"RTN","C9CMODRM",150,0)
 ..K ^TMP(PXRMID,$J) K FIEVAL ;needs to be new each time
"RTN","C9CMODRM",151,0)
 .I $F(REMNAME,"DASHBOARD-R")=12 D ;resolution logic only
"RTN","C9CMODRM",152,0)
 ..N DATE ;must be newed but not populated to return current value
"RTN","C9CMODRM",153,0)
 ..N PRNAME ;print name for the reminder
"RTN","C9CMODRM",154,0)
 ..S PRNAME=$P($G(^PXD(811.9,REMIEN,0)),"^",3)
"RTN","C9CMODRM",155,0)
 ..I PRNAME'="" D
"RTN","C9CMODRM",156,0)
 ...D DEF^PXRMLDR(REMIEN,.DEFARR) ;set up variables for this reminder check
"RTN","C9CMODRM",157,0)
 ...N FIEVAL
"RTN","C9CMODRM",158,0)
 ...D EVAL^PXRM(PAT,.DEFARR,5,1,.FIEVAL)
"RTN","C9CMODRM",159,0)
 ...N RSTATUS
"RTN","C9CMODRM",160,0)
 ...S RSTATUS=$P($G(^TMP("PXRHM",$J,REMIEN,PRNAME)),"^",1)
"RTN","C9CMODRM",161,0)
 ...N RDATEDUE
"RTN","C9CMODRM",162,0)
 ...S RDATEDUE=$P($G(^TMP("PXRHM",$J,REMIEN,PRNAME)),"^",2)
"RTN","C9CMODRM",163,0)
 ...I RSTATUS="N/A" S C9CRET=0
"RTN","C9CMODRM",164,0)
 ...E  I ((RSTATUS="DUE NOW")&(RDATEDUE'>0)) D
"RTN","C9CMODRM",165,0)
 ....S C9CRET="1^"_$P($$NOW^XLFDT,".",1)_".2359"_"^LightCoral"
"RTN","C9CMODRM",166,0)
 ...E  I ((RDATEDUE>0)&(RDATEDUE<$$NOW^XLFDT)) D
"RTN","C9CMODRM",167,0)
 ....S C9CRET="1^"_RDATEDUE_"^LightCoral"
"RTN","C9CMODRM",168,0)
 ...E  I RDATEDUE>0 D
"RTN","C9CMODRM",169,0)
 ....N PHRDUE ;phrase in advance due field
"RTN","C9CMODRM",170,0)
 ....S PHRDUE=$P($G(^PXD(811.9,REMIEN,0)),"^",4)
"RTN","C9CMODRM",171,0)
 ....N INTDUE,ONETHIRD
"RTN","C9CMODRM",172,0)
 ....S INTDUE=+PHRDUE
"RTN","C9CMODRM",173,0)
 ....I INTDUE>0 D
"RTN","C9CMODRM",174,0)
 .....N UNITDUE,INDX,DAYS,HOURS
"RTN","C9CMODRM",175,0)
 .....S INDX=$F(PHRDUE,INTDUE)
"RTN","C9CMODRM",176,0)
 .....S UNITDUE=$E(PHRDUE,INDX)
"RTN","C9CMODRM",177,0)
 .....I UNITDUE="D" D
"RTN","C9CMODRM",178,0)
 ......S ONETHIRD=INTDUE\3
"RTN","C9CMODRM",179,0)
 ......I $$FMADD^XLFDT($$NOW^XLFDT,ONETHIRD)>RDATEDUE D
"RTN","C9CMODRM",180,0)
 .......S C9CRET="1^"_RDATEDUE_"^Yellow"
"RTN","C9CMODRM",181,0)
 ......E  D
"RTN","C9CMODRM",182,0)
 .......I $$FMADD^XLFDT($$NOW^XLFDT,INTDUE)>RDATEDUE D
"RTN","C9CMODRM",183,0)
 ........S C9CRET="1^"_RDATEDUE
"RTN","C9CMODRM",184,0)
 .....E  I UNITDUE="H" D
"RTN","C9CMODRM",185,0)
 ......S ONETHIRD=INTDUE\3
"RTN","C9CMODRM",186,0)
 ......I $$FMADD^XLFDT($$NOW^XLFDT,,ONETHIRD)>RDATEDUE D
"RTN","C9CMODRM",187,0)
 .......S C9CRET="1^"_RDATEDUE_"^Yellow"
"RTN","C9CMODRM",188,0)
 ......E  D
"RTN","C9CMODRM",189,0)
 .......I $$FMADD^XLFDT($$NOW^XLFDT,,INTDUE)>RDATEDUE D
"RTN","C9CMODRM",190,0)
 ........S C9CRET="1^"_RDATEDUE
"RTN","C9CMODRM",191,0)
 .....E  I UNITDUE="M" D
"RTN","C9CMODRM",192,0)
 ......S INTDUE=INTDUE*30
"RTN","C9CMODRM",193,0)
 ......S ONETHIRD=INTDUE\3
"RTN","C9CMODRM",194,0)
 ......I $$FMADD^XLFDT($$NOW^XLFDT,ONETHIRD)>RDATEDUE D
"RTN","C9CMODRM",195,0)
 .......S C9CRET="1^"_RDATEDUE_"^Yellow"
"RTN","C9CMODRM",196,0)
 ......E  D
"RTN","C9CMODRM",197,0)
 .......I $$FMADD^XLFDT($$NOW^XLFDT,INTDUE)>RDATEDUE D
"RTN","C9CMODRM",198,0)
 ........S C9CRET="1^"_RDATEDUE
"RTN","C9CMODRM",199,0)
 .....E  I UNITDUE="W" D
"RTN","C9CMODRM",200,0)
 ......S INTDUE=INTDUE*7
"RTN","C9CMODRM",201,0)
 ......S ONETHIRD=INTDUE\3
"RTN","C9CMODRM",202,0)
 ......I $$FMADD^XLFDT($$NOW^XLFDT,ONETHIRD)>RDATEDUE D
"RTN","C9CMODRM",203,0)
 .......S C9CRET="1^"_RDATEDUE_"^Yellow"
"RTN","C9CMODRM",204,0)
 ......E  D
"RTN","C9CMODRM",205,0)
 .......I $$FMADD^XLFDT($$NOW^XLFDT,INTDUE)>RDATEDUE D
"RTN","C9CMODRM",206,0)
 ........S C9CRET="1^"_RDATEDUE
"RTN","C9CMODRM",207,0)
 .....E  I UNITDUE="Y" D
"RTN","C9CMODRM",208,0)
 ......S INTDUE=INTDUE*364
"RTN","C9CMODRM",209,0)
 ......S ONETHIRD=INTDUE\3
"RTN","C9CMODRM",210,0)
 ......I $$FMADD^XLFDT($$NOW^XLFDT,ONETHIRD)>RDATEDUE D
"RTN","C9CMODRM",211,0)
 .......S C9CRET="1^"_RDATEDUE_"^Yellow"
"RTN","C9CMODRM",212,0)
 ......E  D
"RTN","C9CMODRM",213,0)
 .......I $$FMADD^XLFDT($$NOW^XLFDT,INTDUE)>RDATEDUE D
"RTN","C9CMODRM",214,0)
 ........S C9CRET="1^"_RDATEDUE
"RTN","C9CMODRM",215,0)
 ...K ^TMP("PXRHM",$J,REMIEN)
"RTN","C9CMODRM",216,0)
 ...K FIEVAL ;needs to be new each time
"RTN","C9CMODRM",217,0)
 Q
"RTN","C9CMODRM",218,0)
GETCANDR(C9CRET) ;get DASHBOARD-C and DASHBOARD-R reminders
"RTN","C9CMODRM",219,0)
 N CNT
"RTN","C9CMODRM",220,0)
 S CNT=0
"RTN","C9CMODRM",221,0)
 N RBN
"RTN","C9CMODRM",222,0)
 S RBN="DASHBOARD-C" F  S RBN=$O(^PXD(811.9,"B",RBN)) Q:((RBN="")!($F(RBN,"DASHBOARD-C")'=12))  D
"RTN","C9CMODRM",223,0)
 .N RX
"RTN","C9CMODRM",224,0)
 .S RX=0 F  S RX=$O(^PXD(811.9,"B",RBN,RX)) Q:RX'>0  D
"RTN","C9CMODRM",225,0)
 ..N RNAME
"RTN","C9CMODRM",226,0)
 ..S RNAME=$P($G(^PXD(811.9,RX,0)),"^",3) ;get print name if exists
"RTN","C9CMODRM",227,0)
 ..I RNAME="" S RNAME=$P($G(^PXD(811.9,RX,0)),"^",1) ;name if print name not found 
"RTN","C9CMODRM",228,0)
 ..I RNAME'="" D
"RTN","C9CMODRM",229,0)
 ...S C9CRET($I(CNT))=RNAME_"^"_RX
"RTN","C9CMODRM",230,0)
 S RBN="DASHBOARD-R" F  S RBN=$O(^PXD(811.9,"B",RBN)) Q:((RBN="")!($F(RBN,"DASHBOARD-R")'=12))  D
"RTN","C9CMODRM",231,0)
 .N RX
"RTN","C9CMODRM",232,0)
 .S RX=0 F  S RX=$O(^PXD(811.9,"B",RBN,RX)) Q:RX'>0  D
"RTN","C9CMODRM",233,0)
 ..N RNAME
"RTN","C9CMODRM",234,0)
 ..S RNAME=$P($G(^PXD(811.9,RX,0)),"^",3) ;get print name if exists
"RTN","C9CMODRM",235,0)
 ..I RNAME="" S RNAME=$P($G(^PXD(811.9,RX,0)),"^",1) ;name if print name not found
"RTN","C9CMODRM",236,0)
 ..I RNAME'="" D
"RTN","C9CMODRM",237,0)
 ...I $P($G(^PXD(811.9,RX,0)),"^",6)'>0 D ;not inactive
"RTN","C9CMODRM",238,0)
 ....S C9CRET($I(CNT))=RNAME_"^"_RX
"RTN","C9CMODRM",239,0)
 Q
"RTN","C9CMODRM",240,0)
 
"RTN","C9CMODSN")
0^17^B53309
"RTN","C9CMODSN",1,0)
C9CMODSN ;CRH JHT 2018 retrieve sticky notes for dashboard display
"RTN","C9CMODSN",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CMODSN",3,0)
 ;
"RTN","C9CMODSN",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CMODSN",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CMODSN",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CMODSN",7,0)
 ;
"RTN","C9CMODSN",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CMODSN",9,0)
 ;
"RTN","C9CMODSN",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CMODSN",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CMODSN",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CMODSN",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CMODSN",14,0)
 ;limitations under the License.
"RTN","C9CMODSN",15,0)
 Q ;no entry from top
"RTN","C9CMODSN",16,0)
RPCFILT(C9CRET)
"RTN","C9CMODSN",17,0)
 ;C9CRET - return array
"RTN","C9CMODSN",18,0)
 S C9CRET(1)="1^Sticky Notes"
"RTN","C9CMODSN",19,0)
 S C9CRET(2)="2^Future Reminders"
"RTN","C9CMODSN",20,0)
 Q
"RTN","C9CMODSN",21,0)
RPC(C9CRET,WARD,FILTER)
"RTN","C9CMODSN",22,0)
 ;C9CRET - return array
"RTN","C9CMODSN",23,0)
 ;WARD - ward name from ward/location file
"RTN","C9CMODSN",24,0)
 ;FILTER - optional Filter Values
"RTN","C9CMODSN",25,0)
 N SHOWSN
"RTN","C9CMODSN",26,0)
 S SHOWSN=0 ;don't show sticky notes
"RTN","C9CMODSN",27,0)
 N SHOWRS
"RTN","C9CMODSN",28,0)
 S SHOWRS=0 ;don't show future reminders
"RTN","C9CMODSN",29,0)
 I $D(FILTER) D
"RTN","C9CMODSN",30,0)
 .N K
"RTN","C9CMODSN",31,0)
 .S K="" F  S K=$O(FILTER(K)) Q:K=""  D
"RTN","C9CMODSN",32,0)
 ..I $P(FILTER(K),"^",2)="Future Reminders" D
"RTN","C9CMODSN",33,0)
 ...S SHOWRS=1 ;show future reminders
"RTN","C9CMODSN",34,0)
 ..I $P(FILTER(K),"^",2)="Sticky Notes" D
"RTN","C9CMODSN",35,0)
 ...S SHOWSN=1 ;show sticky notes
"RTN","C9CMODSN",36,0)
 E  D
"RTN","C9CMODSN",37,0)
 .S SHOWSN=1 ;show sticky notes
"RTN","C9CMODSN",38,0)
 .S SHOWRS=1 ;show future reminders
"RTN","C9CMODSN",39,0)
 Q:$G(WARD)=""
"RTN","C9CMODSN",40,0)
 Q:$G(DUZ(2))'>0
"RTN","C9CMODSN",41,0)
 Q:$G(DUZ)'>0
"RTN","C9CMODSN",42,0)
 ;allow PROVIDER key to see only provider notes, ORELSE key to see only nursing notes
"RTN","C9CMODSN",43,0)
 ;no one else can see notes at all as of Sept 2018
"RTN","C9CMODSN",44,0)
 N PTYPE
"RTN","C9CMODSN",45,0)
 D PERTYPE^C9CSTN(.PTYPE)
"RTN","C9CMODSN",46,0)
 S PTYPE=$G(PTYPE(1))
"RTN","C9CMODSN",47,0)
 Q:((PTYPE'="P")&(PTYPE'="N")) ;only useable for Providers and Nurses
"RTN","C9CMODSN",48,0)
 N C9CI
"RTN","C9CMODSN",49,0)
 S C9CI=0
"RTN","C9CMODSN",50,0)
 N WARDIEN
"RTN","C9CMODSN",51,0)
 S WARDIEN=$O(^DIC(42,"B",WARD,0))
"RTN","C9CMODSN",52,0)
 Q:WARDIEN'>0
"RTN","C9CMODSN",53,0)
 N DIV
"RTN","C9CMODSN",54,0)
 S DIV=DUZ(2)
"RTN","C9CMODSN",55,0)
 Q:DIV'>0
"RTN","C9CMODSN",56,0)
 N PAT
"RTN","C9CMODSN",57,0)
 S PAT=0 F  S PAT=$O(^DPT("ACN",WARD,PAT)) Q:PAT'>0  D ;go through patients on the ward
"RTN","C9CMODSN",58,0)
 .N NPAT
"RTN","C9CMODSN",59,0)
 .S NPAT=$O(^C9C(300036,"B",PAT,0))
"RTN","C9CMODSN",60,0)
 .I NPAT>0 D ;patient exists in the sticky notes file
"RTN","C9CMODSN",61,0)
 ..N PX
"RTN","C9CMODSN",62,0)
 ..S PX=$O(^C9C(300036,"B",PAT,0))
"RTN","C9CMODSN",63,0)
 ..N PATNAME
"RTN","C9CMODSN",64,0)
 ..S PATNAME=$P($G(^DPT(PAT,0)),"^",1)
"RTN","C9CMODSN",65,0)
 ..N MRN
"RTN","C9CMODSN",66,0)
 ..S MRN=$P($G(^DPT(PAT,"MSCD")),"^",1)
"RTN","C9CMODSN",67,0)
 ..I ((PX>0)&(SHOWRS=1)) D ;get only reminder type notes first
"RTN","C9CMODSN",68,0)
 ...N COLOR
"RTN","C9CMODSN",69,0)
 ...S COLOR="Yellow"
"RTN","C9CMODSN",70,0)
 ...N NX
"RTN","C9CMODSN",71,0)
 ...S NX=$$FMADD^XLFDT($$NOW^XLFDT,-7) F  S NX=$O(^C9C(300036,PX,1,"B",NX)) Q:NX'>0  D ;check starting seven days overdue
"RTN","C9CMODSN",72,0)
 ....N DX
"RTN","C9CMODSN",73,0)
 ....S DX=0 F  S DX=$O(^C9C(300036,PX,1,"B",NX,DX)) Q:DX'>0  D
"RTN","C9CMODSN",74,0)
 .....Q:$P($G(^C9C(300036,PX,1,DX,6)),"^",1)>0  ;expiration was forced
"RTN","C9CMODSN",75,0)
 .....N EXPDATE ;check to see if within seven days before due here
"RTN","C9CMODSN",76,0)
 .....S EXPDATE=NX
"RTN","C9CMODSN",77,0)
 .....I $$FMADD^XLFDT($$NOW^XLFDT,7)>EXPDATE D
"RTN","C9CMODSN",78,0)
 ......N CRDATE
"RTN","C9CMODSN",79,0)
 ......S CRDATE=$P($G(^C9C(300036,PX,1,DX,1)),"^",1)
"RTN","C9CMODSN",80,0)
 ......N CRBY
"RTN","C9CMODSN",81,0)
 ......S CRBY=$P($G(^C9C(300036,PX,1,DX,1)),"^",2)
"RTN","C9CMODSN",82,0)
 ......N CRBYNAME
"RTN","C9CMODSN",83,0)
 ......S CRBYNAME=""
"RTN","C9CMODSN",84,0)
 ......I $G(CRBY)>0 D
"RTN","C9CMODSN",85,0)
 .......S CRBYNAME=$P($G(^VA(200,CRBY,0)),"^",1)
"RTN","C9CMODSN",86,0)
 ......N CRBYTYPE
"RTN","C9CMODSN",87,0)
 ......S CRBYTYPE=$P($G(^C9C(300036,PX,1,DX,1)),"^",3)
"RTN","C9CMODSN",88,0)
 ......I ((CRBYTYPE="R")&($$CRPTYPE(CRBY)=$$CRPTYPE(DUZ))) D ;allow creator service to see future reminders
"RTN","C9CMODSN",89,0)
 .......N NOTETEXT
"RTN","C9CMODSN",90,0)
 .......S NOTETEXT=""
"RTN","C9CMODSN",91,0)
 .......N LX
"RTN","C9CMODSN",92,0)
 .......S LX=0 F  S LX=$O(^C9C(300036,PX,1,DX,2,LX)) Q:LX'>0  D
"RTN","C9CMODSN",93,0)
 ........I NOTETEXT="" S NOTETEXT=$P($G(^C9C(300036,PX,1,DX,2,LX,0)),"^",1)
"RTN","C9CMODSN",94,0)
 ........E  S NOTETEXT=NOTETEXT_"^"_$P($G(^C9C(300036,PX,1,DX,2,LX,0)),"^",1)
"RTN","C9CMODSN",95,0)
 .......I NOTETEXT'="" D ;don't show blank notes
"RTN","C9CMODSN",96,0)
 ........N ACTDATA ;action data for potential button click
"RTN","C9CMODSN",97,0)
 ........S ACTDATA=PAT_":"_DX
"RTN","C9CMODSN",98,0)
 ........S C9CI=C9CI+1
"RTN","C9CMODSN",99,0)
 ........S C9CRET(C9CI)=ACTDATA_"^"_COLOR_"^"_"Patient: "_PATNAME_"         MRN: "_MRN_"^"_"Created By: "_CRBYNAME_"^"_"Date Created: "_$$FMTE^XLFDT(CRDATE)_"      Expiration Date: "_$$FMTE^XLFDT(EXPDATE)_"^"_NOTETEXT
"RTN","C9CMODSN",100,0)
 ..I ((PX>0)&(SHOWSN=1)) D ;now get provider and nursing notes
"RTN","C9CMODSN",101,0)
 ...N NX
"RTN","C9CMODSN",102,0)
 ...S NX=$$NOW^XLFDT F  S NX=$O(^C9C(300036,PX,1,"B",NX)) Q:NX'>0  D
"RTN","C9CMODSN",103,0)
 ....N DX
"RTN","C9CMODSN",104,0)
 ....S DX=0 F  S DX=$O(^C9C(300036,PX,1,"B",NX,DX)) Q:DX'>0  D
"RTN","C9CMODSN",105,0)
 .....Q:$P($G(^C9C(300036,PX,1,DX,6)),"^",1)>0  ;expiration was forced
"RTN","C9CMODSN",106,0)
 .....N EXPDATE 
"RTN","C9CMODSN",107,0)
 .....S EXPDATE=NX
"RTN","C9CMODSN",108,0)
 .....N CRDATE
"RTN","C9CMODSN",109,0)
 .....S CRDATE=$P($G(^C9C(300036,PX,1,DX,1)),"^",1)
"RTN","C9CMODSN",110,0)
 .....N CRBY
"RTN","C9CMODSN",111,0)
 .....S CRBY=$P($G(^C9C(300036,PX,1,DX,1)),"^",2)
"RTN","C9CMODSN",112,0)
 .....N CRBYNAME
"RTN","C9CMODSN",113,0)
 .....S CRBYNAME=""
"RTN","C9CMODSN",114,0)
 .....I $G(CRBY)>0 D
"RTN","C9CMODSN",115,0)
 ......S CRBYNAME=$P($G(^VA(200,CRBY,0)),"^",1)
"RTN","C9CMODSN",116,0)
 .....N CRBYTYPE
"RTN","C9CMODSN",117,0)
 .....S CRBYTYPE=$P($G(^C9C(300036,PX,1,DX,1)),"^",3)
"RTN","C9CMODSN",118,0)
 .....N COLOR
"RTN","C9CMODSN",119,0)
 .....S COLOR="Beige" ;shouldn't stay this color
"RTN","C9CMODSN",120,0)
 .....I CRBYTYPE="P" D
"RTN","C9CMODSN",121,0)
 ......S COLOR="SkyBlue"
"RTN","C9CMODSN",122,0)
 .....I CRBYTYPE="N" D
"RTN","C9CMODSN",123,0)
 ......S COLOR="PaleGreen"
"RTN","C9CMODSN",124,0)
 .....I PTYPE=CRBYTYPE D
"RTN","C9CMODSN",125,0)
 ......N NOTETEXT
"RTN","C9CMODSN",126,0)
 ......S NOTETEXT=""
"RTN","C9CMODSN",127,0)
 ......N LX
"RTN","C9CMODSN",128,0)
 ......S LX=0 F  S LX=$O(^C9C(300036,PX,1,DX,2,LX)) Q:LX'>0  D
"RTN","C9CMODSN",129,0)
 .......I NOTETEXT="" S NOTETEXT=$P($G(^C9C(300036,PX,1,DX,2,LX,0)),"^",1)
"RTN","C9CMODSN",130,0)
 .......E  S NOTETEXT=NOTETEXT_"^"_$P($G(^C9C(300036,PX,1,DX,2,LX,0)),"^",1)
"RTN","C9CMODSN",131,0)
 ......I NOTETEXT'="" D ;don't show blank notes
"RTN","C9CMODSN",132,0)
 .......N ACTDATA ;action data for potential button click
"RTN","C9CMODSN",133,0)
 .......S ACTDATA=PAT_":"_DX
"RTN","C9CMODSN",134,0)
 .......S C9CI=C9CI+1
"RTN","C9CMODSN",135,0)
 .......S C9CRET(C9CI)=ACTDATA_"^"_COLOR_"^"_"Patient: "_PATNAME_"         MRN: "_MRN_"^"_"Created By: "_CRBYNAME_"^"_"Date Created: "_$$FMTE^XLFDT(CRDATE)_"      Expiration Date: "_$$FMTE^XLFDT(EXPDATE)_"^"_NOTETEXT
"RTN","C9CMODSN",136,0)
 Q
"RTN","C9CMODSN",137,0)
CRPTYPE(PERIEN) ;get someone else's person type for sticky notes
"RTN","C9CMODSN",138,0)
        I $G(PERIEN)'>0 Q "O" ;O is not used right now
"RTN","C9CMODSN",139,0)
        I $D(^XUSEC("PROVIDER",PERIEN)) Q "P"
"RTN","C9CMODSN",140,0)
        I $D(^XUSEC("ORELSE",PERIEN)) Q "N"
"RTN","C9CMODSN",141,0)
        Q "O"
"RTN","C9CORIDE")
0^18^B321469540
"RTN","C9CORIDE",1,0)
C9CORIDE ;CRH JHT 2019 - override code for notes due rules shown logic, nearly due logic, overdue logic, and acceptable base date delta logic
"RTN","C9CORIDE",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CORIDE",3,0)
 ;
"RTN","C9CORIDE",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CORIDE",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CORIDE",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CORIDE",7,0)
 ;
"RTN","C9CORIDE",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CORIDE",9,0)
 ;
"RTN","C9CORIDE",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CORIDE",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CORIDE",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CORIDE",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CORIDE",14,0)
 ;limitations under the License.
"RTN","C9CORIDE",15,0)
 Q ;no entry from top;;;;;Build 1
"RTN","C9CORIDE",16,0)
 
"RTN","C9CORIDE",17,0)
 ;NEARLY DUE LOGIC: I (($$NOW^XLFDT>$$FMADD^XLFDT(BASEDATE,-1))&($$NOW^XLFDT<BASEDATE)) S
"RTN","C9CORIDE",18,0)
 ;C9CCHECK=1
"RTN","C9CORIDE",19,0)
 ;OVERDUE LOGIC: I (($$NOW^XLFDT>BASEDATE)!($$NOW^XLFDT=BASEDATE)) S C9CCHECK=1
"RTN","C9CORIDE",20,0)
 ;ACCEPTABLE BASEDATE DELTA: S ABD="2.0"
"RTN","C9CORIDE",21,0)
 
"RTN","C9CORIDE",22,0)
SHOWN(RPOINT,TITLIEN,BASEDATE,OFFSET,DBDAYS,DBHOURS,DADAYS,DAHOURS) ;return 0 for false, 1 for true
"RTN","C9CORIDE",23,0)
 ;RPOINT - pointer to rule definition if file 300892
"RTN","C9CORIDE",24,0)
 ;TITLIEN - pointer to document definition in file 8925.1
"RTN","C9CORIDE",25,0)
 ;BASEDATE - current due date being evaluated in fileman format
"RTN","C9CORIDE",26,0)
 ;OFFSET - number of days or hours for X days, X hours rules, otherwise zero
"RTN","C9CORIDE",27,0)
 ;DBDAYS - default number of days before
"RTN","C9CORIDE",28,0)
 ;DBHOURS - default number of hours before
"RTN","C9CORIDE",29,0)
 ;DADAYS - default number of days after
"RTN","C9CORIDE",30,0)
 ;DAHOURS - default number of hours after
"RTN","C9CORIDE",31,0)
 N C9CRET ;return value for this function
"RTN","C9CORIDE",32,0)
 S C9CRET=0
"RTN","C9CORIDE",33,0)
 I $G(TITLIEN)'>0 Q C9CRET
"RTN","C9CORIDE",34,0)
 I $G(RPOINT)'>0 Q C9CRET
"RTN","C9CORIDE",35,0)
 I $G(BASEDATE)'>0 Q C9CRET
"RTN","C9CORIDE",36,0)
 S OFFSET=+$G(OFFSET)
"RTN","C9CORIDE",37,0)
 S DBDAYS=+$G(DBDAYS)
"RTN","C9CORIDE",38,0)
 S DBHOURS=+$G(DBHOURS)
"RTN","C9CORIDE",39,0)
 S DADAYS=+$G(DADAYS)
"RTN","C9CORIDE",40,0)
 S DAHOURS=+$G(DAHOURS)
"RTN","C9CORIDE",41,0)
 N TITLE
"RTN","C9CORIDE",42,0)
 S TITLE=$$TRIM^XLFSTR($P($G(^TIU(8925.1,TITLIEN,0)),"^",1))
"RTN","C9CORIDE",43,0)
 I TITLE="" Q C9CRET
"RTN","C9CORIDE",44,0)
 N C9CNOW
"RTN","C9CORIDE",45,0)
 S C9CNOW=$$NOW^XLFDT
"RTN","C9CORIDE",46,0)
 ;Following sets the default logic for each rule
"RTN","C9CORIDE",47,0)
 N RULETEXT
"RTN","C9CORIDE",48,0)
 S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CORIDE",49,0)
 I RULETEXT="" Q C9CRET
"RTN","C9CORIDE",50,0)
 ;Following runs the default code 
"RTN","C9CORIDE",51,0)
 ;Default days before and/or after trump default hours
"RTN","C9CORIDE",52,0)
 I ((DBDAYS>0)&(DADAYS>0)) D
"RTN","C9CORIDE",53,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-DBDAYS))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,DADAYS))) S C9CRET=1
"RTN","C9CORIDE",54,0)
 E  I ((DBDAYS>0)&(DAHOURS>0)) D
"RTN","C9CORIDE",55,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-DBDAYS))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,,DAHOURS))) S C9CRET=1
"RTN","C9CORIDE",56,0)
 E  I ((DBHOURS>0)&(DADAYS>0)) D
"RTN","C9CORIDE",57,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-DBHOURS))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,DADAYS))) S C9CRET=1
"RTN","C9CORIDE",58,0)
 E  I ((DBHOURS>0)&(DAHOURS>0)) D
"RTN","C9CORIDE",59,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-DBHOURS))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,,DAHOURS))) S C9CRET=1
"RTN","C9CORIDE",60,0)
 E  D
"RTN","C9CORIDE",61,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-7))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1
"RTN","C9CORIDE",62,0)
 ;Following sections are for individual titles.  If the title does not show up here, defaults remain
"RTN","C9CORIDE",63,0)
SWORIDE ;label used for override logic RPC
"RTN","C9CORIDE",64,0)
 I TITLE="MEDICAL REVIEW-PERIODIC" D
"RTN","C9CORIDE",65,0)
 .I ((RULETEXT="ONE TIME - ADMIT DATE + X DAYS")!(RULETEXT="ANNUALLY BASED ON ADMIT DATE + X DAYS")) D
"RTN","C9CORIDE",66,0)
 ..S C9CRET=0
"RTN","C9CORIDE",67,0)
 ..I OFFSET>90 D
"RTN","C9CORIDE",68,0)
 ...I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-15))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) D
"RTN","C9CORIDE",69,0)
 ....S C9CRET=1
"RTN","C9CORIDE",70,0)
 ..I OFFSET<91 D
"RTN","C9CORIDE",71,0)
 ...I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-7))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) D
"RTN","C9CORIDE",72,0)
 ....S C9CRET=1
"RTN","C9CORIDE",73,0)
 I TITLE="MEDICAL HISTORY AND PHYSICAL ASSESSMENT" D
"RTN","C9CORIDE",74,0)
 .I (RULETEXT="ANNUALLY BASED ON ADMIT DATE") D
"RTN","C9CORIDE",75,0)
 ..S C9CRET=0
"RTN","C9CORIDE",76,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-15))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) D
"RTN","C9CORIDE",77,0)
 ...S C9CRET=1
"RTN","C9CORIDE",78,0)
 I TITLE="NURSING ASSESSMENT 24/48 HOUR" D
"RTN","C9CORIDE",79,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;for this rule, basedate is always noon
"RTN","C9CORIDE",80,0)
 ..S C9CRET=0
"RTN","C9CORIDE",81,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;shows up at midnight
"RTN","C9CORIDE",82,0)
 I TITLE="NURSING ASSESSMENT MONTHLY/WEEKLY" D
"RTN","C9CORIDE",83,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;means this is a weekly, basedate is noon
"RTN","C9CORIDE",84,0)
 ..S C9CRET=0
"RTN","C9CORIDE",85,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;shows up 12 hours ahead (midnight)
"RTN","C9CORIDE",86,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",87,0)
 ..S C9CRET=0
"RTN","C9CORIDE",88,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-5,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;five days and 12 hours before
"RTN","C9CORIDE",89,0)
 I TITLE="NURSING ASSESSMENT INITIAL ANNUAL" D
"RTN","C9CORIDE",90,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",91,0)
 ..S C9CRET=0
"RTN","C9CORIDE",92,0)
 ..I ((C9CNOW>BASEDATE)&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;shows up at admission time - code may allow two hours prior
"RTN","C9CORIDE",93,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",94,0)
 ..S C9CRET=0
"RTN","C9CORIDE",95,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-15))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) D
"RTN","C9CORIDE",96,0)
 ...S C9CRET=1 ;shows up 15 days prior
"RTN","C9CORIDE",97,0)
 I TITLE="NURSING CARE PLANS" D
"RTN","C9CORIDE",98,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",99,0)
 ..S C9CRET=0
"RTN","C9CORIDE",100,0)
 ..I ((C9CNOW>BASEDATE)&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;shows up at admission time - code may allow two hours prior
"RTN","C9CORIDE",101,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;for this rule, basedate is always noon
"RTN","C9CORIDE",102,0)
 ..S C9CRET=0
"RTN","C9CORIDE",103,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;shows up 12 hours ahead (midnight)
"RTN","C9CORIDE",104,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",105,0)
 ..S C9CRET=0
"RTN","C9CORIDE",106,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-5,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) S C9CRET=1 ;five days and 12 hours before
"RTN","C9CORIDE",107,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",108,0)
 ..S C9CRET=0
"RTN","C9CORIDE",109,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-15))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,350))) D
"RTN","C9CORIDE",110,0)
 ...S C9CRET=1
"RTN","C9CORIDE",111,0)
 Q C9CRET 
"RTN","C9CORIDE",112,0)
NEARLY(RPOINT,TITLIEN,BASEDATE,OFFSET,DBDAYS,DBHOURS) ;return 0 for false, 1 for true
"RTN","C9CORIDE",113,0)
 ;RPOINT - pointer to rule definition if file 300892
"RTN","C9CORIDE",114,0)
 ;TITLIEN - pointer to document definition in file 8925.1
"RTN","C9CORIDE",115,0)
 ;BASEDATE - current due date being evaluated in fileman format
"RTN","C9CORIDE",116,0)
 ;OFFSET - number of days or hours for X days, X hours rules, otherwise zero
"RTN","C9CORIDE",117,0)
 ;DBDAYS - default number of days before
"RTN","C9CORIDE",118,0)
 ;DBHOURS - default number of hours before
"RTN","C9CORIDE",119,0)
 N C9CRET ;return value for this function
"RTN","C9CORIDE",120,0)
 S C9CRET=0
"RTN","C9CORIDE",121,0)
 I $G(TITLIEN)'>0 Q C9CRET
"RTN","C9CORIDE",122,0)
 I $G(RPOINT)'>0 Q C9CRET
"RTN","C9CORIDE",123,0)
 I $G(BASEDATE)'>0 Q C9CRET
"RTN","C9CORIDE",124,0)
 S DBDAYS=+$G(DBDAYS)
"RTN","C9CORIDE",125,0)
 S DBHOURS=+$G(DBHOURS)
"RTN","C9CORIDE",126,0)
 N TITLE
"RTN","C9CORIDE",127,0)
 S TITLE=$$TRIM^XLFSTR($P($G(^TIU(8925.1,TITLIEN,0)),"^",1))
"RTN","C9CORIDE",128,0)
 I TITLE="" Q C9CRET
"RTN","C9CORIDE",129,0)
 N C9CNOW
"RTN","C9CORIDE",130,0)
 S C9CNOW=$$NOW^XLFDT
"RTN","C9CORIDE",131,0)
 ;Following sets the default logic for each rule
"RTN","C9CORIDE",132,0)
 N RULETEXT
"RTN","C9CORIDE",133,0)
 S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CORIDE",134,0)
 I RULETEXT="" Q C9CRET
"RTN","C9CORIDE",135,0)
 ;Following runs the default code
"RTN","C9CORIDE",136,0)
 ;Default days before and/or after trump default hours
"RTN","C9CORIDE",137,0)
 I (DBDAYS>0) D
"RTN","C9CORIDE",138,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-DBDAYS))&(C9CNOW<BASEDATE)) S C9CRET=1
"RTN","C9CORIDE",139,0)
 E  I (DBHOURS>0) D
"RTN","C9CORIDE",140,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-DBHOURS))&(C9CNOW<BASEDATE)) S C9CRET=1
"RTN","C9CORIDE",141,0)
 E  D
"RTN","C9CORIDE",142,0)
 .I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,-1))&(C9CNOW<BASEDATE)) S C9CRET=1
"RTN","C9CORIDE",143,0)
 ;Following sections are for individual titles.  If the title does not show up here, defaults remain
"RTN","C9CORIDE",144,0)
NORIDE ;label used for override logic RPC
"RTN","C9CORIDE",145,0)
 I TITLE="MEDICAL REVIEW-PERIODIC" D
"RTN","C9CORIDE",146,0)
 .I ((RULETEXT="ONE TIME - ADMIT DATE + X DAYS")!(RULETEXT="ANNUALLY BASED ON ADMIT DATE + X DAYS")) D
"RTN","C9CORIDE",147,0)
 ..S C9CRET=0
"RTN","C9CORIDE",148,0)
 ..I (OFFSET<180) D
"RTN","C9CORIDE",149,0)
 ...I (((C9CNOW\1)=(BASEDATE\1))!((BASEDATE<C9CNOW)&(C9CNOW<($$FMADD^XLFDT(BASEDATE,7))))) D
"RTN","C9CORIDE",150,0)
 ....S C9CRET=1
"RTN","C9CORIDE",151,0)
 ..I (OFFSET>179) D
"RTN","C9CORIDE",152,0)
 ...I (((C9CNOW\1)=(BASEDATE\1))!((BASEDATE<C9CNOW)&(C9CNOW<($$FMADD^XLFDT(BASEDATE,15))))) D
"RTN","C9CORIDE",153,0)
 ....S C9CRET=1
"RTN","C9CORIDE",154,0)
 I TITLE="MEDICAL HISTORY AND PHYSICAL ASSESSMENT" D
"RTN","C9CORIDE",155,0)
 .I (RULETEXT="ANNUALLY BASED ON ADMIT DATE") D
"RTN","C9CORIDE",156,0)
 ..S C9CRET=0
"RTN","C9CORIDE",157,0)
 ..I (((C9CNOW\1)=(BASEDATE\1))!((BASEDATE<C9CNOW)&(C9CNOW<($$FMADD^XLFDT(BASEDATE,15))))) D
"RTN","C9CORIDE",158,0)
 ...S C9CRET=1
"RTN","C9CORIDE",159,0)
 I TITLE="NURSING ASSESSMENT 24/48 HOUR" D
"RTN","C9CORIDE",160,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;for this rule, basedate is always noon
"RTN","C9CORIDE",161,0)
 ..S C9CRET=0
"RTN","C9CORIDE",162,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,,12))) S C9CRET=1 ;goes yellow at noon, stays yellow until midnight
"RTN","C9CORIDE",163,0)
 I TITLE="NURSING ASSESSMENT MONTHLY/WEEKLY" D
"RTN","C9CORIDE",164,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;means this is a weekly, basedate is noon
"RTN","C9CORIDE",165,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,,12))) S C9CRET=1 ;goes yellow at noon, stays yellow until midnight
"RTN","C9CORIDE",166,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",167,0)
 ..S C9CRET=0
"RTN","C9CORIDE",168,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,5,12))) D
"RTN","C9CORIDE",169,0)
 ...S C9CRET=1 ;turns yellow on the day due, stays yellow for five days after
"RTN","C9CORIDE",170,0)
 I TITLE="NURSING ASSESSMENT INITIAL ANNUAL" D
"RTN","C9CORIDE",171,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",172,0)
 ..S C9CRET=0 ;this rule never turns yellow, just goes from white to red
"RTN","C9CORIDE",173,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",174,0)
 ..S C9CRET=0
"RTN","C9CORIDE",175,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,15,12))) D
"RTN","C9CORIDE",176,0)
 ...S C9CRET=1 ;turns yellow on the day due, stays yellow for fifteen days after
"RTN","C9CORIDE",177,0)
 I TITLE="NURSING CARE PLANS" D
"RTN","C9CORIDE",178,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",179,0)
 ..S C9CRET=0 ;this rule never turns yellow, just goes from white to red
"RTN","C9CORIDE",180,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;for this rule, basedate is always noon
"RTN","C9CORIDE",181,0)
 ..S C9CRET=0
"RTN","C9CORIDE",182,0)
 ..I (OFFSET<3) D
"RTN","C9CORIDE",183,0)
 ...I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,,12))) S C9CRET=1 ;goes yellow at noon, stays yellow until midnight
"RTN","C9CORIDE",184,0)
 ..I (OFFSET>2) D
"RTN","C9CORIDE",185,0)
 ...I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,,12))) S C9CRET=1 ;yellow on the day due
"RTN","C9CORIDE",186,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",187,0)
 ..S C9CRET=0
"RTN","C9CORIDE",188,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,5,12))) D
"RTN","C9CORIDE",189,0)
 ...S C9CRET=1 ;turns yellow on the day due, stays yellow for five days after
"RTN","C9CORIDE",190,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",191,0)
 ..S C9CRET=0
"RTN","C9CORIDE",192,0)
 ..I ((C9CNOW>$$FMADD^XLFDT(BASEDATE,,-12))&(C9CNOW<$$FMADD^XLFDT(BASEDATE,15,12))) D
"RTN","C9CORIDE",193,0)
 ...S C9CRET=1 ;turns yellow on the day due, stays yellow for fifteen days after
"RTN","C9CORIDE",194,0)
 Q C9CRET
"RTN","C9CORIDE",195,0)
OVERDUE(RPOINT,TITLIEN,BASEDATE,OFFSET) ;return 0 for false, 1 for true
"RTN","C9CORIDE",196,0)
 ;RPOINT - pointer to rule definition if file 300892
"RTN","C9CORIDE",197,0)
 ;TITLIEN - pointer to document definition in file 8925.1
"RTN","C9CORIDE",198,0)
 ;BASEDATE - current due date being evaluated in fileman format
"RTN","C9CORIDE",199,0)
 ;OFFSET - number of days or hours for X days, X hours rules, otherwise zero
"RTN","C9CORIDE",200,0)
 N C9CRET ;return value for this function
"RTN","C9CORIDE",201,0)
 S C9CRET=0
"RTN","C9CORIDE",202,0)
 I $G(TITLIEN)'>0 Q C9CRET
"RTN","C9CORIDE",203,0)
 I $G(RPOINT)'>0 Q C9CRET
"RTN","C9CORIDE",204,0)
 I $G(BASEDATE)'>0 Q C9CRET
"RTN","C9CORIDE",205,0)
 N TITLE
"RTN","C9CORIDE",206,0)
 S TITLE=$$TRIM^XLFSTR($P($G(^TIU(8925.1,TITLIEN,0)),"^",1))
"RTN","C9CORIDE",207,0)
 I TITLE="" Q C9CRET
"RTN","C9CORIDE",208,0)
 N C9CNOW
"RTN","C9CORIDE",209,0)
 S C9CNOW=$$NOW^XLFDT
"RTN","C9CORIDE",210,0)
 ;Following sets the default logic for each rule
"RTN","C9CORIDE",211,0)
 N RULETEXT
"RTN","C9CORIDE",212,0)
 S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CORIDE",213,0)
 I RULETEXT="" Q C9CRET
"RTN","C9CORIDE",214,0)
 ;Following runs the default code
"RTN","C9CORIDE",215,0)
 I ((C9CNOW>BASEDATE)!(C9CNOW=BASEDATE)) S C9CRET=1
"RTN","C9CORIDE",216,0)
 ;Following sections are for individual titles.  If the title does not show up here, defaults remain
"RTN","C9CORIDE",217,0)
OVORIDE ;label used for override logic RPC
"RTN","C9CORIDE",218,0)
 I TITLE="MEDICAL REVIEW-PERIODIC" D
"RTN","C9CORIDE",219,0)
 .I ((RULETEXT="ONE TIME - ADMIT DATE + X DAYS")!(RULETEXT="ANNUALLY BASED ON ADMIT DATE + X DAYS")) D
"RTN","C9CORIDE",220,0)
 ..S C9CRET=0
"RTN","C9CORIDE",221,0)
 ..I (OFFSET<180) D
"RTN","C9CORIDE",222,0)
 ...I ((BASEDATE<C9CNOW)&(C9CNOW>($$FMADD^XLFDT(BASEDATE,7)))) D
"RTN","C9CORIDE",223,0)
 ....S C9CRET=1
"RTN","C9CORIDE",224,0)
 ..I (OFFSET>179) D
"RTN","C9CORIDE",225,0)
 ...I ((BASEDATE<C9CNOW)&(C9CNOW>($$FMADD^XLFDT(BASEDATE,15)))) D
"RTN","C9CORIDE",226,0)
 ....S C9CRET=1
"RTN","C9CORIDE",227,0)
 I TITLE="MEDICAL HISTORY AND PHYSICAL ASSESSMENT" D
"RTN","C9CORIDE",228,0)
 .I (RULETEXT="ANNUALLY BASED ON ADMIT DATE") D
"RTN","C9CORIDE",229,0)
 ..S C9CRET=0
"RTN","C9CORIDE",230,0)
 ..I ((BASEDATE<C9CNOW)&(C9CNOW>($$FMADD^XLFDT(BASEDATE,15)))) D
"RTN","C9CORIDE",231,0)
 ...S C9CRET=1
"RTN","C9CORIDE",232,0)
 I TITLE="NURSING ASSESSMENT 24/48 HOUR" D
"RTN","C9CORIDE",233,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CORIDE",234,0)
 ..S C9CRET=0
"RTN","C9CORIDE",235,0)
 ..I (($$FMADD^XLFDT(BASEDATE,,12))<C9CNOW) S C9CRET=1 ;noon plus 12 hours
"RTN","C9CORIDE",236,0)
 I TITLE="NURSING ASSESSMENT MONTHLY/WEEKLY" D
"RTN","C9CORIDE",237,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CORIDE",238,0)
 ..S C9CRET=0
"RTN","C9CORIDE",239,0)
 ..I (($$FMADD^XLFDT(BASEDATE,,12))<C9CNOW) S C9CRET=1 ;noon plus 12 hours
"RTN","C9CORIDE",240,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",241,0)
 ..S C9CRET=0
"RTN","C9CORIDE",242,0)
 ..I (($$FMADD^XLFDT(BASEDATE,5,12))<C9CNOW) S C9CRET=1 ;5 days and 12 hours
"RTN","C9CORIDE",243,0)
 I TITLE="NURSING ASSESSMENT INITIAL ANNUAL" D
"RTN","C9CORIDE",244,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",245,0)
 ..S C9CRET=0
"RTN","C9CORIDE",246,0)
 ..I (C9CNOW>($$FMADD^XLFDT(BASEDATE,,8))) S C9CRET=1 ;overdue after the 8 hours
"RTN","C9CORIDE",247,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",248,0)
 ..S C9CRET=0
"RTN","C9CORIDE",249,0)
 ..I (C9CNOW>$$FMADD^XLFDT(BASEDATE,15,12)) D ;overdue 15 days and 12 hours after
"RTN","C9CORIDE",250,0)
 ...S C9CRET=1
"RTN","C9CORIDE",251,0)
 I TITLE="NURSING CARE PLANS" D
"RTN","C9CORIDE",252,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",253,0)
 ..S C9CRET=0
"RTN","C9CORIDE",254,0)
 ..I (C9CNOW>($$FMADD^XLFDT(BASEDATE,,8))) S C9CRET=1 ;overdue after the 8 hours
"RTN","C9CORIDE",255,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;for this rule, basedate is always noon
"RTN","C9CORIDE",256,0)
 ..S C9CRET=0
"RTN","C9CORIDE",257,0)
 ..I (OFFSET<3) D
"RTN","C9CORIDE",258,0)
 ...I (C9CNOW>$$FMADD^XLFDT(BASEDATE,,12)) S C9CRET=1 ;goes red at midnight
"RTN","C9CORIDE",259,0)
 ..I (OFFSET>2) D
"RTN","C9CORIDE",260,0)
 ...I (C9CNOW>$$FMADD^XLFDT(BASEDATE,5,12)) D ;overdue 5 days and 12 hours after
"RTN","C9CORIDE",261,0)
 ...S C9CRET=1
"RTN","C9CORIDE",262,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",263,0)
 ..S C9CRET=0
"RTN","C9CORIDE",264,0)
 ..I (C9CNOW>$$FMADD^XLFDT(BASEDATE,5,12)) D ;overdue 5 days and 12 hours after
"RTN","C9CORIDE",265,0)
 ...S C9CRET=1
"RTN","C9CORIDE",266,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",267,0)
 ..S C9CRET=0
"RTN","C9CORIDE",268,0)
 ..I (C9CNOW>$$FMADD^XLFDT(BASEDATE,15,12)) D ;overdue 15 days and 12 hours after
"RTN","C9CORIDE",269,0)
 ...S C9CRET=1
"RTN","C9CORIDE",270,0)
 Q C9CRET
"RTN","C9CORIDE",271,0)
GETABD(RPOINT,TITLIEN,OFFSET,DEFLT) ;return ACCEPTABLE BASEDATE DELTA
"RTN","C9CORIDE",272,0)
 ;RPOINT - pointer to rule definition if file 300892
"RTN","C9CORIDE",273,0)
 ;TITLIEN - pointer to document definition in file 8925.1
"RTN","C9CORIDE",274,0)
 ;OFFSET - number of days or hours chosen in the gui for X DAYS or X HOURS, never both
"RTN","C9CORIDE",275,0)
 ;DEFLT - default ABD if not overridden below in the individual titles section
"RTN","C9CORIDE",276,0)
 N C9CRET ;return value for this function
"RTN","C9CORIDE",277,0)
 S C9CRET=$G(DEFLT)
"RTN","C9CORIDE",278,0)
 I C9CRET="" S C9CRET="2.4"
"RTN","C9CORIDE",279,0)
 I $G(TITLIEN)'>0 Q C9CRET
"RTN","C9CORIDE",280,0)
 I $G(RPOINT)'>0 Q C9CRET
"RTN","C9CORIDE",281,0)
 N TITLE
"RTN","C9CORIDE",282,0)
 S TITLE=$$TRIM^XLFSTR($P($G(^TIU(8925.1,TITLIEN,0)),"^",1))
"RTN","C9CORIDE",283,0)
 I TITLE="" Q C9CRET
"RTN","C9CORIDE",284,0)
 N C9CNOW
"RTN","C9CORIDE",285,0)
 S C9CNOW=$$NOW^XLFDT
"RTN","C9CORIDE",286,0)
 ;Following sets the default logic for each rule
"RTN","C9CORIDE",287,0)
 N RULETEXT
"RTN","C9CORIDE",288,0)
 S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CORIDE",289,0)
 I RULETEXT="" Q C9CRET
"RTN","C9CORIDE",290,0)
 ;Default return value is set above
"RTN","C9CORIDE",291,0)
 ;Following sections are for individual titles.  If the title and rule do not show up here, defaults remain
"RTN","C9CORIDE",292,0)
ABDORIDE ;label used for override logic RPC
"RTN","C9CORIDE",293,0)
 I TITLE="NURSING ASSESSMENT 24/48 HOUR" D
"RTN","C9CORIDE",294,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CORIDE",295,0)
 ..S C9CRET="0.12" ;12 hours before noon and 12 hours after noon
"RTN","C9CORIDE",296,0)
 I TITLE="NURSING ASSESSMENT MONTHLY/WEEKLY" D
"RTN","C9CORIDE",297,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D
"RTN","C9CORIDE",298,0)
 ..S C9CRET="0.12" ;12 hours before noon and 12 hours after noon
"RTN","C9CORIDE",299,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",300,0)
 ..S C9CRET="5.5"
"RTN","C9CORIDE",301,0)
 I TITLE="NURSING ASSESSMENT INITIAL ANNUAL" D
"RTN","C9CORIDE",302,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",303,0)
 ..S C9CRET="0.8" ;eight hours before and after admission
"RTN","C9CORIDE",304,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",305,0)
 ..S C9CRET="15.5" ;15 days and 12 hours prior and after
"RTN","C9CORIDE",306,0)
 I TITLE="NURSING CARE PLANS" D
"RTN","C9CORIDE",307,0)
 .I RULETEXT="ONE TIME - ADMIT DATE + X HOURS" D
"RTN","C9CORIDE",308,0)
 ..S C9CRET="0.8" ;eight hours before and after admission
"RTN","C9CORIDE",309,0)
 .I RULETEXT="ONE TIME - ADMISSION DAY PLUS X DAYS" D ;for this rule, basedate is always noon
"RTN","C9CORIDE",310,0)
 ..S C9CRET=0
"RTN","C9CORIDE",311,0)
 ..I (OFFSET<3) D
"RTN","C9CORIDE",312,0)
 ...S C9CRET="0.12" ;12 hours before noon and 12 hours after noon
"RTN","C9CORIDE",313,0)
 ..I (OFFSET>2) D
"RTN","C9CORIDE",314,0)
 ...S C9CRET="0.12" ;12 hours before noon and 12 hours after noon
"RTN","C9CORIDE",315,0)
 .I RULETEXT="EACH MONTH BASED ON ADMIT DATE STARTING MONTH THREE SKIP EACH MONTH 12" D
"RTN","C9CORIDE",316,0)
 ..S C9CRET="5.5" ;5 days and 5 hours prior and after
"RTN","C9CORIDE",317,0)
 .I RULETEXT="ANNUALLY BASED ON ADMISSION DAY" D
"RTN","C9CORIDE",318,0)
 ..S C9CRET="15.5" ;15 days and 12 hours prior and after
"RTN","C9CORIDE",319,0)
 I TITLE="MEDICAL REVIEW-PERIODIC" D
"RTN","C9CORIDE",320,0)
 .I ((RULETEXT="ONE TIME - ADMIT DATE + X DAYS")!(RULETEXT="ANNUALLY BASED ON ADMIT DATE + X DAYS")) D
"RTN","C9CORIDE",321,0)
 ..I OFFSET<91 S C9CRET="7.0"
"RTN","C9CORIDE",322,0)
 ..I OFFSET>90 S C9CRET="15.0"
"RTN","C9CORIDE",323,0)
 Q C9CRET 
"RTN","C9CORIDE",324,0)
GETOR(C9CRET,RPOINT,TITLIEN) ;get associated override code sections
"RTN","C9CORIDE",325,0)
 Q:$G(RPOINT)'>0
"RTN","C9CORIDE",326,0)
 Q:$G(TITLIEN)'>0
"RTN","C9CORIDE",327,0)
 ;first get title name
"RTN","C9CORIDE",328,0)
 N TITLE
"RTN","C9CORIDE",329,0)
 S TITLE=$$TRIM^XLFSTR($P($G(^TIU(8925.1,TITLIEN,0)),"^",1))
"RTN","C9CORIDE",330,0)
 Q:TITLE=""
"RTN","C9CORIDE",331,0)
 N RULETEXT
"RTN","C9CORIDE",332,0)
 S RULETEXT=$P($G(^C9C(300892,RPOINT,0)),"^",1)
"RTN","C9CORIDE",333,0)
 Q:RULETEXT=""
"RTN","C9CORIDE",334,0)
 N CNT
"RTN","C9CORIDE",335,0)
 S CNT=0
"RTN","C9CORIDE",336,0)
 S C9CRET($I(CNT))="Title: "_TITLE
"RTN","C9CORIDE",337,0)
 S C9CRET($I(CNT))="Rule: "_RULETEXT
"RTN","C9CORIDE",338,0)
 N BLNKCNT ;counts blank lines
"RTN","C9CORIDE",339,0)
 S BLNKCNT=0
"RTN","C9CORIDE",340,0)
 N DONE
"RTN","C9CORIDE",341,0)
 S DONE=0
"RTN","C9CORIDE",342,0)
 N TX
"RTN","C9CORIDE",343,0)
 ;start with shown logic
"RTN","C9CORIDE",344,0)
 S C9CRET($I(CNT))=""
"RTN","C9CORIDE",345,0)
 S C9CRET($I(CNT))="Following is override logic that determines timeframe for showing this entry:"
"RTN","C9CORIDE",346,0)
 S C9CRET($I(CNT))="-----------------------------------------------------------------------------"
"RTN","C9CORIDE",347,0)
 F TX=1:1 Q:((BLNKCNT>3)!(DONE>0))  D
"RTN","C9CORIDE",348,0)
 .N TEXTLINE
"RTN","C9CORIDE",349,0)
 .S TEXTLINE=$T(SWORIDE+TX)
"RTN","C9CORIDE",350,0)
 .I TEXTLINE="" S BLNKCNT=BLNKCNT+1
"RTN","C9CORIDE",351,0)
 .I $F(TEXTLINE,"NEARLY(")=8 S DONE=1
"RTN","C9CORIDE",352,0)
 .I $F(TEXTLINE,"TITLE="""_TITLE_"")>0 D
"RTN","C9CORIDE",353,0)
 ..S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",354,0)
 ..N BLINES ;blank lines
"RTN","C9CORIDE",355,0)
 ..S BLINES=0
"RTN","C9CORIDE",356,0)
 ..N SUBDONE
"RTN","C9CORIDE",357,0)
 ..S SUBDONE=0
"RTN","C9CORIDE",358,0)
 ..F TX=TX+1:1 Q:((BLINES>3)!(SUBDONE>0))  D
"RTN","C9CORIDE",359,0)
 ...S TEXTLINE=$T(SWORIDE+TX)
"RTN","C9CORIDE",360,0)
 ...I TEXTLINE="" S BLINES=BLINES+1 Q
"RTN","C9CORIDE",361,0)
 ...I $F(TEXTLINE,"NEARLY(")=8 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",362,0)
 ...I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SUBDONE=1 Q
"RTN","C9CORIDE",363,0)
 ...I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")>0 D
"RTN","C9CORIDE",364,0)
 ....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",365,0)
 ....N BL ;blank lines
"RTN","C9CORIDE",366,0)
 ....S BL=0
"RTN","C9CORIDE",367,0)
 ....N SD
"RTN","C9CORIDE",368,0)
 ....S SD=0
"RTN","C9CORIDE",369,0)
 ....F TX=TX+1:1 Q:((BL>3)!(SD>0))  D
"RTN","C9CORIDE",370,0)
 .....S TEXTLINE=$T(SWORIDE+TX)
"RTN","C9CORIDE",371,0)
 .....I TEXTLINE="" S BL=BL+1 Q
"RTN","C9CORIDE",372,0)
 .....I $F(TEXTLINE,"NEARLY(")=8 S SD=1 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",373,0)
 .....I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",374,0)
 .....I $F(TEXTLINE,"RULETEXT=")>0 I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",375,0)
 .....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",376,0)
 ;then check nearly due logic
"RTN","C9CORIDE",377,0)
 S C9CRET($I(CNT))=""
"RTN","C9CORIDE",378,0)
 S C9CRET($I(CNT))="Following is override logic that determines coloring this entry yellow:"
"RTN","C9CORIDE",379,0)
 S C9CRET($I(CNT))="-----------------------------------------------------------------------------"
"RTN","C9CORIDE",380,0)
 S BLNKCNT=0
"RTN","C9CORIDE",381,0)
 S DONE=0
"RTN","C9CORIDE",382,0)
 F TX=1:1 Q:((BLNKCNT>3)!(DONE>0))  D
"RTN","C9CORIDE",383,0)
 .N TEXTLINE
"RTN","C9CORIDE",384,0)
 .S TEXTLINE=$T(NORIDE+TX)
"RTN","C9CORIDE",385,0)
 .I TEXTLINE="" S BLNKCNT=BLNKCNT+1
"RTN","C9CORIDE",386,0)
 .I $F(TEXTLINE,"OVERDUE(")=9 S DONE=1
"RTN","C9CORIDE",387,0)
 .I $F(TEXTLINE,"TITLE="""_TITLE_"")>0 D
"RTN","C9CORIDE",388,0)
 ..S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",389,0)
 ..N BLINES ;blank lines
"RTN","C9CORIDE",390,0)
 ..S BLINES=0
"RTN","C9CORIDE",391,0)
 ..N SUBDONE
"RTN","C9CORIDE",392,0)
 ..S SUBDONE=0
"RTN","C9CORIDE",393,0)
 ..F TX=TX+1:1 Q:((BLINES>3)!(SUBDONE>0))  D
"RTN","C9CORIDE",394,0)
 ...S TEXTLINE=$T(NORIDE+TX)
"RTN","C9CORIDE",395,0)
 ...I TEXTLINE="" S BLINES=BLINES+1 Q
"RTN","C9CORIDE",396,0)
 ...I $F(TEXTLINE,"OVERDUE(")=9 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",397,0)
 ...I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SUBDONE=1 Q
"RTN","C9CORIDE",398,0)
 ...I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")>0 D
"RTN","C9CORIDE",399,0)
 ....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",400,0)
 ....N BL ;blank lines
"RTN","C9CORIDE",401,0)
 ....S BL=0
"RTN","C9CORIDE",402,0)
 ....N SD
"RTN","C9CORIDE",403,0)
 ....S SD=0
"RTN","C9CORIDE",404,0)
 ....F TX=TX+1:1 Q:((BL>3)!(SD>0))  D
"RTN","C9CORIDE",405,0)
 .....S TEXTLINE=$T(NORIDE+TX)
"RTN","C9CORIDE",406,0)
 .....I TEXTLINE="" S BL=BL+1 Q
"RTN","C9CORIDE",407,0)
 .....I $F(TEXTLINE,"OVERDUE(")=9 S SD=1 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",408,0)
 .....I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",409,0)
 .....I $F(TEXTLINE,"RULETEXT=")>0 I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",410,0)
 .....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",411,0)
 ;then check overdue logic
"RTN","C9CORIDE",412,0)
 S C9CRET($I(CNT))=""
"RTN","C9CORIDE",413,0)
 S C9CRET($I(CNT))="Following is override logic that determines coloring this entry red:"
"RTN","C9CORIDE",414,0)
 S C9CRET($I(CNT))="-----------------------------------------------------------------------------"
"RTN","C9CORIDE",415,0)
 S BLNKCNT=0
"RTN","C9CORIDE",416,0)
 S DONE=0
"RTN","C9CORIDE",417,0)
 F TX=1:1 Q:((BLNKCNT>3)!(DONE>0))  D
"RTN","C9CORIDE",418,0)
 .N TEXTLINE
"RTN","C9CORIDE",419,0)
 .S TEXTLINE=$T(OVORIDE+TX)
"RTN","C9CORIDE",420,0)
 .I TEXTLINE="" S BLNKCNT=BLNKCNT+1
"RTN","C9CORIDE",421,0)
 .I $F(TEXTLINE,"GETABD(")=8 S DONE=1
"RTN","C9CORIDE",422,0)
 .I $F(TEXTLINE,"TITLE="""_TITLE_"")>0 D
"RTN","C9CORIDE",423,0)
 ..S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",424,0)
 ..N BLINES ;blank lines
"RTN","C9CORIDE",425,0)
 ..S BLINES=0
"RTN","C9CORIDE",426,0)
 ..N SUBDONE
"RTN","C9CORIDE",427,0)
 ..S SUBDONE=0
"RTN","C9CORIDE",428,0)
 ..F TX=TX+1:1 Q:((BLINES>3)!(SUBDONE>0))  D
"RTN","C9CORIDE",429,0)
 ...S TEXTLINE=$T(OVORIDE+TX)
"RTN","C9CORIDE",430,0)
 ...I TEXTLINE="" S BLINES=BLINES+1 Q
"RTN","C9CORIDE",431,0)
 ...I $F(TEXTLINE,"GETABD(")=8 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",432,0)
 ...I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SUBDONE=1 Q
"RTN","C9CORIDE",433,0)
 ...I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")>0 D
"RTN","C9CORIDE",434,0)
 ....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",435,0)
 ....N BL ;blank lines
"RTN","C9CORIDE",436,0)
 ....S BL=0
"RTN","C9CORIDE",437,0)
 ....N SD
"RTN","C9CORIDE",438,0)
 ....S SD=0
"RTN","C9CORIDE",439,0)
 ....F TX=TX+1:1 Q:((BL>3)!(SD>0))  D
"RTN","C9CORIDE",440,0)
 .....S TEXTLINE=$T(OVORIDE+TX)
"RTN","C9CORIDE",441,0)
 .....I TEXTLINE="" S BL=BL+1 Q
"RTN","C9CORIDE",442,0)
 .....I $F(TEXTLINE,"GETABD(")=8 S SD=1 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",443,0)
 .....I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",444,0)
 .....I $F(TEXTLINE,"RULETEXT=")>0 I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",445,0)
 .....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",446,0)
 ;then check grace days(abd) logic
"RTN","C9CORIDE",447,0)
 S C9CRET($I(CNT))=""
"RTN","C9CORIDE",448,0)
 S C9CRET($I(CNT))="Following is override logic that determines grace days for this entry:"
"RTN","C9CORIDE",449,0)
 S C9CRET($I(CNT))="-----------------------------------------------------------------------------"
"RTN","C9CORIDE",450,0)
 S BLNKCNT=0
"RTN","C9CORIDE",451,0)
 S DONE=0
"RTN","C9CORIDE",452,0)
 F TX=1:1 Q:((BLNKCNT>3)!(DONE>0))  D
"RTN","C9CORIDE",453,0)
 .N TEXTLINE
"RTN","C9CORIDE",454,0)
 .S TEXTLINE=$T(ABDORIDE+TX)
"RTN","C9CORIDE",455,0)
 .I TEXTLINE="" S BLNKCNT=BLNKCNT+1
"RTN","C9CORIDE",456,0)
 .I $F(TEXTLINE,"GETOR(")=7 S DONE=1
"RTN","C9CORIDE",457,0)
 .I $F(TEXTLINE,"TITLE="""_TITLE_"")>0 D
"RTN","C9CORIDE",458,0)
 ..S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",459,0)
 ..N BLINES ;blank lines
"RTN","C9CORIDE",460,0)
 ..S BLINES=0
"RTN","C9CORIDE",461,0)
 ..N SUBDONE
"RTN","C9CORIDE",462,0)
 ..S SUBDONE=0
"RTN","C9CORIDE",463,0)
 ..F TX=TX+1:1 Q:((BLINES>3)!(SUBDONE>0))  D
"RTN","C9CORIDE",464,0)
 ...S TEXTLINE=$T(ABDORIDE+TX)
"RTN","C9CORIDE",465,0)
 ...I TEXTLINE="" S BLINES=BLINES+1 Q
"RTN","C9CORIDE",466,0)
 ...I $F(TEXTLINE,"GETOR(")=7 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",467,0)
 ...I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SUBDONE=1 Q
"RTN","C9CORIDE",468,0)
 ...I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")>0 D
"RTN","C9CORIDE",469,0)
 ....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",470,0)
 ....N BL ;blank lines
"RTN","C9CORIDE",471,0)
 ....S BL=0
"RTN","C9CORIDE",472,0)
 ....N SD
"RTN","C9CORIDE",473,0)
 ....S SD=0
"RTN","C9CORIDE",474,0)
 ....F TX=TX+1:1 Q:((BL>3)!(SD>0))  D
"RTN","C9CORIDE",475,0)
 .....S TEXTLINE=$T(ABDORIDE+TX)
"RTN","C9CORIDE",476,0)
 .....I TEXTLINE="" S BL=BL+1 Q
"RTN","C9CORIDE",477,0)
 .....I $F(TEXTLINE,"GETOR(")=7 S SD=1 S SUBDONE=1 S DONE=1 Q
"RTN","C9CORIDE",478,0)
 .....I $F(TEXTLINE,"TITLE=")>0 I $F(TEXTLINE,"TITLE="""_TITLE_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",479,0)
 .....I $F(TEXTLINE,"RULETEXT=")>0 I $F(TEXTLINE,"RULETEXT="""_RULETEXT_"")'>0 S SD=1 S SUBDONE=1 Q
"RTN","C9CORIDE",480,0)
 .....S C9CRET($I(CNT))=TEXTLINE
"RTN","C9CORIDE",481,0)
 Q 
"RTN","C9CRTRPT")
0^19^B238359
"RTN","C9CRTRPT",1,0)
C9CRTRPT ;;CRH JHT 2014 Get Injection Sites for Specific Routes
"RTN","C9CRTRPT",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CRTRPT",3,0)
 ;
"RTN","C9CRTRPT",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CRTRPT",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CRTRPT",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CRTRPT",7,0)
 ;
"RTN","C9CRTRPT",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CRTRPT",9,0)
 ;
"RTN","C9CRTRPT",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CRTRPT",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CRTRPT",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CRTRPT",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CRTRPT",14,0)
 ;limitations under the License.
"RTN","C9CRTRPT",15,0)
 Q ;;no entry from top
"RTN","C9CRTRPT",16,0)
RPC(C9CRET,C9CSTRT,C9CEND,C9CROUTE,C9CWARD)
"RTN","C9CRTRPT",17,0)
 ;C9CRET=Return Array
"RTN","C9CRTRPT",18,0)
 ;C9CSTRT=Start Date
"RTN","C9CRTRPT",19,0)
 ;C9CEND=End Date
"RTN","C9CRTRPT",20,0)
 ;C9CROUTE=Name of Route pointed to in File 51.2
"RTN","C9CRTRPT",21,0)
 ;C9CWARD=Name of Ward or empty string for all wards
"RTN","C9CRTRPT",22,0)
 S C9CWARD=$G(C9CWARD)
"RTN","C9CRTRPT",23,0)
 N C9CI
"RTN","C9CRTRPT",24,0)
 S C9CI=0
"RTN","C9CRTRPT",25,0)
 I $G(C9CROUTE)="" S C9CRET(0)="Must provide valid route" Q
"RTN","C9CRTRPT",26,0)
 N ROUTEIEN
"RTN","C9CRTRPT",27,0)
 S ROUTEIEN=0
"RTN","C9CRTRPT",28,0)
 S ROUTEIEN=$O(^PS(51.2,"B",C9CROUTE,0))
"RTN","C9CRTRPT",29,0)
 I ROUTEIEN'>0 S C9CRET(0)="Must provide valid route" Q
"RTN","C9CRTRPT",30,0)
 ;;Index "C9CDDWPO" on file 53.79 uses division,date,ward_roombed,patient,order
"RTN","C9CRTRPT",31,0)
 I C9CSTRT="" S C9CRET(0)="No Start Date Provided!" Q
"RTN","C9CRTRPT",32,0)
 I C9CEND="" S C9CRET(0)="No End Date Provided!" Q
"RTN","C9CRTRPT",33,0)
 I $G(DUZ(2))'>0 S C9CRET(0)="No Division!" Q
"RTN","C9CRTRPT",34,0)
 N X,Y
"RTN","C9CRTRPT",35,0)
 S X=C9CSTRT D ^%DT
"RTN","C9CRTRPT",36,0)
 S C9CSTRT=Y+.000000
"RTN","C9CRTRPT",37,0)
 S X=C9CEND D ^%DT
"RTN","C9CRTRPT",38,0)
 S C9CEND=Y+.235959
"RTN","C9CRTRPT",39,0)
 S C9CRET(C9CI)="Injection Site Report Printed: "_$$FMTE^XLFDT($$NOW^XLFDT)
"RTN","C9CRTRPT",40,0)
 S C9CI=C9CI+1
"RTN","C9CRTRPT",41,0)
 S C9CRET(C9CI)="Date Range: "_$$FMTE^XLFDT(C9CSTRT)_" thru "_$$FMTE^XLFDT(C9CEND)
"RTN","C9CRTRPT",42,0)
 S C9CI=C9CI+1
"RTN","C9CRTRPT",43,0)
 S C9CRET(C9CI)="Route Selected: "_C9CROUTE
"RTN","C9CRTRPT",44,0)
 S C9CI=C9CI+1
"RTN","C9CRTRPT",45,0)
 N C9CINST S C9CINST=$P($G(^DIC(4,DUZ(2),0)),"^",1)
"RTN","C9CRTRPT",46,0)
 S C9CRET(C9CI)="Division: "_C9CINST
"RTN","C9CRTRPT",47,0)
 S C9CI=C9CI+1
"RTN","C9CRTRPT",48,0)
 S C9CRET(C9CI)="Ward Selected: "
"RTN","C9CRTRPT",49,0)
 I C9CWARD="" S C9CRET(C9CI)=C9CRET(C9CI)_"ALL"
"RTN","C9CRTRPT",50,0)
 I C9CWARD]"" S C9CRET(C9CI)=C9CRET(C9CI)_C9CWARD
"RTN","C9CRTRPT",51,0)
 S C9CI=C9CI+1
"RTN","C9CRTRPT",52,0)
 S C9CRET(C9CI)=""
"RTN","C9CRTRPT",53,0)
 N C9CDATE
"RTN","C9CRTRPT",54,0)
 N C9CTMP,C9CT
"RTN","C9CRTRPT",55,0)
 S C9CT=0
"RTN","C9CRTRPT",56,0)
 S C9CDATE=C9CSTRT F  S C9CDATE=$O(^PSB(53.79,"C9CDDWPO",C9CDATE)) Q:((+$G(C9CDATE)=0)!(+$G(C9CDATE)>C9CEND))  D
"RTN","C9CRTRPT",57,0)
 .N C9CLOC
"RTN","C9CRTRPT",58,0)
 .S C9CLOC="" F  S C9CLOC=$O(^PSB(53.79,"C9CDDWPO",C9CDATE,DUZ(2),C9CLOC)) Q:C9CLOC=""  D
"RTN","C9CRTRPT",59,0)
 ..I ((C9CWARD="")!($E(C9CLOC,1,$L(C9CWARD))=C9CWARD)) D
"RTN","C9CRTRPT",60,0)
 ...N C9CDFN
"RTN","C9CRTRPT",61,0)
 ...S C9CDFN=0 F  S C9CDFN=$O(^PSB(53.79,"C9CDDWPO",C9CDATE,DUZ(2),C9CLOC,C9CDFN)) Q:C9CDFN'>0  D
"RTN","C9CRTRPT",62,0)
 ....I $$OK^MSCDPTID(C9CDFN) D
"RTN","C9CRTRPT",63,0)
 .....N C9CPHNUM
"RTN","C9CRTRPT",64,0)
 .....S C9CPHNUM="" F  S C9CPHNUM=$O(^PSB(53.79,"C9CDDWPO",C9CDATE,DUZ(2),C9CLOC,C9CDFN,C9CPHNUM)) Q:C9CPHNUM=""  D
"RTN","C9CRTRPT",65,0)
 ......N C9CBIEN
"RTN","C9CRTRPT",66,0)
 ......S C9CBIEN=$O(^PSB(53.79,"C9CDDWPO",C9CDATE,DUZ(2),C9CLOC,C9CDFN,C9CPHNUM,0))
"RTN","C9CRTRPT",67,0)
 ......I $G(C9CBIEN)>0 D
"RTN","C9CRTRPT",68,0)
 .......N UDORIV
"RTN","C9CRTRPT",69,0)
 .......I C9CPHNUM["V" S UDORIV="V" ;IV
"RTN","C9CRTRPT",70,0)
 .......I C9CPHNUM["U" S UDORIV="U" ;Unit Dose
"RTN","C9CRTRPT",71,0)
 .......N C9CPHIEN
"RTN","C9CRTRPT",72,0)
 .......S C9CPHIEN=$O(^PS(55,"B",C9CDFN,0))
"RTN","C9CRTRPT",73,0)
 .......I +C9CPHIEN>0 D
"RTN","C9CRTRPT",74,0)
 ........N OROUTE S OROUTE=0
"RTN","C9CRTRPT",75,0)
 ........I UDORIV="V" S OROUTE=$P($G(^PS(55,C9CDFN,"IV",+C9CPHNUM,.2)),"^",3)
"RTN","C9CRTRPT",76,0)
 ........I UDORIV="U" S OROUTE=$P($G(^PS(55,C9CDFN,5,+C9CPHNUM,0)),"^",3)
"RTN","C9CRTRPT",77,0)
 ........I OROUTE=ROUTEIEN D
"RTN","C9CRTRPT",78,0)
 .........N C9COIEN,C9COI
"RTN","C9CRTRPT",79,0)
 .........S C9COIEN=+$P($G(^PSB(53.79,C9CBIEN,0)),"^",8)
"RTN","C9CRTRPT",80,0)
 .........S C9CITEM="" I C9COIEN>0 S C9CITEM=$P($G(^PS(50.7,C9COIEN,0)),"^",1) 
"RTN","C9CRTRPT",81,0)
 .........N C9CISITE S C9CISITE=$P($G(^PSB(53.79,C9CBIEN,.1)),"^",6)
"RTN","C9CRTRPT",82,0)
 .........N C9CSTS S C9CSTS=$P($G(^PSB(53.79,C9CBIEN,0)),"^",9)
"RTN","C9CRTRPT",83,0)
 .........S C9CSTS=$S(C9CSTS="G":"GIVEN",C9CSTS="H":"HELD",C9CSTS="R":"REFUSED",C9CSTS="N":"NOT GIVEN",C9CSTS="RM":"REMOVED",C9CSTS="I":"INFUSING",C9CSTS="S":"STOPPED",C9CSTS="C":"COMPLETED",C9CSTS="M":"MISSING DOSE",1:C9CSTS)
"RTN","C9CRTRPT",84,0)
 .........N OUTDATE S OUTDATE=$$FMTE^XLFDT(C9CDATE)
"RTN","C9CRTRPT",85,0)
 .........N C9CPAT S C9CPAT=$P($G(^DPT(C9CDFN,0)),"^",1)
"RTN","C9CRTRPT",86,0)
 .........S C9CT=C9CT+1
"RTN","C9CRTRPT",87,0)
 .........S C9CTMP(C9CPAT,C9CDFN,C9CT)=C9CPAT_"^"_C9CLOC_"^"_OUTDATE_"^"_C9CITEM_"^"_C9CSTS_"^"_C9CISITE
"RTN","C9CRTRPT",88,0)
 I $D(C9CTMP) D
"RTN","C9CRTRPT",89,0)
 .N C9CQ,C9CP
"RTN","C9CRTRPT",90,0)
 .S C9CP="" F  S C9CP=$O(C9CTMP(C9CP)) Q:C9CP=""  D 
"RTN","C9CRTRPT",91,0)
 ..S C9CQ=0 F  S C9CQ=$O(C9CTMP(C9CP,C9CQ)) Q:C9CQ'>0  D
"RTN","C9CRTRPT",92,0)
 ...N C9CR
"RTN","C9CRTRPT",93,0)
 ...S C9CR=0 F  S C9CR=$O(C9CTMP(C9CP,C9CQ,C9CR)) Q:C9CR'>0  D
"RTN","C9CRTRPT",94,0)
 ....S C9CRET(C9CI)="--------------------------------------------------------------------"
"RTN","C9CRTRPT",95,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",96,0)
 ....S C9CRET(C9CI)="Patient: "_$P($G(C9CTMP(C9CP,C9CQ,C9CR)),"^",1)
"RTN","C9CRTRPT",97,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",98,0)
 ....S C9CRET(C9CI)="Patient Ward/Room/Bed When Administered: "_$P($G(C9CTMP(C9CP,C9CQ,C9CR)),"^",2)
"RTN","C9CRTRPT",99,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",100,0)
 ....S C9CRET(C9CI)="Date/Time: "_$P($G(C9CTMP(C9CP,C9CQ,C9CR)),"^",3)
"RTN","C9CRTRPT",101,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",102,0)
 ....S C9CRET(C9CI)="Orderable Item: "_$P($G(C9CTMP(C9CP,C9CQ,C9CR)),"^",4)
"RTN","C9CRTRPT",103,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",104,0)
 ....S C9CRET(C9CI)="Administration Status: "_$P($G(C9CTMP(C9CP,C9CQ,C9CR)),"^",5)
"RTN","C9CRTRPT",105,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",106,0)
 ....S C9CRET(C9CI)="Injection Site: "_$P($G(C9CTMP(C9CP,C9CQ,C9CR)),"^",6)
"RTN","C9CRTRPT",107,0)
 ....S C9CI=C9CI+1
"RTN","C9CRTRPT",108,0)
 K C9CTMP
"RTN","C9CRTRPT",109,0)
 Q
"RTN","C9CRTRPT",110,0)
WARDS(C9CRET) ;;returns active wards in user's division, 
"RTN","C9CRTRPT",111,0)
 ;;may have to use DG SUPERVISOR MENU to activate or deactivate wards
"RTN","C9CRTRPT",112,0)
 N C9CN,C9CI
"RTN","C9CRTRPT",113,0)
 S C9CI=0
"RTN","C9CRTRPT",114,0)
 S C9CRET(C9CI)="No Wards Available"
"RTN","C9CRTRPT",115,0)
 S C9CN="" F  S C9CN=$O(^DIC(42,"B",C9CN)) Q:C9CN=""  D
"RTN","C9CRTRPT",116,0)
 .N C9CIEN S C9CIEN=$O(^DIC(42,"B",C9CN,0)) I C9CIEN>0 D
"RTN","C9CRTRPT",117,0)
 ..N C9CMCD S C9CMCD=+$P($G(^DIC(42,C9CIEN,0)),"^",11) I C9CMCD>0 D
"RTN","C9CRTRPT",118,0)
 ...I $P($G(^DG(40.8,C9CMCD,0)),"^",7)=$G(DUZ(2)) D
"RTN","C9CRTRPT",119,0)
 ....I '$D(^DIC(42,C9CIEN,"OOS",0)) D
"RTN","C9CRTRPT",120,0)
 .....S C9CRET(C9CI)=C9CN
"RTN","C9CRTRPT",121,0)
 .....S C9CI=C9CI+1
"RTN","C9CRTRPT",122,0)
 Q
"RTN","C9CRTRPT",123,0)
ROUTES(C9CRET) ;;returns active medication routes
"RTN","C9CRTRPT",124,0)
 N C9CI,C9CNAME
"RTN","C9CRTRPT",125,0)
 S C9CI=0
"RTN","C9CRTRPT",126,0)
 S C9CRET(C9CI)="No Routes Found"
"RTN","C9CRTRPT",127,0)
 S C9CNAME="" F  S C9CNAME=$O(^PS(51.2,"B",C9CNAME)) Q:C9CNAME=""  D
"RTN","C9CRTRPT",128,0)
 .N C9CX S C9CX=+$O(^PS(51.2,"B",C9CNAME,0)) I C9CX>0 D
"RTN","C9CRTRPT",129,0)
 ..I $P($G(^PS(51.2,C9CX,0)),"^",5)="" D
"RTN","C9CRTRPT",130,0)
 ...I C9CNAME]"" D
"RTN","C9CRTRPT",131,0)
 ....I ((C9CNAME["INTRADERMAL")!(C9CNAME["INTRAMUSCULAR")!(C9CNAME["INTRAVENOUS")!(C9CNAME["SUBCUTANEOUS")) D
"RTN","C9CRTRPT",132,0)
 .....S C9CRET(C9CI)=C9CNAME
"RTN","C9CRTRPT",133,0)
 .....S C9CI=C9CI+1
"RTN","C9CRTRPT",134,0)
 Q 
"RTN","C9CRTRPT",135,0)
  
"RTN","C9CSTN")
0^20^B45546165
"RTN","C9CSTN",1,0)
C9CSTN ;CRH JHT 2017 Sticky Notes RPC's
"RTN","C9CSTN",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CSTN",3,0)
 ;
"RTN","C9CSTN",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CSTN",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CSTN",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CSTN",7,0)
 ;
"RTN","C9CSTN",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CSTN",9,0)
 ;
"RTN","C9CSTN",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CSTN",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CSTN",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CSTN",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CSTN",14,0)
 ;limitations under the License.
"RTN","C9CSTN",15,0)
 Q ;no entry from top;;;;;Build 1
"RTN","C9CSTN",16,0)
SAVENOTE(C9CRET,C9CDFN,C9CPTYPE,EXPDATE,NOTETEXT) 
"RTN","C9CSTN",17,0)
 S C9CRET(1)=0
"RTN","C9CSTN",18,0)
 Q:$G(C9CDFN)'>0
"RTN","C9CSTN",19,0)
 Q:$G(EXPDATE)'>0
"RTN","C9CSTN",20,0)
 Q:'$D(NOTETEXT) ;array of text lines
"RTN","C9CSTN",21,0)
 Q:$G(DUZ)'>0
"RTN","C9CSTN",22,0)
        Q:$G(C9CPTYPE)=""
"RTN","C9CSTN",23,0)
 N JFDA,JMSG,JFIEN
"RTN","C9CSTN",24,0)
 S JFDA(42,300036,"?+1,",.01)=C9CDFN
"RTN","C9CSTN",25,0)
 S JFDA(42,300036.01,"+2,?+1,",.01)=EXPDATE
"RTN","C9CSTN",26,0)
 S JFDA(42,300036.01,"+2,?+1,",1)=$$NOW^XLFDT()
"RTN","C9CSTN",27,0)
 S JFDA(42,300036.01,"+2,?+1,",2)=DUZ
"RTN","C9CSTN",28,0)
 S JFDA(42,300036.01,"+2,?+1,",3)=$G(C9CPTYPE)
"RTN","C9CSTN",29,0)
 D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CSTN",30,0)
 K JMSG
"RTN","C9CSTN",31,0)
 N TOPN
"RTN","C9CSTN",32,0)
 S TOPN=0
"RTN","C9CSTN",33,0)
 N RECN
"RTN","C9CSTN",34,0)
 S RECN=0
"RTN","C9CSTN",35,0)
 I $G(JFIEN(1))>0 D
"RTN","C9CSTN",36,0)
 .S TOPN=+JFIEN(1)
"RTN","C9CSTN",37,0)
 .I $G(JFIEN(2))>0 D
"RTN","C9CSTN",38,0)
 ..S RECN=+JFIEN(2)
"RTN","C9CSTN",39,0)
 ..D WP^DIE(300036.01,RECN_","_TOPN_",",5,,"NOTETEXT","JMSG")
"RTN","C9CSTN",40,0)
 ..I $D(JMSG) W ! ZWR JMSG W !
"RTN","C9CSTN",41,0)
 I RECN>0 D
"RTN","C9CSTN",42,0)
 .S C9CRET(1)=RECN
"RTN","C9CSTN",43,0)
 Q
"RTN","C9CSTN",44,0)
FORCEEXP(C9CRET,C9CDFN,NOTEIEN) 
"RTN","C9CSTN",45,0)
 Q:$G(C9CDFN)'>0
"RTN","C9CSTN",46,0)
 Q:$G(NOTEIEN)'>0
"RTN","C9CSTN",47,0)
 Q:$G(DUZ)'>0
"RTN","C9CSTN",48,0)
 N RECNO
"RTN","C9CSTN",49,0)
 S RECNO=$O(^C9C(300036,"B",C9CDFN,0))
"RTN","C9CSTN",50,0)
 Q:RECNO'>0
"RTN","C9CSTN",51,0)
 I $D(^C9C(300036,RECNO,1,NOTEIEN)) D
"RTN","C9CSTN",52,0)
 .S $P(^C9C(300036,RECNO,1,NOTEIEN,6),"^",1)=1
"RTN","C9CSTN",53,0)
 .S $P(^C9C(300036,RECNO,1,NOTEIEN,7),"^",1)=DUZ
"RTN","C9CSTN",54,0)
 .S $P(^C9C(300036,RECNO,1,NOTEIEN,8),"^",1)=$$NOW^XLFDT
"RTN","C9CSTN",55,0)
 S C9CRET(1)=1
"RTN","C9CSTN",56,0)
 Q
"RTN","C9CSTN",57,0)
GETNOTES(C9CRET,C9CDFN) ;get unexpired notes
"RTN","C9CSTN",58,0)
 Q:$G(C9CDFN)'>0
"RTN","C9CSTN",59,0)
        Q:$G(DUZ)'>0
"RTN","C9CSTN",60,0)
        ;allow PROVIDER key to see only provider notes, ORELSE key to see only nursing notes
"RTN","C9CSTN",61,0)
        ;no one else can see notes at all as of Sept 2018
"RTN","C9CSTN",62,0)
        N PTYPE
"RTN","C9CSTN",63,0)
        D PERTYPE(.PTYPE)
"RTN","C9CSTN",64,0)
        S PTYPE=$G(PTYPE(1))
"RTN","C9CSTN",65,0)
        Q:((PTYPE'="P")&(PTYPE'="N")) ;only useable for Providers and Nurses
"RTN","C9CSTN",66,0)
        N CNT
"RTN","C9CSTN",67,0)
 S CNT=0
"RTN","C9CSTN",68,0)
 N PX
"RTN","C9CSTN",69,0)
 S PX=$O(^C9C(300036,"B",C9CDFN,0))
"RTN","C9CSTN",70,0)
        I PX>0 D ;get only reminder type notes first
"RTN","C9CSTN",71,0)
        .N NX
"RTN","C9CSTN",72,0)
        .S NX=$$FMADD^XLFDT($$NOW^XLFDT,-7) F  S NX=$O(^C9C(300036,PX,1,"B",NX)) Q:NX'>0  D ;check starting seven days overdue
"RTN","C9CSTN",73,0)
        ..N DX
"RTN","C9CSTN",74,0)
        ..S DX=0 F  S DX=$O(^C9C(300036,PX,1,"B",NX,DX)) Q:DX'>0  D
"RTN","C9CSTN",75,0)
        ...Q:$P($G(^C9C(300036,PX,1,DX,6)),"^",1)>0  ;expiration was forced
"RTN","C9CSTN",76,0)
        ...N EXPDATE
"RTN","C9CSTN",77,0)
        ...S EXPDATE=NX
"RTN","C9CSTN",78,0)
        ...N CRDATE
"RTN","C9CSTN",79,0)
        ...S CRDATE=$P($G(^C9C(300036,PX,1,DX,1)),"^",1)
"RTN","C9CSTN",80,0)
        ...N CRBY
"RTN","C9CSTN",81,0)
        ...S CRBY=$P($G(^C9C(300036,PX,1,DX,1)),"^",2)
"RTN","C9CSTN",82,0)
        ...N CRBYNAME
"RTN","C9CSTN",83,0)
        ...S CRBYNAME=""
"RTN","C9CSTN",84,0)
        ...I $G(CRBY)>0 D
"RTN","C9CSTN",85,0)
        ....S CRBYNAME=$P($G(^VA(200,CRBY,0)),"^",1)
"RTN","C9CSTN",86,0)
        ...N CRBYTYPE
"RTN","C9CSTN",87,0)
        ...S CRBYTYPE=$P($G(^C9C(300036,PX,1,DX,1)),"^",3)
"RTN","C9CSTN",88,0)
        ...N CRBYIEN
"RTN","C9CSTN",89,0)
        ...S CRBYIEN=$P($G(^C9C(300036,PX,1,DX,1)),"^",2)
"RTN","C9CSTN",90,0)
        ...I ((CRBYTYPE="R")&($$CRPTYPE(CRBYIEN)=PTYPE)) D ;allow creator service to see this reminder
"RTN","C9CSTN",91,0)
        ....N NOTETEXT
"RTN","C9CSTN",92,0)
        ....N LX
"RTN","C9CSTN",93,0)
        ....S LX=0 F  S LX=$O(^C9C(300036,PX,1,DX,2,LX)) Q:LX'>0  D
"RTN","C9CSTN",94,0)
        .....S NOTETEXT(LX)=$P($G(^C9C(300036,PX,1,DX,2,LX,0)),"^",1)
"RTN","C9CSTN",95,0)
        ....I $D(NOTETEXT) D
"RTN","C9CSTN",96,0)
        .....S CNT=CNT+1
"RTN","C9CSTN",97,0)
        .....S C9CRET(CNT)=EXPDATE_"^"_$G(CRDATE)_"^"_$G(CRBY)_"^"_$G(CRBYTYPE)_"^"_$G(CRBYNAME)_"^"_DX
"RTN","C9CSTN",98,0)
        .....N RX
"RTN","C9CSTN",99,0)
        .....S RX=0 F  S RX=$O(NOTETEXT(RX)) Q:RX'>0  D
"RTN","C9CSTN",100,0)
        ......S C9CRET(CNT)=C9CRET(CNT)_"^"_NOTETEXT(RX)
"RTN","C9CSTN",101,0)
 I PX>0 D
"RTN","C9CSTN",102,0)
 .N NX
"RTN","C9CSTN",103,0)
 .S NX=$$NOW^XLFDT F  S NX=$O(^C9C(300036,PX,1,"B",NX)) Q:NX'>0  D
"RTN","C9CSTN",104,0)
 ..N DX
"RTN","C9CSTN",105,0)
 ..S DX=0 F  S DX=$O(^C9C(300036,PX,1,"B",NX,DX)) Q:DX'>0  D
"RTN","C9CSTN",106,0)
 ...Q:$P($G(^C9C(300036,PX,1,DX,6)),"^",1)>0  ;expiration was forced
"RTN","C9CSTN",107,0)
 ...N EXPDATE
"RTN","C9CSTN",108,0)
 ...S EXPDATE=NX
"RTN","C9CSTN",109,0)
 ...N CRDATE
"RTN","C9CSTN",110,0)
 ...S CRDATE=$P($G(^C9C(300036,PX,1,DX,1)),"^",1)
"RTN","C9CSTN",111,0)
 ...N CRBY
"RTN","C9CSTN",112,0)
 ...S CRBY=$P($G(^C9C(300036,PX,1,DX,1)),"^",2)
"RTN","C9CSTN",113,0)
 ...N CRBYNAME
"RTN","C9CSTN",114,0)
 ...S CRBYNAME=""
"RTN","C9CSTN",115,0)
 ...I $G(CRBY)>0 D
"RTN","C9CSTN",116,0)
 ....S CRBYNAME=$P($G(^VA(200,CRBY,0)),"^",1)
"RTN","C9CSTN",117,0)
 ...N CRBYTYPE
"RTN","C9CSTN",118,0)
 ...S CRBYTYPE=$P($G(^C9C(300036,PX,1,DX,1)),"^",3)
"RTN","C9CSTN",119,0)
        ...I PTYPE=CRBYTYPE D ;allow provider to see provider, nurse to see nurse
"RTN","C9CSTN",120,0)
 ....N NOTETEXT
"RTN","C9CSTN",121,0)
 ....N LX
"RTN","C9CSTN",122,0)
 ....S LX=0 F  S LX=$O(^C9C(300036,PX,1,DX,2,LX)) Q:LX'>0  D
"RTN","C9CSTN",123,0)
 .....S NOTETEXT(LX)=$P($G(^C9C(300036,PX,1,DX,2,LX,0)),"^",1) 
"RTN","C9CSTN",124,0)
 ....I $D(NOTETEXT) D
"RTN","C9CSTN",125,0)
 .....S CNT=CNT+1
"RTN","C9CSTN",126,0)
 .....S C9CRET(CNT)=EXPDATE_"^"_$G(CRDATE)_"^"_$G(CRBY)_"^"_$G(CRBYTYPE)_"^"_$G(CRBYNAME)_"^"_DX
"RTN","C9CSTN",127,0)
 .....N RX
"RTN","C9CSTN",128,0)
 .....S RX=0 F  S RX=$O(NOTETEXT(RX)) Q:RX'>0  D
"RTN","C9CSTN",129,0)
 ......S C9CRET(CNT)=C9CRET(CNT)_"^"_NOTETEXT(RX)
"RTN","C9CSTN",130,0)
 Q
"RTN","C9CSTN",131,0)
CHKNOTES(C9CRET,C9CDFN) ;check whether doctor, nurse, or reminder sticky notes are available
"RTN","C9CSTN",132,0)
 Q:$G(C9CDFN)'>0
"RTN","C9CSTN",133,0)
        Q:$G(DUZ)'>0
"RTN","C9CSTN",134,0)
 N PROVCNT,NURCNT,REMCNT
"RTN","C9CSTN",135,0)
 S PROVCNT=0 ;Provider sticky notes
"RTN","C9CSTN",136,0)
 S NURCNT=0  ;Nurse sticky notes
"RTN","C9CSTN",137,0)
 S REMCNT=0  ;Reminder sticky notes
"RTN","C9CSTN",138,0)
 N PX
"RTN","C9CSTN",139,0)
 S PX=$O(^C9C(300036,"B",C9CDFN,0))
"RTN","C9CSTN",140,0)
 I PX>0 D
"RTN","C9CSTN",141,0)
 .N NX
"RTN","C9CSTN",142,0)
 .S NX=$$NOW^XLFDT F  S NX=$O(^C9C(300036,PX,1,"B",NX)) Q:NX'>0  D
"RTN","C9CSTN",143,0)
 ..N DX
"RTN","C9CSTN",144,0)
 ..S DX=0 F  S DX=$O(^C9C(300036,PX,1,"B",NX,DX)) Q:DX'>0  D
"RTN","C9CSTN",145,0)
 ...Q:$P($G(^C9C(300036,PX,1,DX,6)),"^",1)>0  ;expiration was forced - don't need this one
"RTN","C9CSTN",146,0)
 ...N CRBYTYPE
"RTN","C9CSTN",147,0)
 ...S CRBYTYPE=$P($G(^C9C(300036,PX,1,DX,1)),"^",3)
"RTN","C9CSTN",148,0)
 ...I CRBYTYPE="P" S PROVCNT=PROVCNT+1
"RTN","C9CSTN",149,0)
 ...I CRBYTYPE="N" S NURCNT=NURCNT+1
"RTN","C9CSTN",150,0)
        I PX>0 D ;now check reminder type notes
"RTN","C9CSTN",151,0)
        .N NX
"RTN","C9CSTN",152,0)
        .S NX=$$FMADD^XLFDT($$NOW^XLFDT,-7) F  S NX=$O(^C9C(300036,PX,1,"B",NX)) Q:NX'>0  D ;check starting seven days overdue
"RTN","C9CSTN",153,0)
        ..N DX
"RTN","C9CSTN",154,0)
        ..S DX=0 F  S DX=$O(^C9C(300036,PX,1,"B",NX,DX)) Q:DX'>0  D
"RTN","C9CSTN",155,0)
        ...Q:$P($G(^C9C(300036,PX,1,DX,6)),"^",1)>0  ;expiration was forced - don't need this one
"RTN","C9CSTN",156,0)
        ...N CRBYTYPE
"RTN","C9CSTN",157,0)
        ...S CRBYTYPE=$P($G(^C9C(300036,PX,1,DX,1)),"^",3)
"RTN","C9CSTN",158,0)
        ...I CRBYTYPE="R" D
"RTN","C9CSTN",159,0)
 ....N CRBYIEN
"RTN","C9CSTN",160,0)
        ....S CRBYIEN=$P($G(^C9C(300036,PX,1,DX,1)),"^",2)
"RTN","C9CSTN",161,0)
        ....I $$CRPTYPE(CRBYIEN)=$$CRPTYPE(DUZ) D ;be sure this reminder is in correct service
"RTN","C9CSTN",162,0)
        .....S REMCNT=REMCNT+1
"RTN","C9CSTN",163,0)
 S C9CRET(1)=PROVCNT
"RTN","C9CSTN",164,0)
 S C9CRET(2)=NURCNT
"RTN","C9CSTN",165,0)
 S C9CRET(3)=REMCNT
"RTN","C9CSTN",166,0)
 Q
"RTN","C9CSTN",167,0)
PERTYPE(C9CRET) 
"RTN","C9CSTN",168,0)
 Q:$G(DUZ)'>0
"RTN","C9CSTN",169,0)
 I $D(^XUSEC("PROVIDER",DUZ)) S C9CRET(1)="P" Q
"RTN","C9CSTN",170,0)
 I $D(^XUSEC("ORELSE",DUZ)) S C9CRET(1)="N" Q
"RTN","C9CSTN",171,0)
 S C9CRET(1)="O" ;Other not really used anymore, only providers and nurses can use this tool
"RTN","C9CSTN",172,0)
 Q
"RTN","C9CSTN",173,0)
CRPTYPE(PERIEN) ;get someone else's person type for sticky notes
"RTN","C9CSTN",174,0)
 I $G(PERIEN)'>0 Q "O" ;O is not used right now
"RTN","C9CSTN",175,0)
        I $D(^XUSEC("PROVIDER",PERIEN)) Q "P"
"RTN","C9CSTN",176,0)
 I $D(^XUSEC("ORELSE",PERIEN)) Q "N"
"RTN","C9CSTN",177,0)
 Q "O"	
"RTN","C9CTTLS")
0^23^B157495
"RTN","C9CTTLS",1,0)
C9CTTLS ;;CRH JHT 2015 - get Progress Note Titles
"RTN","C9CTTLS",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CTTLS",3,0)
 ;
"RTN","C9CTTLS",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CTTLS",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CTTLS",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CTTLS",7,0)
 ;
"RTN","C9CTTLS",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CTTLS",9,0)
 ;
"RTN","C9CTTLS",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CTTLS",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CTTLS",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CTTLS",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CTTLS",14,0)
 ;limitations under the License.
"RTN","C9CTTLS",15,0)
 Q ;No entry from top
"RTN","C9CTTLS",16,0)
LIST(C9CRET)
"RTN","C9CTTLS",17,0)
 I $G(DUZ)'>0 Q ;no user
"RTN","C9CTTLS",18,0)
 I $G(DUZ(2))'>0 Q ;no division
"RTN","C9CTTLS",19,0)
 N C9CSTS
"RTN","C9CTTLS",20,0)
 S C9CSTS=$O(^TIU(8925.6,"B","ACTIVE",0))
"RTN","C9CTTLS",21,0)
 I $G(C9CSTS)'>0 Q ;no active pointer found
"RTN","C9CTTLS",22,0)
 N C9CI
"RTN","C9CTTLS",23,0)
 S C9CI=0
"RTN","C9CTTLS",24,0)
 N C9CX
"RTN","C9CTTLS",25,0)
 N C9CNM
"RTN","C9CTTLS",26,0)
 S C9CNM="" F  S C9CNM=$O(^TIU(8925.1,"B",C9CNM)) Q:C9CNM=""  D
"RTN","C9CTTLS",27,0)
 .S C9CX=0 F  S C9CX=$O(^TIU(8925.1,"B",C9CNM,C9CX)) Q:C9CX'>0  D
"RTN","C9CTTLS",28,0)
 ..I $D(^TIU(8925.1,C9CX,30011,"B",DUZ(2))) D ;if accessible to this division
"RTN","C9CTTLS",29,0)
 ...I $P($G(^TIU(8925.1,C9CX,0)),"^",4)="DOC" D ;if document title
"RTN","C9CTTLS",30,0)
 ....I $P($G(^TIU(8925.1,C9CX,0)),"^",7)=C9CSTS D ;active title
"RTN","C9CTTLS",31,0)
 .....S C9CI=C9CI+1
"RTN","C9CTTLS",32,0)
 .....S C9CRET(C9CI)=C9CX_"^"_$P($G(^TIU(8925.1,C9CX,0)),"^",1)
"RTN","C9CTTLS",33,0)
 Q
"RTN","C9CTTLS",34,0)
 
"RTN","C9CTTLS",35,0)
 
"RTN","C9CWBS")
0^21^B115584234
"RTN","C9CWBS",1,0)
C9CWBS ;CRH JHT 2017 - RPC's for Rules Engine
"RTN","C9CWBS",2,0)
 ;Copyright [2020] [Central Regional Hospital, State of North Carolina];;;;;Build 2
"RTN","C9CWBS",3,0)
 ;
"RTN","C9CWBS",4,0)
 ;Licensed under the Apache License, Version 2.0 (the "License")
"RTN","C9CWBS",5,0)
 ; you may not use this file except in ;compliance with the License.
"RTN","C9CWBS",6,0)
 ;You may obtain a copy of the License at
"RTN","C9CWBS",7,0)
 ;
"RTN","C9CWBS",8,0)
 ;http://www.apache.org/licenses/LICENSE-2.0
"RTN","C9CWBS",9,0)
 ;
"RTN","C9CWBS",10,0)
 ;Unless required by applicable law or agreed to in writing, software
"RTN","C9CWBS",11,0)
 ;distributed under the License is ;distributed on an "AS IS" BASIS,
"RTN","C9CWBS",12,0)
 ;WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
"RTN","C9CWBS",13,0)
 ;See the License for the specific language governing permissions and
"RTN","C9CWBS",14,0)
 ;limitations under the License.
"RTN","C9CWBS",15,0)
 Q ;no entry from top;;;;;Build 5
"RTN","C9CWBS",16,0)
RPCDR(C9CRET,IENSTRING) ;delete a rule
"RTN","C9CWBS",17,0)
 ;IENSTRING - "RECORD IEN FOR TIU TITLE;SEPARATOR;FORMULA IEN;SEPARATOR;RULE IEN"
"RTN","C9CWBS",18,0)
 S C9CRET=0
"RTN","C9CWBS",19,0)
 Q:$G(IENSTRING)=""
"RTN","C9CWBS",20,0)
 N TIEN
"RTN","C9CWBS",21,0)
 S TIEN=$P(IENSTRING,";",1)
"RTN","C9CWBS",22,0)
 Q:TIEN'>0
"RTN","C9CWBS",23,0)
 N SEP1
"RTN","C9CWBS",24,0)
 S SEP1=$P(IENSTRING,";",2)
"RTN","C9CWBS",25,0)
 Q:SEP1'>0
"RTN","C9CWBS",26,0)
 N FIEN
"RTN","C9CWBS",27,0)
 S FIEN=$P(IENSTRING,";",3)
"RTN","C9CWBS",28,0)
 Q:FIEN'>0
"RTN","C9CWBS",29,0)
 N SEP2
"RTN","C9CWBS",30,0)
 S SEP2=$P(IENSTRING,";",4)
"RTN","C9CWBS",31,0)
 Q:SEP2'>0
"RTN","C9CWBS",32,0)
 N RIEN
"RTN","C9CWBS",33,0)
 S RIEN=$P(IENSTRING,";",5)
"RTN","C9CWBS",34,0)
 Q:RIEN'>0
"RTN","C9CWBS",35,0)
 N DIK,DA
"RTN","C9CWBS",36,0)
 S DA(2)=TIEN
"RTN","C9CWBS",37,0)
 S DA(1)=FIEN
"RTN","C9CWBS",38,0)
 S DA=RIEN
"RTN","C9CWBS",39,0)
 S DIK="^C9C(300890,"_DA(2)_","_SEP1_","_DA(1)_","_SEP2_","
"RTN","C9CWBS",40,0)
 D ^DIK
"RTN","C9CWBS",41,0)
 S C9CRET=1
"RTN","C9CWBS",42,0)
 Q
"RTN","C9CWBS",43,0)
RPCAR(C9CRET,COHORT,PTRRULEIEN,IENSTRING,XDAYSA,XHOURSA,CDATE,DATEOFY,DATEOFM,DAYOW,XDAYSE,XHOURSE,ORDABLE,PASSTHIEN) ;add a rule
"RTN","C9CWBS",44,0)
 ;COHORT - "WARD" or "UNIT" or "HOSPITAL"
"RTN","C9CWBS",45,0)
 ;PTRRULEIEN - pointer to RULES file
"RTN","C9CWBS",46,0)
 ;IENSTRING - "RECORD IEN FOR TIU TITLE;SEPARATOR;FORMULA IEN;SEPARATOR;RULE IEN"
"RTN","C9CWBS",47,0)
 ;XDAYSA - number of days from admit date
"RTN","C9CWBS",48,0)
 ;XHOURSA - number of hours from admit date
"RTN","C9CWBS",49,0)
 ;CDATE - external calendar date
"RTN","C9CWBS",50,0)
 ;DATEOFY - date of year like "0709"
"RTN","C9CWBS",51,0)
 ;DATEOFM - date of month 1-28
"RTN","C9CWBS",52,0)
 ;DAYOW - Monday,Tuesday,Wednesday,Thursday,Friday,Saturday,Sunday
"RTN","C9CWBS",53,0)
 ;XDAYSE - number of days from event date
"RTN","C9CWBS",54,0)
 ;XHOURSE - number of hours from event date
"RTN","C9CWBS",55,0)
 ;ORDABLE - pointer to orderable items file
"RTN","C9CWBS",56,0)
        ;PASSTHIEN - pointer to reminder definition file
"RTN","C9CWBS",57,0)
 S C9CRET=0
"RTN","C9CWBS",58,0)
 Q:PTRRULEIEN'>0
"RTN","C9CWBS",59,0)
 N TIEN
"RTN","C9CWBS",60,0)
 S TIEN=$P(IENSTRING,";",1)
"RTN","C9CWBS",61,0)
 Q:TIEN'>0
"RTN","C9CWBS",62,0)
 N FIEN
"RTN","C9CWBS",63,0)
 S FIEN=$P(IENSTRING,";",3)
"RTN","C9CWBS",64,0)
 Q:FIEN'>0
"RTN","C9CWBS",65,0)
 I CDATE'="" D
"RTN","C9CWBS",66,0)
 .N X,Y
"RTN","C9CWBS",67,0)
 .S X=CDATE D ^%DT
"RTN","C9CWBS",68,0)
 .S CDATE=Y
"RTN","C9CWBS",69,0)
 N SUBFILE
"RTN","C9CWBS",70,0)
 S SUBFILE=0
"RTN","C9CWBS",71,0)
 I COHORT="WARD" S SUBFILE=300890.11
"RTN","C9CWBS",72,0)
 I COHORT="UNIT" S SUBFILE=300890.21
"RTN","C9CWBS",73,0)
 I COHORT="HOSPITAL" S SUBFILE=300890.31
"RTN","C9CWBS",74,0)
 Q:SUBFILE=0
"RTN","C9CWBS",75,0)
 N JFDA,JMSG,JFIEN
"RTN","C9CWBS",76,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",.01)=PTRRULEIEN
"RTN","C9CWBS",77,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",1)=$G(XDAYSA)
"RTN","C9CWBS",78,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",6)=$G(XHOURSA)
"RTN","C9CWBS",79,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",2)=$G(CDATE)
"RTN","C9CWBS",80,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",3)=$G(DATEOFY)
"RTN","C9CWBS",81,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",4)=$G(DATEOFM)
"RTN","C9CWBS",82,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",5)=$G(DAYOW)
"RTN","C9CWBS",83,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",7)=$G(ORDABLE)
"RTN","C9CWBS",84,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",8)=$G(XDAYSE)
"RTN","C9CWBS",85,0)
 S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",9)=$G(XHOURSE)
"RTN","C9CWBS",86,0)
        S JFDA(42,SUBFILE,"+3,"_FIEN_","_TIEN_",",10)=$G(PASSTHIEN)
"RTN","C9CWBS",87,0)
 D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",88,0)
 I '$D(JMSG) S C9CRET=1
"RTN","C9CWBS",89,0)
 ;I $D(JMSG) M ^JHT($J,"RPCAR")=JMSG
"RTN","C9CWBS",90,0)
 Q
"RTN","C9CWBS",91,0)
RPCSF(C9CRET,RIEN,COHORT,FORNAME) ;save a new formula name
"RTN","C9CWBS",92,0)
 ;RIEN - IEN of TIU DOCUMENT DEFINITION this formula applies to
"RTN","C9CWBS",93,0)
 ;COHORT - WARD, UNIT, or HOSPITAL
"RTN","C9CWBS",94,0)
 ;FORNAME - New Formula Name no greater than 80 characters, unique for this cohort
"RTN","C9CWBS",95,0)
 S C9CRET=0
"RTN","C9CWBS",96,0)
 Q:$G(COHORT)=""
"RTN","C9CWBS",97,0)
 Q:$G(FORNAME)=""
"RTN","C9CWBS",98,0)
 Q:$G(RIEN)=0
"RTN","C9CWBS",99,0)
 N SUBFILE
"RTN","C9CWBS",100,0)
 S SUBFILE=0
"RTN","C9CWBS",101,0)
 I COHORT="WARD" S SUBFILE=300890.01
"RTN","C9CWBS",102,0)
 I COHORT="UNIT" S SUBFILE=300890.02
"RTN","C9CWBS",103,0)
 I COHORT="HOSPITAL" S SUBFILE=300890.03
"RTN","C9CWBS",104,0)
 Q:SUBFILE=0
"RTN","C9CWBS",105,0)
 N SEPARATOR
"RTN","C9CWBS",106,0)
 S SEPARATOR=0
"RTN","C9CWBS",107,0)
 I COHORT="WARD" S SEPARATOR=1
"RTN","C9CWBS",108,0)
 I COHORT="UNIT" S SEPARATOR=2
"RTN","C9CWBS",109,0)
 I COHORT="HOSPITAL" S SEPARATOR=3
"RTN","C9CWBS",110,0)
 Q:SEPARATOR=0
"RTN","C9CWBS",111,0)
 ;check to be sure this is a unique formula name for this cohort
"RTN","C9CWBS",112,0)
 N DUP
"RTN","C9CWBS",113,0)
 S DUP=0
"RTN","C9CWBS",114,0)
 N AX
"RTN","C9CWBS",115,0)
 S AX=0 F  S AX=$O(^C9C(300890,RIEN,SEPARATOR,AX)) Q:AX'>0  D
"RTN","C9CWBS",116,0)
 .I FORNAME=$P($G(^C9C(300890,RIEN,SEPARATOR,AX,0)),"^",1) D
"RTN","C9CWBS",117,0)
 ..S DUP=1
"RTN","C9CWBS",118,0)
 Q:DUP=1 ;duplicate name for cohort
"RTN","C9CWBS",119,0)
 N JFDA,JMSG,JFIEN
"RTN","C9CWBS",120,0)
 S JFDA(42,300890,"?+1,",.01)=RIEN_";TIU(8925.1,"
"RTN","C9CWBS",121,0)
 D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",122,0)
 I $D(JMSG) M ^JHT($J,"RPCSF",1)=JMSG
"RTN","C9CWBS",123,0)
 I '$D(JMSG) D
"RTN","C9CWBS",124,0)
 .N RECNO
"RTN","C9CWBS",125,0)
 .S RECNO=$G(JFIEN(1))
"RTN","C9CWBS",126,0)
 .I RECNO>0 D
"RTN","C9CWBS",127,0)
 ..N JFDA,JMSG,JFIEN
"RTN","C9CWBS",128,0)
 ..S JFDA(42,SUBFILE,"?+3,"_RECNO_",",.01)=FORNAME
"RTN","C9CWBS",129,0)
 ..D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",130,0)
 ..I '$D(JMSG) D
"RTN","C9CWBS",131,0)
 ...I COHORT="HOSPITAL" D
"RTN","C9CWBS",132,0)
 ....I $G(JFIEN(3))>0 D ;third level
"RTN","C9CWBS",133,0)
 .....N THISREC
"RTN","C9CWBS",134,0)
 .....S THISREC=JFIEN(3)
"RTN","C9CWBS",135,0)
 .....;M ^JHT("JFIEN")=JFIEN
"RTN","C9CWBS",136,0)
 .....I $G(DUZ(2))>0 D
"RTN","C9CWBS",137,0)
 ......N JFDA,JMSG,JFIEN
"RTN","C9CWBS",138,0)
 ......S JFDA(42,300890.06,"?+2,"_THISREC_","_RECNO_",",.01)=DUZ(2)
"RTN","C9CWBS",139,0)
 ......D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",140,0)
 ......I '$D(JMSG) D
"RTN","C9CWBS",141,0)
 .......S C9CRET=1
"RTN","C9CWBS",142,0)
 ...I COHORT'="HOSPITAL" D
"RTN","C9CWBS",143,0)
 ....S C9CRET=1
"RTN","C9CWBS",144,0)
 Q
"RTN","C9CWBS",145,0)
RPCDF(C9CRET,RIEN,FORIEN,COHORT) ;delete a formula
"RTN","C9CWBS",146,0)
 ;RIEN - IEN of TIU DOCUMENT DEFINITION this formula applies to
"RTN","C9CWBS",147,0)
 ;COHORT - WARD, UNIT, or HOSPITAL
"RTN","C9CWBS",148,0)
 S C9CRET=0
"RTN","C9CWBS",149,0)
 Q:$G(COHORT)=""
"RTN","C9CWBS",150,0)
 Q:$G(RIEN)=0
"RTN","C9CWBS",151,0)
 N SUBFILE
"RTN","C9CWBS",152,0)
 S SUBFILE=0
"RTN","C9CWBS",153,0)
 I COHORT="WARD" S SUBFILE=300890.01
"RTN","C9CWBS",154,0)
 I COHORT="UNIT" S SUBFILE=300890.02
"RTN","C9CWBS",155,0)
 I COHORT="HOSPITAL" S SUBFILE=300890.03
"RTN","C9CWBS",156,0)
 Q:SUBFILE=0
"RTN","C9CWBS",157,0)
 N SEPARATOR
"RTN","C9CWBS",158,0)
 S SEPARATOR=0
"RTN","C9CWBS",159,0)
 I COHORT="WARD" S SEPARATOR=1
"RTN","C9CWBS",160,0)
 I COHORT="UNIT" S SEPARATOR=2
"RTN","C9CWBS",161,0)
 I COHORT="HOSPITAL" S SEPARATOR=3
"RTN","C9CWBS",162,0)
 Q:SEPARATOR=0
"RTN","C9CWBS",163,0)
 N DIK,DA
"RTN","C9CWBS",164,0)
 S DA(1)=RIEN
"RTN","C9CWBS",165,0)
 S DA=FORIEN
"RTN","C9CWBS",166,0)
 S DIK="^C9C(300890,"_DA(1)_","_SEPARATOR_","
"RTN","C9CWBS",167,0)
 D ^DIK
"RTN","C9CWBS",168,0)
 S C9CRET=1
"RTN","C9CWBS",169,0)
 Q
"RTN","C9CWBS",170,0)
RPCSU(C9CRET,UNITNAMES,RIEN) ;save included units for a rules engine formula
"RTN","C9CWBS",171,0)
 ;UNITIENS - "IEN^IEN^IEN..."
"RTN","C9CWBS",172,0)
 ;RIEN - "RECORD IEN FOR TIU TITLE;1;FORMULA IEN;1;RULE IEN"
"RTN","C9CWBS",173,0)
 S C9CRET=1 ;succeeded
"RTN","C9CWBS",174,0)
 N RECIEN
"RTN","C9CWBS",175,0)
 S RECIEN=$P($G(RIEN),";",1)
"RTN","C9CWBS",176,0)
 Q:RECIEN'>0
"RTN","C9CWBS",177,0)
 N FORIEN
"RTN","C9CWBS",178,0)
 S FORIEN=$P($G(RIEN),";",3)
"RTN","C9CWBS",179,0)
 Q:FORIEN'>0
"RTN","C9CWBS",180,0)
 N UNITS
"RTN","C9CWBS",181,0)
 N THISUNIT
"RTN","C9CWBS",182,0)
 S THISUNIT="EMPTY"
"RTN","C9CWBS",183,0)
 N CNT
"RTN","C9CWBS",184,0)
 S CNT=0 F  S CNT=CNT+1 Q:THISUNIT=""  D
"RTN","C9CWBS",185,0)
 .S THISUNIT=$P(UNITNAMES,"^",CNT)
"RTN","C9CWBS",186,0)
 .I THISUNIT'="" D
"RTN","C9CWBS",187,0)
 ..S UNITS(THISUNIT)=""
"RTN","C9CWBS",188,0)
 ;first delete the current units for this record
"RTN","C9CWBS",189,0)
 N DX
"RTN","C9CWBS",190,0)
 S DX=0 F  S DX=$O(^C9C(300890,RECIEN,2,FORIEN,2,DX)) Q:DX'>0  D
"RTN","C9CWBS",191,0)
 .N DIK,DA
"RTN","C9CWBS",192,0)
 .S DA(2)=RECIEN
"RTN","C9CWBS",193,0)
 .S DA(1)=FORIEN
"RTN","C9CWBS",194,0)
 .S DA=DX
"RTN","C9CWBS",195,0)
 .S DIK="^C9C(300890,"_DA(2)_",2,"_DA(1)_",2,"
"RTN","C9CWBS",196,0)
 .D ^DIK
"RTN","C9CWBS",197,0)
 ;now add the new ones
"RTN","C9CWBS",198,0)
 ;M ^JHT($J,"UNITSAVE")=UNITS
"RTN","C9CWBS",199,0)
 N WX
"RTN","C9CWBS",200,0)
 S WX="" F  S WX=$O(UNITS(WX)) Q:WX=""  D
"RTN","C9CWBS",201,0)
 .N JFDA,JMSG,JFIEN
"RTN","C9CWBS",202,0)
 .S JFDA(42,300890.05,"?+3,"_FORIEN_","_RECIEN_",",.01)=WX
"RTN","C9CWBS",203,0)
 .D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",204,0)
 .;S ^JHT($J,"UNITS",WX)=$G(JMSG)
"RTN","C9CWBS",205,0)
 .I $D(JMSG) S C9CRET=0
"RTN","C9CWBS",206,0)
 Q
"RTN","C9CWBS",207,0)
RPCSW(C9CRET,WARDIENS,RIEN) ;save included wards for a rules engine formula
"RTN","C9CWBS",208,0)
 ;WARDIENS - "IEN^IEN^IEN..."
"RTN","C9CWBS",209,0)
 ;RIEN - "RECORD IEN FOR TIU TITLE;1;FORMULA IEN;1;RULE IEN"
"RTN","C9CWBS",210,0)
 S C9CRET=1 ;succeeded
"RTN","C9CWBS",211,0)
 N RECIEN
"RTN","C9CWBS",212,0)
 S RECIEN=$P($G(RIEN),";",1)
"RTN","C9CWBS",213,0)
 Q:RECIEN'>0
"RTN","C9CWBS",214,0)
 N FORIEN
"RTN","C9CWBS",215,0)
 S FORIEN=$P($G(RIEN),";",3)
"RTN","C9CWBS",216,0)
 Q:FORIEN'>0
"RTN","C9CWBS",217,0)
 N WARDS
"RTN","C9CWBS",218,0)
 N THISIEN
"RTN","C9CWBS",219,0)
 S THISIEN=9999999
"RTN","C9CWBS",220,0)
 N CNT
"RTN","C9CWBS",221,0)
 S CNT=0 F  S CNT=CNT+1 Q:THISIEN'>0  D
"RTN","C9CWBS",222,0)
 .S THISIEN=$P(WARDIENS,"^",CNT)
"RTN","C9CWBS",223,0)
 .I THISIEN>0 D
"RTN","C9CWBS",224,0)
 ..S WARDS(THISIEN)=""
"RTN","C9CWBS",225,0)
 ;first delete the current wards for this record
"RTN","C9CWBS",226,0)
 N DX
"RTN","C9CWBS",227,0)
 S DX=0 F  S DX=$O(^C9C(300890,RECIEN,1,FORIEN,2,DX)) Q:DX'>0  D
"RTN","C9CWBS",228,0)
 .N DIK,DA
"RTN","C9CWBS",229,0)
 .S DA(2)=RECIEN
"RTN","C9CWBS",230,0)
 .S DA(1)=FORIEN
"RTN","C9CWBS",231,0)
 .S DA=DX
"RTN","C9CWBS",232,0)
 .S DIK="^C9C(300890,"_DA(2)_",1,"_DA(1)_",2,"
"RTN","C9CWBS",233,0)
 .D ^DIK
"RTN","C9CWBS",234,0)
 ;now add the new ones
"RTN","C9CWBS",235,0)
 N WX
"RTN","C9CWBS",236,0)
 S WX=0 F  S WX=$O(WARDS(WX)) Q:WX'>0  D
"RTN","C9CWBS",237,0)
 .N JFDA,JMSG,JFIEN
"RTN","C9CWBS",238,0)
 .S JFDA(42,300890.04,"?+3,"_FORIEN_","_RECIEN_",",.01)=WX
"RTN","C9CWBS",239,0)
 .D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",240,0)
 .I $D(JMSG) S C9CRET=0
"RTN","C9CWBS",241,0)
 Q
"RTN","C9CWBS",242,0)
RPCEOI(C9CRET) ;get eligible orderable items
"RTN","C9CWBS",243,0)
 N CX
"RTN","C9CWBS",244,0)
 S CX=0
"RTN","C9CWBS",245,0)
 N OLIST
"RTN","C9CWBS",246,0)
 N OIT
"RTN","C9CWBS",247,0)
 S OIT="" F  S OIT=$O(^ORD(101.43,"B",OIT)) Q:OIT=""  D
"RTN","C9CWBS",248,0)
 .N THISONE
"RTN","C9CWBS",249,0)
 .S THISONE=0 F  S THISONE=$O(^ORD(101.43,"B",OIT,THISONE)) Q:THISONE'>0  D
"RTN","C9CWBS",250,0)
 ..I $P($G(^ORD(101.43,THISONE,300002)),"^",1)>0 D
"RTN","C9CWBS",251,0)
 ...N ONAME
"RTN","C9CWBS",252,0)
 ...S ONAME=$P($G(^ORD(101.43,THISONE,0)),"^",1)
"RTN","C9CWBS",253,0)
 ...I ONAME'="" D
"RTN","C9CWBS",254,0)
 ...S OLIST(ONAME)=THISONE
"RTN","C9CWBS",255,0)
 I $D(OLIST) D
"RTN","C9CWBS",256,0)
 .N TX
"RTN","C9CWBS",257,0)
 .S TX="" F  S TX=$O(OLIST(TX)) Q:TX=""  D
"RTN","C9CWBS",258,0)
 ..S CX=CX+1
"RTN","C9CWBS",259,0)
 ..S C9CRET(CX)=OLIST(TX)_"~"_TX
"RTN","C9CWBS",260,0)
 Q
"RTN","C9CWBS",261,0)
RPCWB(Y) ; RETURN LIST OF ACTIVE WARDS with BEDSECTION
"RTN","C9CWBS",262,0)
 N I,IEN,NAME,D0
"RTN","C9CWBS",263,0)
 S I=1,NAME=""
"RTN","C9CWBS",264,0)
 N JHTWW
"RTN","C9CWBS",265,0)
 D GETNWRDS(.JHTWW,DUZ(2))  ;;Get wards in current institution
"RTN","C9CWBS",266,0)
 F  S NAME=$O(^DIC(42,"B",NAME)) Q:NAME=""  S IEN=$O(^(NAME,0)) D
"RTN","C9CWBS",267,0)
 .S D0=IEN D WIN^DGPMDDCF ;is this ward location currently inactive
"RTN","C9CWBS",268,0)
 .I (X=0)&($D(JHTWW(IEN))) D
"RTN","C9CWBS",269,0)
 ..N UNIT
"RTN","C9CWBS",270,0)
 ..S UNIT=$P($G(^DIC(42,IEN,0)),"^",2)
"RTN","C9CWBS",271,0)
 ..I UNIT'="" D
"RTN","C9CWBS",272,0)
 ...I ((UNIT'="CERT")&(UNIT'="OML")) D
"RTN","C9CWBS",273,0)
 ....S Y(I)=IEN_"^"_NAME_"^"_UNIT,I=I+1
"RTN","C9CWBS",274,0)
 Q
"RTN","C9CWBS",275,0)
GETNWRDS(JHTW,JHTIEN) 
"RTN","C9CWBS",276,0)
    ;Input - variable to hold wards
"RTN","C9CWBS",277,0)
    ;Input - IEN of entry in INSTITUTION FILE #4
"RTN","C9CWBS",278,0)
    ;JHTW is set to number of nursing wards from 211.4 in this INSTITUTION
"RTN","C9CWBS",279,0)
    ;JHTW(IEN),JHTW(IEN),etc. is IEN in file 211.4 and the MAS Ward from
"RTN","C9CWBS",280,0)
    ;file WARD LOCATION FILE #42, like JHTW(28)="WARD A154"
"RTN","C9CWBS",281,0)
    ;If SERVICE in WARD LOCATION FILE #42 is set to "NC" for Non-Count,
"RTN","C9CWBS",282,0)
    ;that ward is NOT returned.
"RTN","C9CWBS",283,0)
    ;If Field 1.5 (INACTIVE FLAG) in file 211.4 is not set to "A" (ACTIVE),
"RTN","C9CWBS",284,0)
    ;that ward is not returned
"RTN","C9CWBS",285,0)
    ;Set up array to use to check Inactive ward flag
"RTN","C9CWBS",286,0)
    N JTX,IIX,IIX2
"RTN","C9CWBS",287,0)
    S IIX=0
"RTN","C9CWBS",288,0)
    F  S IIX=$O(^NURSF(211.4,IIX)) Q:IIX'>0  I $D(^NURSF(211.4,IIX,3,1,0)) S IIX2=^NURSF(211.4,IIX,3,1,0) S JTX(IIX)=IIX2
"RTN","C9CWBS",289,0)
    N JHTNW,%,%1
"RTN","C9CWBS",290,0)
    S %=0,%1=0
"RTN","C9CWBS",291,0)
    F  S %=$O(^NURSF(211.4,%)) Q:%'>0  I $D(JTX(%)) I ^NURSF(211.4,%,"I")="A" S JHTNW(^NURSF(211.4,%,3,1,0))=^NURSF(211.4,%,0)
"RTN","C9CWBS",292,0)
    S %=0
"RTN","C9CWBS",293,0)
    F  S %=$O(JHTNW(%)) Q:%'>0  I $P(^SC(JHTNW(%),0),"^",4)=JHTIEN,$P(^DIC(42,%,0),"^",3)'="NC" S JHTW(%)=$P(^DIC(42,%,0),"^",1),%1=%1+1
"RTN","C9CWBS",294,0)
    S JHTW=%1
"RTN","C9CWBS",295,0)
    Q
"RTN","C9CWBS",296,0)
GETRMDRS(C9CRET) ;get reminders for cohort logic only	
"RTN","C9CWBS",297,0)
 N CNT
"RTN","C9CWBS",298,0)
 S CNT=0
"RTN","C9CWBS",299,0)
 N RBN
"RTN","C9CWBS",300,0)
 S RBN="DASHBOAR" F  S RBN=$O(^PXD(811.9,"B",RBN)) Q:((RBN="")!($F(RBN,"DASHBOARD")'=10))  D
"RTN","C9CWBS",301,0)
 .N RX 
"RTN","C9CWBS",302,0)
 .S RX=0 F  S RX=$O(^PXD(811.9,"B",RBN,RX)) Q:RX'>0  D
"RTN","C9CWBS",303,0)
 ..N RNAME
"RTN","C9CWBS",304,0)
 ..S RNAME=$P($G(^PXD(811.9,RX,0)),"^",1)
"RTN","C9CWBS",305,0)
 ..I RNAME'="" D
"RTN","C9CWBS",306,0)
 ...S C9CRET($I(CNT))=RNAME_"^"_RX 
"RTN","C9CWBS",307,0)
 Q
"RTN","C9CWBS",308,0)
GETPTRM(C9CRET) ;get reminders for pass-through logic only
"RTN","C9CWBS",309,0)
 N CNT
"RTN","C9CWBS",310,0)
 S CNT=0
"RTN","C9CWBS",311,0)
 N RBN
"RTN","C9CWBS",312,0)
 S RBN="PTDASHBOAR" F  S RBN=$O(^PXD(811.9,"B",RBN)) Q:((RBN="")!($F(RBN,"PTDASHBOARD")'=12))  D
"RTN","C9CWBS",313,0)
 .N RX
"RTN","C9CWBS",314,0)
 .S RX=0 F  S RX=$O(^PXD(811.9,"B",RBN,RX)) Q:RX'>0  D
"RTN","C9CWBS",315,0)
 ..N RNAME
"RTN","C9CWBS",316,0)
 ..S RNAME=$P($G(^PXD(811.9,RX,0)),"^",1)
"RTN","C9CWBS",317,0)
 ..I RNAME'="" D
"RTN","C9CWBS",318,0)
 ...S C9CRET($I(CNT))=RNAME_"^"_RX
"RTN","C9CWBS",319,0)
 Q
"RTN","C9CWBS",320,0)
GETCFT(C9CRET,VPTR) ;get cohort for title - RPC=C9C GET COHORT FOR TITLE
"RTN","C9CWBS",321,0)
 ;VPTR = Ruled Object variable pointer in C9C RULES ENGINE FILE
"RTN","C9CWBS",322,0)
 ;returns ien^name from file 811.9 for given title ien
"RTN","C9CWBS",323,0)
 Q:+$G(VPTR)'>0
"RTN","C9CWBS",324,0)
 N FPTD
"RTN","C9CWBS",325,0)
 S FPTD=$P(VPTR,";",2)
"RTN","C9CWBS",326,0)
 I ((FPTD'="TIU(8925.1,")&(FPTD'="AUTTIMM(,")) Q ;not a tiu document def or immunization
"RTN","C9CWBS",327,0)
 N TIEN
"RTN","C9CWBS",328,0)
 S TIEN=$O(^C9C(300890,"B",VPTR,0))
"RTN","C9CWBS",329,0)
 Q:TIEN'>0 ;This object not defined in file 300890
"RTN","C9CWBS",330,0)
 N REMIEN
"RTN","C9CWBS",331,0)
 S REMIEN=$P($G(^C9C(300890,TIEN,6)),"^",1)
"RTN","C9CWBS",332,0)
 N REMNAME
"RTN","C9CWBS",333,0)
 S REMNAME=""
"RTN","C9CWBS",334,0)
 I REMIEN>0 D
"RTN","C9CWBS",335,0)
 .S REMNAME=$P($G(^PXD(811.9,REMIEN,0)),"^",1)
"RTN","C9CWBS",336,0)
 N PTONLY ;added JHT 2020 to allow pass-through processing even when cohort evaluates false
"RTN","C9CWBS",337,0)
 S PTONLY=+$P($G(^C9C(300890,TIEN,7)),"^",1)
"RTN","C9CWBS",338,0)
 S C9CRET=REMIEN_"^"_REMNAME_"^"_PTONLY
"RTN","C9CWBS",339,0)
 Q
"RTN","C9CWBS",340,0)
SETCFT(C9CRET,VPTR,COHIEN,PTONLY) ;set cohort for title - RPC=C9C SET COHORT FOR TITLE
"RTN","C9CWBS",341,0)
 ;PTONLY added JHT 2020 to allow pass-through processing even when cohort evaluates false
"RTN","C9CWBS",342,0)
 S C9CRET=0
"RTN","C9CWBS",343,0)
 Q:+$G(VPTR)'>0
"RTN","C9CWBS",344,0)
 N FPTD
"RTN","C9CWBS",345,0)
 S FPTD=$P(VPTR,";",2)
"RTN","C9CWBS",346,0)
 I ((FPTD'="TIU(8925.1,")&(FPTD'="AUTTIMM(,")) Q ;not a tiu document def or immunization
"RTN","C9CWBS",347,0)
 N JFDA,JMSG,JFIEN
"RTN","C9CWBS",348,0)
 S JFDA(42,300890,"?+1,",.01)=VPTR
"RTN","C9CWBS",349,0)
 I $G(COHIEN)>0 D
"RTN","C9CWBS",350,0)
 .S JFDA(42,300890,"?+1,",6)=+COHIEN
"RTN","C9CWBS",351,0)
 E  D
"RTN","C9CWBS",352,0)
 .S JFDA(42,300890,"?+1,",6)="@"
"RTN","C9CWBS",353,0)
 S JFDA(42,300890,"?+1,",7)=+$G(PTONLY) 
"RTN","C9CWBS",354,0)
 D UPDATE^DIE(,"JFDA(42)","JFIEN","JMSG")
"RTN","C9CWBS",355,0)
 I '$D(JMSG) S C9CRET=1
"RTN","C9CWBS",356,0)
 Q
"SEC","^DIC",300890,300890,0,"AUDIT")
@
"SEC","^DIC",300890,300890,0,"DD")
@
"SEC","^DIC",300890,300890,0,"DEL")

"SEC","^DIC",300890,300890,0,"LAYGO")
@
"SEC","^DIC",300890,300890,0,"RD")

"SEC","^DIC",300890,300890,0,"WR")

"SEC","^DIC",300892,300892,0,"AUDIT")
@
"SEC","^DIC",300892,300892,0,"DD")
@
"SEC","^DIC",300892,300892,0,"DEL")
@
"SEC","^DIC",300892,300892,0,"LAYGO")
@
"SEC","^DIC",300892,300892,0,"RD")
@
"SEC","^DIC",300892,300892,0,"WR")
@
"SEC","^DIC",300894,300894,0,"AUDIT")
@
"SEC","^DIC",300894,300894,0,"DD")
@
"SEC","^DIC",300894,300894,0,"DEL")
@
"SEC","^DIC",300894,300894,0,"LAYGO")
@
"SEC","^DIC",300894,300894,0,"RD")
@
"SEC","^DIC",300894,300894,0,"WR")
@
"SEC","^DIC",300896,300896,0,"AUDIT")
@
"SEC","^DIC",300896,300896,0,"DD")
@
"SEC","^DIC",300896,300896,0,"DEL")
@
"SEC","^DIC",300896,300896,0,"LAYGO")
@
"SEC","^DIC",300896,300896,0,"RD")
@
"SEC","^DIC",300896,300896,0,"WR")
@
"VER")
8.0^22.21062
"^DD",300890,300890,0)
FIELD^^7^8
"^DD",300890,300890,0,"DDA")
N
"^DD",300890,300890,0,"DT")
3200227
"^DD",300890,300890,0,"IX","B",300890,.01)

"^DD",300890,300890,0,"NM","C9C RULES ENGINE")

"^DD",300890,300890,.01,0)
RULED OBJECT^RV^^0;1^
"^DD",300890,300890,.01,1,0)
^.1
"^DD",300890,300890,.01,1,1,0)
300890^B
"^DD",300890,300890,.01,1,1,1)
S ^C9C(300890,"B",$E(X,1,30),DA)=""
"^DD",300890,300890,.01,1,1,2)
K ^C9C(300890,"B",$E(X,1,30),DA)
"^DD",300890,300890,.01,3)
This is a variable pointer
"^DD",300890,300890,.01,"DT")
3171220
"^DD",300890,300890,.01,"V",0)
^.12P^^2
"^DD",300890,300890,.01,"V",1,0)
8925.1^Pointer to TIU^1^TIU^n^n
"^DD",300890,300890,.01,"V",1,1)

"^DD",300890,300890,.01,"V",1,2)

"^DD",300890,300890,.01,"V",2,0)
9999999.14^Pointer to IMMUNIZATION^2^IMM^n^n
"^DD",300890,300890,.01,"V",2,1)

"^DD",300890,300890,.01,"V",2,2)

"^DD",300890,300890,1,0)
WARD FORMULA NAME^300890.01^^1;0
"^DD",300890,300890,1,"DT")
3180110
"^DD",300890,300890,2,0)
UNIT FORMULA NAME^300890.02^^2;0
"^DD",300890,300890,2,"DT")
3180110
"^DD",300890,300890,3,0)
HOSPITAL FORMULA NAME^300890.03^^3;0
"^DD",300890,300890,3,"DT")
3180110
"^DD",300890,300890,4,0)
INACTIVE^S^1:YES;0:NO;^4;1^Q
"^DD",300890,300890,4,"DT")
3180220
"^DD",300890,300890,5,0)
HEALTH FACTOR MUST BE WITH THIS NOTE^P9999999.64'^AUTTHF(^5;1^Q
"^DD",300890,300890,5,"DT")
3190701
"^DD",300890,300890,6,0)
REMINDER COHORT^P811.9'^PXD(811.9,^6;1^Q
"^DD",300890,300890,6,"DT")
3190802
"^DD",300890,300890,7,0)
PROCESS PASS-THROUGHS IF NOT IN COHORT^S^0:NO;1:YES;^7;1^Q
"^DD",300890,300890,7,"DT")
3200227
"^DD",300890,300890.01,0)
WARD FORMULA NAME SUB-FIELD^^.05^3
"^DD",300890,300890.01,0,"DT")
3190818
"^DD",300890,300890.01,0,"IX","B",300890.01,.01)

"^DD",300890,300890.01,0,"NM","WARD FORMULA NAME")

"^DD",300890,300890.01,0,"UP")
300890
"^DD",300890,300890.01,.01,0)
WARD FORMULA NAME^MF^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",300890,300890.01,.01,1,0)
^.1
"^DD",300890,300890.01,.01,1,1,0)
300890.01^B
"^DD",300890,300890.01,.01,1,1,1)
S ^C9C(300890,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.01,.01,1,1,2)
K ^C9C(300890,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300890,300890.01,.01,3)
Answer must be 1-80 characters in length.
"^DD",300890,300890.01,.01,"DT")
3180110
"^DD",300890,300890.01,.05,0)
WARDS^300890.04P^^2;0
"^DD",300890,300890.01,1,0)
RULE^300890.11P^^1;0
"^DD",300890,300890.02,0)
UNIT FORMULA NAME SUB-FIELD^^.05^3
"^DD",300890,300890.02,0,"DT")
3190818
"^DD",300890,300890.02,0,"IX","B",300890.02,.01)

"^DD",300890,300890.02,0,"NM","UNIT FORMULA NAME")

"^DD",300890,300890.02,0,"UP")
300890
"^DD",300890,300890.02,.01,0)
UNIT FORMULA NAME^MF^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",300890,300890.02,.01,1,0)
^.1
"^DD",300890,300890.02,.01,1,1,0)
300890.02^B
"^DD",300890,300890.02,.01,1,1,1)
S ^C9C(300890,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.02,.01,1,1,2)
K ^C9C(300890,DA(1),2,"B",$E(X,1,30),DA)
"^DD",300890,300890.02,.01,3)
Answer must be 1-80 characters in length.
"^DD",300890,300890.02,.01,"DT")
3180110
"^DD",300890,300890.02,.05,0)
UNITS^300890.05^^2;0
"^DD",300890,300890.02,1,0)
RULE^300890.21P^^1;0
"^DD",300890,300890.03,0)
HOSPITAL FORMULA NAME SUB-FIELD^^.5^3
"^DD",300890,300890.03,0,"DT")
3190818
"^DD",300890,300890.03,0,"IX","B",300890.03,.01)

"^DD",300890,300890.03,0,"NM","HOSPITAL FORMULA NAME")

"^DD",300890,300890.03,0,"UP")
300890
"^DD",300890,300890.03,.01,0)
HOSPITAL FORMULA NAME^MF^^0;1^K:$L(X)>80!($L(X)<1) X
"^DD",300890,300890.03,.01,1,0)
^.1
"^DD",300890,300890.03,.01,1,1,0)
300890.03^B
"^DD",300890,300890.03,.01,1,1,1)
S ^C9C(300890,DA(1),3,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.03,.01,1,1,2)
K ^C9C(300890,DA(1),3,"B",$E(X,1,30),DA)
"^DD",300890,300890.03,.01,3)
Answer must be 1-80 characters in length.
"^DD",300890,300890.03,.01,"DT")
3180110
"^DD",300890,300890.03,.5,0)
HOSPITALS^300890.06P^^2;0
"^DD",300890,300890.03,1,0)
RULE^300890.31P^^1;0
"^DD",300890,300890.04,0)
WARDS SUB-FIELD^^.01^1
"^DD",300890,300890.04,0,"DT")
3171220
"^DD",300890,300890.04,0,"IX","B",300890.04,.01)

"^DD",300890,300890.04,0,"NM","WARDS")

"^DD",300890,300890.04,0,"UP")
300890.01
"^DD",300890,300890.04,.01,0)
WARDS^MP42'^DIC(42,^0;1^Q
"^DD",300890,300890.04,.01,1,0)
^.1
"^DD",300890,300890.04,.01,1,1,0)
300890.04^B
"^DD",300890,300890.04,.01,1,1,1)
S ^C9C(300890,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.04,.01,1,1,2)
K ^C9C(300890,DA(2),1,DA(1),2,"B",$E(X,1,30),DA)
"^DD",300890,300890.04,.01,"DT")
3171220
"^DD",300890,300890.05,0)
UNITS SUB-FIELD^^.01^1
"^DD",300890,300890.05,0,"DT")
3171220
"^DD",300890,300890.05,0,"IX","B",300890.05,.01)

"^DD",300890,300890.05,0,"NM","UNITS")

"^DD",300890,300890.05,0,"UP")
300890.02
"^DD",300890,300890.05,.01,0)
UNITS^MF^^0;1^K:$L(X)>10!($L(X)<1) X
"^DD",300890,300890.05,.01,1,0)
^.1
"^DD",300890,300890.05,.01,1,1,0)
300890.05^B
"^DD",300890,300890.05,.01,1,1,1)
S ^C9C(300890,DA(2),2,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.05,.01,1,1,2)
K ^C9C(300890,DA(2),2,DA(1),2,"B",$E(X,1,30),DA)
"^DD",300890,300890.05,.01,3)
Answer must be 1-10 characters in length.
"^DD",300890,300890.05,.01,"DT")
3171220
"^DD",300890,300890.06,0)
HOSPITALS SUB-FIELD^^.01^1
"^DD",300890,300890.06,0,"DT")
3171220
"^DD",300890,300890.06,0,"IX","B",300890.06,.01)

"^DD",300890,300890.06,0,"NM","HOSPITALS")

"^DD",300890,300890.06,0,"UP")
300890.03
"^DD",300890,300890.06,.01,0)
HOSPITALS^MP4'^DIC(4,^0;1^Q
"^DD",300890,300890.06,.01,1,0)
^.1
"^DD",300890,300890.06,.01,1,1,0)
300890.06^B
"^DD",300890,300890.06,.01,1,1,1)
S ^C9C(300890,DA(2),3,DA(1),2,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.06,.01,1,1,2)
K ^C9C(300890,DA(2),3,DA(1),2,"B",$E(X,1,30),DA)
"^DD",300890,300890.06,.01,"DT")
3171220
"^DD",300890,300890.11,0)
RULE SUB-FIELD^^10^11
"^DD",300890,300890.11,0,"DT")
3190818
"^DD",300890,300890.11,0,"IX","B",300890.11,.01)

"^DD",300890,300890.11,0,"NM","RULE")

"^DD",300890,300890.11,0,"UP")
300890.01
"^DD",300890,300890.11,.01,0)
RULE^MP300892'^C9C(300892,^0;1^Q
"^DD",300890,300890.11,.01,1,0)
^.1
"^DD",300890,300890.11,.01,1,1,0)
300890.11^B
"^DD",300890,300890.11,.01,1,1,1)
S ^C9C(300890,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.11,.01,1,1,2)
K ^C9C(300890,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300890,300890.11,.01,"DT")
3171220
"^DD",300890,300890.11,1,0)
ADMIT DATE OFFSET IN DAYS^NJ4,0^^1;1^K:+X'=X!(X>1096)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.11,1,3)
Between 0 and 1096, 0 decimal digits.
"^DD",300890,300890.11,1,"DT")
3171220
"^DD",300890,300890.11,2,0)
CALENDAR DATE^D^^2;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",300890,300890.11,2,3)
(No range limit on date)
"^DD",300890,300890.11,2,"DT")
3171220
"^DD",300890,300890.11,3,0)
DAY OF YEAR^F^^3;1^K:$L(X)>4!($L(X)<4) X
"^DD",300890,300890.11,3,3)
Month and day like 0623
"^DD",300890,300890.11,3,"DT")
3171220
"^DD",300890,300890.11,4,0)
DAY OF MONTH^F^^4;1^K:$L(X)>2!($L(X)<2) X
"^DD",300890,300890.11,4,3)
Day of Month like 09
"^DD",300890,300890.11,4,"DT")
3171220
"^DD",300890,300890.11,5,0)
DAY OF WEEK^F^^5;1^K:$L(X)>10!($L(X)<1) X
"^DD",300890,300890.11,5,3)
Day of Week like sunday, monday, etc
"^DD",300890,300890.11,5,"DT")
3171220
"^DD",300890,300890.11,6,0)
ADMIT DATE OFFSET IN HOURS^NJ3,0^^6;1^K:+X'=X!(X>240)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.11,6,3)
Type a number between 0 and 240, 0 decimal digits.
"^DD",300890,300890.11,6,"DT")
3171220
"^DD",300890,300890.11,7,0)
ACTIVE ORDERABLE ITEM^P101.43'^ORD(101.43,^7;1^Q
"^DD",300890,300890.11,7,"DT")
3180130
"^DD",300890,300890.11,8,0)
EVENT DATE OFFSET IN DAYS^NJ4,0^^8;1^K:+X'=X!(X>1096)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.11,8,3)
Type a number between 0 and 1096, 0 decimal digits.
"^DD",300890,300890.11,8,"DT")
3180205
"^DD",300890,300890.11,9,0)
EVENT DATE OFFSET IN HOURS^NJ3,0^^9;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.11,9,3)
Type a number between 0 and 200, 0 decimal digits.
"^DD",300890,300890.11,9,"DT")
3180205
"^DD",300890,300890.11,10,0)
PASS-THROUGH REMINDER^P811.9'^PXD(811.9,^10;1^Q
"^DD",300890,300890.11,10,"DT")
3190818
"^DD",300890,300890.21,0)
RULE SUB-FIELD^^10^11
"^DD",300890,300890.21,0,"DT")
3190818
"^DD",300890,300890.21,0,"IX","B",300890.21,.01)

"^DD",300890,300890.21,0,"NM","RULE")

"^DD",300890,300890.21,0,"UP")
300890.02
"^DD",300890,300890.21,.01,0)
RULE^MP300892'^C9C(300892,^0;1^Q
"^DD",300890,300890.21,.01,1,0)
^.1
"^DD",300890,300890.21,.01,1,1,0)
300890.21^B
"^DD",300890,300890.21,.01,1,1,1)
S ^C9C(300890,DA(2),2,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.21,.01,1,1,2)
K ^C9C(300890,DA(2),2,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300890,300890.21,.01,"DT")
3171220
"^DD",300890,300890.21,1,0)
ADMIT DATE OFFSET IN DAYS^NJ4,0^^1;1^K:+X'=X!(X>1076)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.21,1,3)
Type a number between 0 and 1076, 0 decimal digits.
"^DD",300890,300890.21,1,"DT")
3171220
"^DD",300890,300890.21,2,0)
CALENDAR DATE^D^^2;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",300890,300890.21,2,3)
(No range limit on date)
"^DD",300890,300890.21,2,"DT")
3171220
"^DD",300890,300890.21,3,0)
DAY OF YEAR^F^^3;1^K:$L(X)>4!($L(X)<4) X
"^DD",300890,300890.21,3,3)
Day of year like 0924
"^DD",300890,300890.21,3,"DT")
3171220
"^DD",300890,300890.21,4,0)
DAY OF MONTH^F^^4;1^K:$L(X)>2!($L(X)<2) X
"^DD",300890,300890.21,4,3)
Day of month like 06
"^DD",300890,300890.21,4,"DT")
3171220
"^DD",300890,300890.21,5,0)
DAY OF WEEK^F^^5;1^K:$L(X)>10!($L(X)<1) X
"^DD",300890,300890.21,5,3)
Day of Week like sunday, monday, etc.
"^DD",300890,300890.21,5,"DT")
3171220
"^DD",300890,300890.21,6,0)
ADMIT DATE OFFSET IN HOURS^NJ3,0^^6;1^K:+X'=X!(X>120)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.21,6,3)
Type a number between 0 and 120, 0 decimal digits.
"^DD",300890,300890.21,6,"DT")
3171220
"^DD",300890,300890.21,7,0)
ACTIVE ORDERABLE ITEM^P101.43'^ORD(101.43,^7;1^Q
"^DD",300890,300890.21,7,"DT")
3180130
"^DD",300890,300890.21,8,0)
EVENT DATE OFFSET IN DAYS^NJ4,0^^8;1^K:+X'=X!(X>1096)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.21,8,3)
Type a number between 0 and 1096, 0 decimal digits.
"^DD",300890,300890.21,8,"DT")
3180205
"^DD",300890,300890.21,9,0)
EVENT DATE OFFSET IN HOURS^NJ3,0^^9;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.21,9,3)
Type a number between 0 and 200, 0 decimal digits.
"^DD",300890,300890.21,9,"DT")
3180205
"^DD",300890,300890.21,10,0)
PASS-THROUGH REMINDER^P811.9'^PXD(811.9,^10;1^Q
"^DD",300890,300890.21,10,"DT")
3190818
"^DD",300890,300890.31,0)
RULE SUB-FIELD^^10^11
"^DD",300890,300890.31,0,"DT")
3190818
"^DD",300890,300890.31,0,"IX","B",300890.31,.01)

"^DD",300890,300890.31,0,"NM","RULE")

"^DD",300890,300890.31,0,"UP")
300890.03
"^DD",300890,300890.31,.01,0)
RULE^MP300892'^C9C(300892,^0;1^Q
"^DD",300890,300890.31,.01,1,0)
^.1
"^DD",300890,300890.31,.01,1,1,0)
300890.31^B
"^DD",300890,300890.31,.01,1,1,1)
S ^C9C(300890,DA(2),3,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300890,300890.31,.01,1,1,2)
K ^C9C(300890,DA(2),3,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300890,300890.31,.01,"DT")
3171220
"^DD",300890,300890.31,1,0)
ADMIT DATE OFFSET IN DAYS^NJ4,0^^1;1^K:+X'=X!(X>1076)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.31,1,3)
Type a number between 0 and 1076, 0 decimal digits.
"^DD",300890,300890.31,1,"DT")
3171220
"^DD",300890,300890.31,2,0)
CALENDAR DATE^D^^2;1^S %DT="EX" D ^%DT S X=Y K:X<1 X
"^DD",300890,300890.31,2,3)
(No range limit on date)
"^DD",300890,300890.31,2,"DT")
3171220
"^DD",300890,300890.31,3,0)
DAY OF YEAR^F^^3;1^K:$L(X)>4!($L(X)<4) X
"^DD",300890,300890.31,3,3)
Day of Year like 0502
"^DD",300890,300890.31,3,"DT")
3171220
"^DD",300890,300890.31,4,0)
DAY OF MONTH^F^^4;1^K:$L(X)>2!($L(X)<2) X
"^DD",300890,300890.31,4,3)
Day of Month like 07
"^DD",300890,300890.31,4,"DT")
3171220
"^DD",300890,300890.31,5,0)
DAY OF WEEK^F^^5;1^K:$L(X)>10!($L(X)<1) X
"^DD",300890,300890.31,5,3)
Day of Week like sunday, monday, etc.
"^DD",300890,300890.31,5,"DT")
3171220
"^DD",300890,300890.31,6,0)
ADMIT DATE OFFSET IN HOURS^NJ3,0^^6;1^K:+X'=X!(X>120)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.31,6,3)
Type a number between 0 and 120, 0 decimal digits.
"^DD",300890,300890.31,6,"DT")
3171220
"^DD",300890,300890.31,7,0)
ACTIVE ORDERABLE ITEM^P101.43'^ORD(101.43,^7;1^Q
"^DD",300890,300890.31,7,"DT")
3180130
"^DD",300890,300890.31,8,0)
EVENT DATE OFFSET IN DAYS^NJ4,0^^8;1^K:+X'=X!(X>1096)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.31,8,3)
Type a number between 0 and 1096, 0 decimal digits.
"^DD",300890,300890.31,8,"DT")
3180205
"^DD",300890,300890.31,9,0)
EVENT DATE OFFSET IN HOURS^NJ3,0^^9;1^K:+X'=X!(X>200)!(X<0)!(X?.E1"."1.N) X
"^DD",300890,300890.31,9,3)
Type a number between 0 and 200, 0 decimal digits.
"^DD",300890,300890.31,9,"DT")
3180205
"^DD",300890,300890.31,10,0)
PASS-THROUGH REMINDER^P811.9'^PXD(811.9,^10;1^Q
"^DD",300890,300890.31,10,"DT")
3190818
"^DD",300892,300892,0)
FIELD^^1.5^7
"^DD",300892,300892,0,"DT")
3200213
"^DD",300892,300892,0,"IX","B",300892,.01)

"^DD",300892,300892,0,"NM","C9C RULES")

"^DD",300892,300892,0,"PT",300890.11,.01)

"^DD",300892,300892,0,"PT",300890.21,.01)

"^DD",300892,300892,0,"PT",300890.31,.01)

"^DD",300892,300892,.01,0)
NAME^RF^^0;1^K:$L(X)>80!($L(X)<1)!'(X'?1P.E) X
"^DD",300892,300892,.01,1,0)
^.1
"^DD",300892,300892,.01,1,1,0)
300892^B
"^DD",300892,300892,.01,1,1,1)
S ^C9C(300892,"B",$E(X,1,30),DA)=""
"^DD",300892,300892,.01,1,1,2)
K ^C9C(300892,"B",$E(X,1,30),DA)
"^DD",300892,300892,.01,3)
Answer must be 1-80 characters in length.
"^DD",300892,300892,.01,"DT")
3171220
"^DD",300892,300892,1,0)
ACTIVE^S^0:NO;1:YES;^0;2^Q
"^DD",300892,300892,1,"DT")
3171220
"^DD",300892,300892,1.5,0)
ABBREVIATION^F^^0;3^K:$L(X)>40!($L(X)<1) X
"^DD",300892,300892,1.5,3)
Answer must be 1-40 characters in length.
"^DD",300892,300892,1.5,"DT")
3200213
"^DD",300892,300892,3,0)
SHOWN LOGIC^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",300892,300892,3,3)
Enter Standard MUMPS code
"^DD",300892,300892,3,9)
@
"^DD",300892,300892,3,"DT")
3180308
"^DD",300892,300892,4,0)
NEARLY DUE LOGIC^K^^4;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",300892,300892,4,3)
Enter Standard MUMPS code
"^DD",300892,300892,4,9)
@
"^DD",300892,300892,4,"DT")
3180308
"^DD",300892,300892,5,0)
OVERDUE LOGIC^K^^6;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",300892,300892,5,3)
Enter Standard MUMPS code
"^DD",300892,300892,5,9)
@
"^DD",300892,300892,5,"DT")
3180308
"^DD",300892,300892,6,0)
ACCEPTABLE BASEDATE DELTA LOGIC^K^^7;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",300892,300892,6,3)
Mumps code that sets ABD in the format days.hours
"^DD",300892,300892,6,9)
@
"^DD",300892,300892,6,"DT")
3191219
"^DD",300894,300894,0)
FIELD^^.5^14
"^DD",300894,300894,0,"DT")
3200214
"^DD",300894,300894,0,"IX","B",300894,.01)

"^DD",300894,300894,0,"NM","C9C DASHBOARD MODULES")

"^DD",300894,300894,0,"PT",300896.21,.01)

"^DD",300894,300894,.01,0)
NAME^RF^^0;1^K:$L(X)>80!($L(X)<1)!'(X'?1P.E) X
"^DD",300894,300894,.01,1,0)
^.1
"^DD",300894,300894,.01,1,1,0)
300894^B
"^DD",300894,300894,.01,1,1,1)
S ^C9C(300894,"B",$E(X,1,30),DA)=""
"^DD",300894,300894,.01,1,1,2)
K ^C9C(300894,"B",$E(X,1,30),DA)
"^DD",300894,300894,.01,3)
Answer must be 1-80 characters in length.
"^DD",300894,300894,.01,"DT")
3180213
"^DD",300894,300894,.05,0)
ACTIVE^S^0:NO;1:YES;^0;2^Q
"^DD",300894,300894,.05,"DT")
3180522
"^DD",300894,300894,.06,0)
ACTIVE DIVISIONS^300894.01P^^11;0
"^DD",300894,300894,.5,0)
REQUIRED KEY^P19.1'^DIC(19.1,^0;3^Q
"^DD",300894,300894,.5,"DT")
3191231
"^DD",300894,300894,1,0)
BUTTON TEXT^F^^1;1^K:$L(X)>4!($L(X)<1) X
"^DD",300894,300894,1,3)
Answer must be 1-4 characters in length.
"^DD",300894,300894,1,"DT")
3180213
"^DD",300894,300894,2,0)
BUTTON IMAGE^300894.02^^2;0
"^DD",300894,300894,3,0)
MODULE TYPE^S^DG:DataGrid;RT:RichText;^3;1^Q
"^DD",300894,300894,3,"DT")
3180213
"^DD",300894,300894,4,0)
DATAGRID COLUMN HEADERS^300894.04^^4;0
"^DD",300894,300894,6,0)
DATA POPULATION RPC^P8994'^XWB(8994,^6;1^Q
"^DD",300894,300894,6,"DT")
3180213
"^DD",300894,300894,7,0)
POSSIBLE LOCATIONS RPC^P8994'^XWB(8994,^7;1^Q
"^DD",300894,300894,7,"DT")
3180213
"^DD",300894,300894,8,0)
LOCATIONS LABEL OVERRIDE TEXT^F^^8;1^K:$L(X)>20!($L(X)<1) X
"^DD",300894,300894,8,3)
Answer must be 1-20 characters in length.
"^DD",300894,300894,8,"DT")
3180926
"^DD",300894,300894,10,0)
RPC GET POSSIBLE FILTER VALUES^P8994'^XWB(8994,^10;1^Q
"^DD",300894,300894,10,"DT")
3180213
"^DD",300894,300894,12,0)
ACTION BUTTON TEXT^F^^12;1^K:$L(X)>80!($L(X)<1) X
"^DD",300894,300894,12,3)
Answer must be 1-80 characters in length.
"^DD",300894,300894,12,"DT")
3190627
"^DD",300894,300894,13,0)
ACTION BUTTON RPC^P8994'^XWB(8994,^13;1^Q
"^DD",300894,300894,13,"DT")
3190627
"^DD",300894,300894.01,0)
ACTIVE DIVISIONS SUB-FIELD^^.01^1
"^DD",300894,300894.01,0,"DT")
3180612
"^DD",300894,300894.01,0,"IX","B",300894.01,.01)

"^DD",300894,300894.01,0,"NM","ACTIVE DIVISIONS")

"^DD",300894,300894.01,0,"UP")
300894
"^DD",300894,300894.01,.01,0)
ACTIVE DIVISIONS^MP4'^DIC(4,^0;1^Q
"^DD",300894,300894.01,.01,1,0)
^.1
"^DD",300894,300894.01,.01,1,1,0)
300894.01^B
"^DD",300894,300894.01,.01,1,1,1)
S ^C9C(300894,DA(1),11,"B",$E(X,1,30),DA)=""
"^DD",300894,300894.01,.01,1,1,2)
K ^C9C(300894,DA(1),11,"B",$E(X,1,30),DA)
"^DD",300894,300894.01,.01,"DT")
3180612
"^DD",300894,300894.02,0)
BUTTON IMAGE SUB-FIELD^^.01^1
"^DD",300894,300894.02,0,"DT")
3180213
"^DD",300894,300894.02,0,"NM","BUTTON IMAGE")

"^DD",300894,300894.02,0,"UP")
300894
"^DD",300894,300894.02,.01,0)
BUTTON IMAGE^WLx^^0;1
"^DD",300894,300894.02,.01,3)
Byte Array
"^DD",300894,300894.02,.01,"DT")
3180213
"^DD",300894,300894.04,0)
DATAGRID COLUMN HEADERS SUB-FIELD^^2.5^8
"^DD",300894,300894.04,0,"DT")
3200214
"^DD",300894,300894.04,0,"IX","B",300894.04,.01)

"^DD",300894,300894.04,0,"IX","C9CORDER",300894.04,1)

"^DD",300894,300894.04,0,"NM","DATAGRID COLUMN HEADERS")

"^DD",300894,300894.04,0,"UP")
300894
"^DD",300894,300894.04,.01,0)
DATAGRID COLUMN HEADER^MF^^0;1^K:$L(X)>30!($L(X)<1)!'(X?.AP) X
"^DD",300894,300894.04,.01,1,0)
^.1
"^DD",300894,300894.04,.01,1,1,0)
300894.04^B
"^DD",300894,300894.04,.01,1,1,1)
S ^C9C(300894,DA(1),4,"B",$E(X,1,30),DA)=""
"^DD",300894,300894.04,.01,1,1,2)
K ^C9C(300894,DA(1),4,"B",$E(X,1,30),DA)
"^DD",300894,300894.04,.01,3)
Do not use semicolons!
"^DD",300894,300894.04,.01,"DT")
3180309
"^DD",300894,300894.04,.5,0)
COLUMN DATA TYPE^S^TEXT:TEXT;DATE:DATE;NUMERIC:NUMERIC;ROW COLOR:ROW COLOR;WEBSITE:WEBSITE;^0;2^Q
"^DD",300894,300894.04,.5,"DT")
3190909
"^DD",300894,300894.04,1,0)
ORDER^NJ2,0^^1;1^K:+X'=X!(X>30)!(X<1)!(X?.E1"."1.N) X
"^DD",300894,300894.04,1,1,0)
^.1
"^DD",300894,300894.04,1,1,300001,0)
300894.04^C9CORDER
"^DD",300894,300894.04,1,1,300001,1)
S ^C9C(300894,DA(1),4,"C9CORDER",$E(X,1,30),DA)=""
"^DD",300894,300894.04,1,1,300001,2)
K ^C9C(300894,DA(1),4,"C9CORDER",$E(X,1,30),DA)
"^DD",300894,300894.04,1,1,300001,"DT")
3180227
"^DD",300894,300894.04,1,3)
Type a number between 1 and 30, 0 decimal digits.
"^DD",300894,300894.04,1,"DT")
3180227
"^DD",300894,300894.04,2,0)
DISPLAY THIS COLUMN^S^1:YES;0:NO;^2;1^Q
"^DD",300894,300894.04,2,"DT")
3180227
"^DD",300894,300894.04,2.5,0)
DISPLAY HIDDEN COLUMN LOGIC^K^^5;E1,245^K:$L(X)>245 X D:$D(X) ^DIM
"^DD",300894,300894.04,2.5,3)
Enter Standard MUMPS code
"^DD",300894,300894.04,2.5,9)
@
"^DD",300894,300894.04,2.5,"DT")
3200214
"^DD",300894,300894.04,3,0)
CLICK RPC^P8994'^XWB(8994,^3;1^Q
"^DD",300894,300894.04,3,"DT")
3180301
"^DD",300894,300894.04,3.2,0)
CLICK RPC PARAMETER COLUMN IENS^F^^3;2^K:$L(X)>50!($L(X)<1) X
"^DD",300894,300894.04,3.2,3)
Column IENs to send as parameters separated by semicolons
"^DD",300894,300894.04,3.2,"DT")
3190604
"^DD",300894,300894.04,4,0)
HINT^F^^4;1^K:$L(X)>80!($L(X)<1) X
"^DD",300894,300894.04,4,3)
Answer must be 1-80 characters in length.
"^DD",300894,300894.04,4,"DT")
3180301
"^DD",300896,300896,0)
FIELD^^.5^2
"^DD",300896,300896,0,"DT")
3180925
"^DD",300896,300896,0,"IX","B",300896,.01)

"^DD",300896,300896,0,"NM","C9C DASHBOARD USER SETTINGS")

"^DD",300896,300896,.01,0)
USER^RP200'^VA(200,^0;1^Q
"^DD",300896,300896,.01,1,0)
^.1
"^DD",300896,300896,.01,1,1,0)
300896^B
"^DD",300896,300896,.01,1,1,1)
S ^C9C(300896,"B",$E(X,1,30),DA)=""
"^DD",300896,300896,.01,1,1,2)
K ^C9C(300896,"B",$E(X,1,30),DA)
"^DD",300896,300896,.01,3)
Pointer to File 200
"^DD",300896,300896,.01,"DT")
3180221
"^DD",300896,300896,.5,0)
DIVISION^300896.02P^^10;0
"^DD",300896,300896.02,0)
DIVISION SUB-FIELD^^9^10
"^DD",300896,300896.02,0,"DT")
3180925
"^DD",300896,300896.02,0,"IX","B",300896.02,.01)

"^DD",300896,300896.02,0,"NM","DIVISION")

"^DD",300896,300896.02,0,"UP")
300896
"^DD",300896,300896.02,.01,0)
DIVISION^MP4'^DIC(4,^0;1^Q
"^DD",300896,300896.02,.01,1,0)
^.1
"^DD",300896,300896.02,.01,1,1,0)
300896.02^B
"^DD",300896,300896.02,.01,1,1,1)
S ^C9C(300896,DA(1),10,"B",$E(X,1,30),DA)=""
"^DD",300896,300896.02,.01,1,1,2)
K ^C9C(300896,DA(1),10,"B",$E(X,1,30),DA)
"^DD",300896,300896.02,.01,"DT")
3180925
"^DD",300896,300896.02,1,0)
MODULE^300896.21P^^1;0
"^DD",300896,300896.02,2,0)
OVERALL WINDOW WIDTH^NJ5,0^^2;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,2,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,2,"DT")
3180925
"^DD",300896,300896.02,3,0)
OVERALL WINDOW HEIGHT^NJ5,0^^3;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,3,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,3,"DT")
3180925
"^DD",300896,300896.02,4,0)
FONT SIZE^S^8:8;9:9;10:10;11:11;12:12;^4;1^Q
"^DD",300896,300896.02,4,"DT")
3180925
"^DD",300896,300896.02,5,0)
SPLITTER LEFT HORIZONTAL POSITION^NJ5,0^^5;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,5,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,5,"DT")
3180925
"^DD",300896,300896.02,6,0)
SPLITTER RIGHT HORIZONTAL POSITION^NJ5,0^^6;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,6,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,6,"DT")
3180925
"^DD",300896,300896.02,7,0)
SPLITTER VERTICAL POSITION^NJ5,0^^7;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,7,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,7,"DT")
3180925
"^DD",300896,300896.02,8,0)
WINDOW LEFT^NJ5,0^^8;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,8,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,8,"DT")
3180925
"^DD",300896,300896.02,9,0)
WINDOW TOP^NJ5,0^^9;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.02,9,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.02,9,"DT")
3180925
"^DD",300896,300896.21,0)
MODULE SUB-FIELD^^2^2
"^DD",300896,300896.21,0,"DT")
3180925
"^DD",300896,300896.21,0,"IX","B",300896.21,.01)

"^DD",300896,300896.21,0,"NM","MODULE")

"^DD",300896,300896.21,0,"UP")
300896.02
"^DD",300896,300896.21,.01,0)
MODULE^MP300894'^C9C(300894,^0;1^Q
"^DD",300896,300896.21,.01,1,0)
^.1
"^DD",300896,300896.21,.01,1,1,0)
300896.21^B
"^DD",300896,300896.21,.01,1,1,1)
S ^C9C(300896,DA(2),10,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300896,300896.21,.01,1,1,2)
K ^C9C(300896,DA(2),10,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300896,300896.21,.01,"DT")
3180925
"^DD",300896,300896.21,2,0)
MODULE INSTANCE^300896.212^^1;0
"^DD",300896,300896.212,0)
MODULE INSTANCE SUB-FIELD^^6^7
"^DD",300896,300896.212,0,"DT")
3180925
"^DD",300896,300896.212,0,"IX","B",300896.212,.01)

"^DD",300896,300896.212,0,"NM","MODULE INSTANCE")

"^DD",300896,300896.212,0,"UP")
300896.21
"^DD",300896,300896.212,.01,0)
MODULE INSTANCE^MNJ2,0^^0;1^K:+X'=X!(X>99)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.212,.01,1,0)
^.1
"^DD",300896,300896.212,.01,1,1,0)
300896.212^B
"^DD",300896,300896.212,.01,1,1,1)
S ^C9C(300896,DA(3),10,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300896,300896.212,.01,1,1,2)
K ^C9C(300896,DA(3),10,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300896,300896.212,.01,3)
Type a number between 1 and 99, 0 decimal digits.
"^DD",300896,300896.212,.01,"DT")
3180925
"^DD",300896,300896.212,1,0)
FILTER ITEMS SHOWN^300896.2121^^1;0
"^DD",300896,300896.212,2,0)
NOW SHOWING^S^0:NO;1:YES;^2;1^Q
"^DD",300896,300896.212,2,"DT")
3180925
"^DD",300896,300896.212,3,0)
ORDER SHOWN^S^1:1;2:2;3:3;4:4;^3;1^Q
"^DD",300896,300896.212,3,"DT")
3180925
"^DD",300896,300896.212,4,0)
LOCATION SELECTION IEN^NJ5,0^^4;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.212,4,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.212,4,"DT")
3180925
"^DD",300896,300896.212,5,0)
SORT COLUMN^NJ5,0^^5;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.212,5,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.212,5,"DT")
3180925
"^DD",300896,300896.212,6,0)
SORT DIRECTION^S^Ascending:ASCENDING;Descending:DESCENDING;^6;1^Q
"^DD",300896,300896.212,6,"DT")
3180925
"^DD",300896,300896.2121,0)
FILTER ITEMS SHOWN SUB-FIELD^^1^2
"^DD",300896,300896.2121,0,"DT")
3180925
"^DD",300896,300896.2121,0,"IX","B",300896.2121,.01)

"^DD",300896,300896.2121,0,"NM","FILTER ITEMS SHOWN")

"^DD",300896,300896.2121,0,"UP")
300896.212
"^DD",300896,300896.2121,.01,0)
FILTER ITEM SHOWN IEN^MNJ5,0^^0;1^K:+X'=X!(X>99999)!(X<1)!(X?.E1"."1.N) X
"^DD",300896,300896.2121,.01,1,0)
^.1
"^DD",300896,300896.2121,.01,1,1,0)
300896.2121^B
"^DD",300896,300896.2121,.01,1,1,1)
S ^C9C(300896,DA(4),10,DA(3),1,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)=""
"^DD",300896,300896.2121,.01,1,1,2)
K ^C9C(300896,DA(4),10,DA(3),1,DA(2),1,DA(1),1,"B",$E(X,1,30),DA)
"^DD",300896,300896.2121,.01,3)
Type a number between 1 and 99999, 0 decimal digits.
"^DD",300896,300896.2121,.01,"DT")
3180925
"^DD",300896,300896.2121,1,0)
FILTER ITEM SHOWN NAME^F^^1;1^K:$L(X)>250!($L(X)<1) X
"^DD",300896,300896.2121,1,3)
Answer must be 1-250 characters in length.
"^DD",300896,300896.2121,1,"DT")
3180925
"^DIC",300890,300890,0)
C9C RULES ENGINE^300890
"^DIC",300890,300890,0,"GL")
^C9C(300890,
"^DIC",300890,300890,"%",0)
^1.005^^0
"^DIC",300890,"B","C9C RULES ENGINE",300890)

"^DIC",300892,300892,0)
C9C RULES^300892
"^DIC",300892,300892,0,"GL")
^C9C(300892,
"^DIC",300892,"B","C9C RULES",300892)

"^DIC",300894,300894,0)
C9C DASHBOARD MODULES^300894
"^DIC",300894,300894,0,"GL")
^C9C(300894,
"^DIC",300894,"B","C9C DASHBOARD MODULES",300894)

"^DIC",300896,300896,0)
C9C DASHBOARD USER SETTINGS^300896
"^DIC",300896,300896,0,"GL")
^C9C(300896,
"^DIC",300896,"B","C9C DASHBOARD USER SETTINGS",300896)

**END**
**END**
